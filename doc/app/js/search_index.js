var search_data = {"index":{"searchIndex":["abusereport","abusereportscontroller","admin","admininvitationscontroller","adminuserscontroller","settingscontroller","skinscontroller","statscontroller","usercreationscontroller","adminmailer","adminpost","adminposttag","adminposttagging","adminpostscontroller","adminsession","adminsessionscontroller","adminsetting","adminscontroller","advancedsearchhelper","alphabethelper","applicationcontroller","applicationhelper","archivefaq","archivefaqscontroller","autocompletecontroller","banned","bookmark","bookmarkscontroller","bookmarkshelper","cachehelper","castnomination","category","challenge","giftexchangecontroller","promptmemecontroller","challengeassignment","challengeassignmentscontroller","challengeclaim","challengeclaimscontroller","challengehelper","challengerequestscontroller","challengesignup","challengesignupobserver","challengesignupsweeper","challengesignupscontroller","challengesweeper","challengescontroller","chapter","chaptersweeper","chapterscontroller","chaptershelper","character","characternomination","collection","collectionitem","collectionitemscontroller","collectionobserver","collectionparticipant","collectionparticipantscontroller","collectionpreference","collectionprofile","collectionprofilecontroller","collectionsweeper","collectionscontroller","collectionshelper","comment","commentmailer","commentobserver","commentsweeper","commentscontroller","commentshelper","commontagging","creationobserver","creatorship","datehelper","devmodecontroller","downloadscontroller","emailveracityvalidator","errorscontroller","externalauthor","externalauthorname","externalauthorscontroller","externalauthorshelper","externalcreatorship","externalwork","externalworkscontroller","fandom","fandomnomination","fandomscontroller","feedsweeper","feedback","feedbackscontroller","filtercount","filtertagging","freeform","freeformnomination","gift","giftexchange","giftscontroller","hitcounter","homecontroller","homehelper","inboxcomment","inboxcontroller","inboxhelper","invitation","invitationscontroller","invitationshelper","inviterequest","inviterequestscontroller","knownissue","knownissuescontroller","kudo","kudomailer","kudoobserver","kudoscontroller","kudossweeper","language","languagescontroller","locale","localescontroller","logitem","media","mediacontroller","metatagging","object","offer","opendoors","externalauthorscontroller","toolscontroller","orphanscontroller","orphanshelper","ownedsettagging","ownedtagset","ownedtagsetscontroller","passwordscontroller","people","peoplecontroller","potentialmatch","potentialmatchsettings","potentialmatchescontroller","potentialpromptmatch","preference","preferencescontroller","profile","profilecontroller","prompt","promptmeme","promptrestriction","promptrestrictionshelper","promptscontroller","pseud","pseudsweeper","pseudscontroller","pseudshelper","rating","reading","readingscontroller","redirectcontroller","redismailqueue","relatedwork","relatedworkscontroller","relationship","relationshipnomination","request","role","rolesuser","searchcontroller","searchhelper","serialwork","serialworkscontroller","series","seriescontroller","serieshelper","settagging","skin","skinparent","skinscontroller","skinshelper","statcounter","static","basecontroller","collectionscontroller","fandomscontroller","mediacontroller","restrictedworkscontroller","workscontroller","staticsweeper","statscontroller","statshelper","storyparser","error","subscription","subscriptionscontroller","tag","tagnomination","tagnominationscontroller","tagset","tagsetassociation","tagsetassociationscontroller","tagsetnomination","tagsetnominationscontroller","tagsetownership","tagsetsweeper","tagsetshelper","tagsweeper","tagwranglerscontroller","tagwranglingscontroller","tagging","tagscontroller","tagshelper","translationhelper","translationnote","translationnotescontroller","translationscontroller","translatorscontroller","unsortedtag","unsortedtagscontroller","urlactivevalidator","urlformatvalidator","user","userinviterequest","userinviterequestscontroller","userinviterequestshelper","usermailer","usersession","usersessionscontroller","userscontroller","usershelper","validationhelper","warning","weightedrandom","work","worklink","worklinkscontroller","workobserver","workskin","worksweeper","workscontroller","workshelper","wranglingassignment","+()","-()","<=>()","<=>()","<=>()","<=>()","<=>()","<=>()","<=>()","<=>()","==()","_get_view_paths()","abbreviated_display_title()","abuse_report()","abuse_report()","access_denied()","account_creation_enabled?()","activate()","activate()","activate()","activation()","active?()","add()","add_association()","add_association()","add_association()","add_association()","add_cancel_comment_reply_link()","add_comment()","add_comment_reply()","add_comment_reply_link()","add_feedback_to_inbox()","add_filter_tagging()","add_filter_tagging()","add_filter_taggings()","add_filter_taggings()","add_filters()","add_media_for_uncategorized()","add_missing_filter_taggings()","add_moderator()","add_name_link()","add_owner()","add_parent_string()","add_tagnames()","add_tags_to_autocomplete()","add_to_autocomplete()","add_to_autocomplete()","add_to_autocomplete()","adjust_filter_counts()","adjust_restricted()","adjust_series_restriction()","adjust_series_visibility()","adjust_threading()","admin_logout_required()","admin_only()","admin_only_access_denied()","admin_update()","advanced_search_string=()","after_create()","after_create()","after_create()","after_create()","after_create()","after_create()","after_create()","after_create()","after_create()","after_create()","after_destroy()","after_destroy()","after_destroy()","after_destroy()","after_destroy()","after_destroy()","after_destroy()","after_save()","after_save()","after_save()","after_save()","after_save()","after_update()","after_update()","after_update()","after_update()","after_update()","after_update()","after_update()","after_update()","after_update()","akismet_attributes()","akismet_attributes()","all()","all_approved_bookmarks()","all_approved_bookmarks_count()","all_approved_works()","all_approved_works_count()","all_characters()","all_fandoms()","all_fandoms_count()","all_kudos_count()","all_members()","all_moderators()","all_owners()","all_participants()","all_posting_participants()","allfandoms()","allow_any?()","allow_name_change?()","allow_tinymce?()","allowed()","allowed_css_instructions()","allowed_html_instructions()","allowed_tags()","allowed_to_destroy()","allowed_to_destroy()","allowed_to_destroy()","allowed_to_destroy()","allowed_to_destroy()","allowed_to_destroy()","allowed_to_promote()","allowed_to_see()","allpseuds()","alpha_paginated_section()","already_approved?()","already_in_set?()","already_nominated?()","already_rejected?()","anonymous?()","anonymous?()","anonymous?()","approve()","approve()","approve!()","approve_automatically()","approve_by_collection()","approve_by_user()","approve_membership!()","approved?()","approved_by_collection()","approved_by_collection?()","approved_by_user()","approved_by_user?()","approved_or_owned_by()","archive_notification()","archive_notification()","archivist()","archivist=()","assign()","assign_offer!()","assign_request!()","assign_tags()","assignment_notification()","assignments_not_sent()","assignments_sent()","assignments_sent()","associated_tags()","associations_to_remove()","associations_to_remove=()","associations_to_remove=()","async()","author_attributes=()","author_attributes=()","author_attributes=()","author_name()","author_tags()","authored_items()","authors()","authors_header()","autocomplete_fandom_lookup()","autocomplete_lookup()","autocomplete_lookup()","autocomplete_options()","autocomplete_prefixes()","autocomplete_prefixes()","autocomplete_prefixes()","autocomplete_prefixes()","autocomplete_prefixes()","autocomplete_score()","autocomplete_score()","autocomplete_score()","autocomplete_search_string()","autocomplete_search_string_was()","autocomplete_value()","autocomplete_value()","backtrace_view()","banned()","banner_on()","base_nom_query()","basic_formatting()","batch_kudo_notification()","batch_load()","batch_subscription_notification()","before_destroy()","before_destroy()","before_destroy()","before_destroy()","before_destroy()","before_update()","before_update()","before_update()","before_update()","blank?()","block_import()","blurb_tag_block()","bookmark_form_path()","bookmark_if_exists()","bookmark_link()","browse()","build_from_taggings()","build_nominations()","build_post_info()","build_post_info()","build_prompts()","by_name_without_articles()","by_name_without_articles()","byline()","byline()","byline()","byline()","byline_key()","cache!()","cache_expiration()","cached()","can_change_type?()","can_delete?()","can_delete?()","can_nominate()","can_see_work()","can_wrangle?()","cancel_comment()","cancel_comment_button()","cancel_comment_delete()","cancel_comment_edit()","cancel_comment_reply()","cancel_comment_reply_link()","cancel_delete_comment_link()","cancel_generate()","cancel_generation()","cancel_posting_and_redirect()","canceled?()","challenge?()","challenge_assignment_byline()","challenge_assignment_email()","challenge_assignment_ids()","challenge_assignment_ids=()","challenge_assignment_notification()","challenge_claim_ids()","challenge_class_name()","challenge_participants()","change_bookmarks_ownership()","change_challenge_participation()","change_collections_membership()","change_email()","change_email()","change_gift_recipients()","change_membership()","change_openid()","change_ownership()","change_ownership()","change_password()","change_tagname!()","change_tagname?()","change_username()","chapter_attributes=()","chapter_header()","chapter_name()","chapter_title()","chapter_total_display()","chaptered?()","chapters_in_order()","character()","character_in_fandom()","character_string=()","character_tagnames()","characters()","characters()","characters()","check_account_creation_status()","check_all_none()","check_assignments_not_sent()","check_assignments_not_sent()","check_assignments_sent()","check_backdate_box()","check_canonical()","check_default_pseud()","check_editability()","check_filter_counts()","check_filter_taggings()","check_for_file()","check_for_invalid_chapters()","check_for_previous_import()","check_for_spam()","check_for_spam()","check_for_spam?()","check_for_spam?()","check_gift_received()","check_history_enabled()","check_media()","check_ownership()","check_ownership_or_admin()","check_parent_box()","check_permission()","check_permission()","check_permission()","check_permission()","check_permission()","check_permission()","check_permission_to_delete()","check_permission_to_edit()","check_permission_to_wrangle()","check_queue()","check_signup_closed()","check_signup_closed()","check_signup_open()","check_signup_open()","check_synonym()","check_tag_wrangler_access()","check_title()","check_type_changes()","check_user_status()","check_visibility()","check_visibility()","check_warning()","check_wrangling_status()","checkbox_section()","checkbox_section_css_class()","checkbox_section_toggle()","child_types()","child_types()","child_types()","child_types()","child_types()","child_types()","choice()","claim()","claim!()","claim_by()","claim_byline()","claim_notification()","claim_title()","claimable?()","claimed()","claimed?()","claimed?()","claiming_pseud()","claiming_user()","classes_for_main()","clean_and_split_tags()","clean_and_validate_title()","clean_close_html_tags()","clean_css()","clean_css()","clean_media()","clean_storytext()","clean_tags()","clean_up_challenge()","clean_up_creatorships()","cleanup_outdated_associations()","cleanup_url()","cleanup_url()","clear()","clear!()","clear!()","clear_assignment()","clear_assignments_and_claims()","clear_cache!()","clear_claims()","clear_flash_cookie()","clear_icon()","clear_icon()","clear_nominations!()","clear_queue()","closed?()","coauthor_notification()","coauthored_works()","coauthors()","collect_update_multiple_results()","collection_depth()","collection_fullname()","collection_is_open()","collection_link()","collection_maintainers_only()","collection_notification()","collection_owners_only()","collection_parent_name()","comment_notification()","comment_notification()","comment_owner()","comment_owner_email()","comment_owner_name()","comment_reply_notification()","comment_sent_notification()","comment_work()","comment_works()","commentable_description_link()","commentable_name()","commentable_name()","commentable_name()","commentable_name()","commentable_object()","commentable_owners()","commentable_owners()","comments()","compare()","compare_all()","compare_all()","compare_with_users()","complete_claim()","completeness()","confirm_delete()","confirm_delete_multiple()","conflict()","convert_rating()","convert_rating_string()","convert_revised_at()","copy_tag_set_from_offer_to_request()","correct_number_of_tags()","count_all_comments()","count_all_comments()","count_by_fandom?()","count_unread()","count_visible_bookmarks()","count_visible_comments()","cover()","cover_default()","create()","create()","create()","create()","create()","create()","create()","create()","create()","create()","create()","create()","create()","create()","create()","create()","create()","create()","create()","create()","create()","create()","create()","create()","create()","create()","create()","create()","create()","create()","create()","create()","create()","create()","create()","create()","create()","create()","create()","create()","create()","create_canonical()","create_default()","create_default_associateds()","create_default_name()","create_epub_files()","create_log_item()","create_mobi_html()","create_or_increment()","create_stat_counter()","create_work()","create_work_html()","creation_name()","creations()","creator_link()","current_admin()","current_admin_session()","current_user()","current_user_owns?()","current_user_session()","date_in_user_time_zone()","days_to_purge_unactivated()","default()","default()","default()","default()","default()","default_all()","default_date()","default_name()","default_pseud()","default_skin()","defaulted()","defaulted=()","delayed_generate()","delayed_send_out()","delete_comment()","delete_comment_link()","delete_confirmation()","delete_empty_series()","delete_icon()","delete_icon()","delete_icon=()","delete_icon=()","delete_icon?()","delete_icon?()","delete_multiple()","delete_signup_notification()","delete_unused_tags()","delete_work_notification()","delete_works()","deliver_kudos()","deliver_subscriptions()","description()","description_required?()","destroy()","destroy()","destroy()","destroy()","destroy()","destroy()","destroy()","destroy()","destroy()","destroy()","destroy()","destroy()","destroy()","destroy()","destroy()","destroy()","destroy()","destroy()","destroy()","destroy()","destroy()","destroy()","destroy()","destroy()","destroy()","destroy()","destroy()","destroy()","destroy()","destroy()","destroy()","destroy()","destroy()","destroy()","destroy()","destroy()","destroy()","destroy_chapters_in_reverse()","destroy_if_blank()","destroy_multiple()","development_only()","disable_work_skin?()","discuss()","display_authors()","display_title()","distance_of_time_in_words()","distance_of_time_in_words_to_now()","do_assign_offer!()","do_assign_request!()","do_batch_load()","do_cancel_delete_comment_link()","do_notify()","do_redirect()","do_search()","donate()","download_and_parse_chapter_of_work()","download_and_parse_chaptered_story()","download_and_parse_chapters_into_story()","download_and_parse_story()","download_authors()","download_basename()","download_chaptered_from_efiction()","download_chaptered_from_ffnet()","download_dir()","download_epub()","download_fandoms()","download_folder()","download_from_lj()","download_html()","download_mobi()","download_pdf()","download_text()","download_title()","download_url_for_work()","download_with_timeout()","drafts()","edit()","edit()","edit()","edit()","edit()","edit()","edit()","edit()","edit()","edit()","edit()","edit()","edit()","edit()","edit()","edit()","edit()","edit()","edit()","edit()","edit()","edit()","edit()","edit()","edit_comment_link()","edit_multiple()","edit_tags()","edit_work_notification()","editable?()","edited_comment_notification()","edited_comment_notification()","edited_comment_reply_notification()","empty?()","enable_test_caching?()","encoding()","end_banner()","end_first_login()","ensure_associated()","ensure_revised_at()","error_messages_for()","error_messages_formatted()","escaped()","exact_match?()","expand_contract_all()","expand_contract_shuffle()","expire_cache()","export_csv()","external=()","external_author()","external_author=()","external_work()","external_work_creatorships()","external_work_creatorships()","fallback_url_for_comment()","fallback_url_for_top_level()","fandom()","fandom_count()","fandom_string=()","fandoms()","fandoms()","fandoms()","featured()","feed()","feed_summary()","feedback()","feedback()","fetch()","fetch()","fetch_admin_settings()","fetch_recent()","field_attribute()","field_id()","field_name()","field_with_unique_id()","filter()","find()","find()","find()","find_all_comments()","find_all_comments()","find_by_id()","find_by_name()","find_by_tag()","find_locale()","find_locale()","find_main_cached()","find_main_translations()","find_or_create_by_name()","find_or_invite()","find_with_options()","finish_generation()","first_chapter()","first_login_help()","first_save?()","fix_positions()","fix_positions_after_destroy()","fix_time_zone()","flash_div()","for_claims()","for_tag_set()","for_tag_set()","for_tag_set()","for_user()","forbidden()","forward()","freeform()","freeform_string=()","freeforms()","freeforms()","freeforms()","from_params()","fulfilled?()","fulfilled?()","fulfilled_claims()","generate()","generate()","generate()","generate()","generate_attachment_content_from_signup()","generate_attachment_content_from_work()","generate_countdown_html()","generate_for_signup()","generate_in_background()","generate_password()","generate_progress()","generate_summary()","generate_summary_in_background()","generate_summary_tags()","get_all_child_ids()","get_all_parent_ids()","get_all_parents()","get_bookmark_embed_link()","get_bookmark_link_text()","get_cached_style()","get_category_class()","get_chapter_from_work_params()","get_collection_item()","get_collection_item()","get_collection_names()","get_commenter_pseud_or_name()","get_controller_dir()","get_css()","get_current_site_skin()","get_current_version()","get_embed_link()","get_endnotes_link()","get_external_author_from_invitation()","get_id()","get_ie_comment()","get_last_modified()","get_links_to()","get_maintainers_email()","get_media()","get_media_for_filename()","get_new_bookmark_path()","get_owned_tag_set()","get_owned_tag_set()","get_page_title()","get_parent_child_tags()","get_parent_tagname()","get_parent_tagname()","get_participants_for_user()","get_participating_pseuds_for_user()","get_prompt_restriction()","get_prompt_restriction()","get_prompt_restriction()","get_prompt_restriction()","get_ratings_class()","get_role()","get_sheet_role()","get_skin_cache()","get_source_if_known()","get_style()","get_style_block()","get_symbol_for_bookmark()","get_symbol_link()","get_symbols_for()","get_tags_to_associate()","get_title_string()","get_url_to_look_for()","get_view_dir()","get_view_paths()","get_warnings_class()","get_wizard_settings()","gift_exchange?()","gift_exchange_to_csv()","gift_notification()","grant_all()","grant_empty()","grant_invites_to_users()","guest?()","guest_downloading_off()","guest_downloading_off?()","guest_kudos_count()","has_child?()","has_name_or_pseud()","has_no_credentials?()","has_other_owners()","has_parent?()","has_required_tags?()","has_tags?()","has_type?()","hide()","hide_banner()","hide_comments()","hide_comments_link()","hide_freeform?()","hide_hit_counts()","hide_recent()","hide_warnings?()","hits_to_database()","hits_to_database()","html_to_text()","human()","i18n_key()","icon_display()","import()","import_basic_formatting()","import_from_urls()","import_multiple()","import_single()","in_chooser()","in_progress?()","in_prompt_restriction()","in_prompt_restriction()","in_series()","in_tag_set()","inbox_reply_link()","index()","index()","index()","index()","index()","index()","index()","index()","index()","index()","index()","index()","index()","index()","index()","index()","index()","index()","index()","index()","index()","index()","index()","index()","index()","index()","index()","index()","index()","index()","index()","index()","index()","index()","index()","index()","index()","index()","index()","index()","index()","index()","index()","index()","index()","index()","index()","index()","index()","index()","index()","index()","index()","index()","index()","index()","index()","index()","index()","index()","index()","index()","index_approved()","index_rejected()","indirect_bookmarks()","inherit_meta_tags()","inherit_parents()","init_redis()","init_redis()","inspect_view()","internal_server_error()","interrupt_key()","invitation()","invitation_to_claim()","invite()","invite_and_remove()","invite_friend()","invite_from_queue()","invite_from_queue_at()","invite_from_queue_enabled?()","invite_from_queue_frequency()","invite_from_queue_number()","invite_increase_notification()","invitee_link()","is_admin?()","is_archivist?()","is_author_of?()","is_author_of?()","is_complete()","is_invited?()","is_maintainer?()","is_member?()","is_moderator?()","is_none?()","is_only_chapter?()","is_owner?()","is_registered_user?()","is_sole_author_of?()","is_subset_of?()","is_superset_of?()","is_tag_wrangler?()","is_translation_admin?()","is_wip()","item_creator_names()","item_creator_pseuds()","item_date()","join()","join_fandom_nomination()","known_fandom()","kudo_notification()","label_for_filter()","language_link()","last_chapter()","last_posted_chapter()","last_reply_by()","link_to_add_section()","link_to_bookmarkable_bookmarks()","link_to_comment_ultimate_parent()","link_to_edit_tag()","link_to_help()","link_to_letter()","link_to_previous_invite_requests()","link_to_remote()","link_to_remove_section()","link_to_rss()","link_to_tag()","link_to_tag_bookmarks()","link_to_tag_with_count()","link_to_tag_with_text()","link_to_tag_works()","link_to_tag_works_with_text()","link_to_user_bookmarkable_bookmarks()","link_to_with_tag_class()","list_challenges()","list_controllers()","list_views()","live_validation_for_field()","live_validation_varname()","live_validation_wrapper()","load_archive_parents()","load_assignment_from_id()","load_batch_associations!()","load_bookmark()","load_bookmarkable()","load_challenge()","load_challenge()","load_challenge()","load_challenge()","load_challenge()","load_challenge()","load_claim_from_id()","load_collectible_item()","load_collection()","load_collection()","load_collection_from_id()","load_comment()","load_commentable()","load_erb()","load_external_author()","load_item_and_collection()","load_locales()","load_media()","load_nomination()","load_orphans()","load_participant_and_collection()","load_potential_match_from_id()","load_prompt_from_id()","load_pseuds()","load_serial_work()","load_series()","load_signup()","load_signup_from_id()","load_site_css()","load_skin()","load_static_controller()","load_tag()","load_tag_set()","load_tag_set()","load_tag_set()","load_user()","load_user()","load_user()","load_user()","load_user()","load_user()","load_user()","load_user()","load_user()","load_user()","load_user_and_work()","load_work()","locales_menu()","log_item_action_name()","logged_in?()","logged_in_as_admin?()","logout_if_not_user_credentials()","logs_to_database()","logs_to_database()","mailto_link()","maintainer_or_signup_owner_only()","maintainer_or_signup_owner_only()","maintainers()","make_official!()","manage()","manage()","manage()","manage()","manage()","mark_as_ham!()","mark_as_ham!()","mark_as_redeemed()","mark_as_spam!()","mark_as_spam!()","mark_invitation_redeemed()","mark_to_read_later()","markasread_link()","marked_for_later?()","marktoread()","marktoread_link()","mass_archive_notification()","mass_update()","mass_update()","match()","match()","match_rank()","matching_tags()","media_string=()","medias()","medias()","medias()","merge()","merge_similar()","merger_string=()","meta_tag_string=()","meta_tag_tree()","meta_tag_validation()","method_missing()","method_not_allowed()","model_name()","moderated?()","moderator_changes()","moderator_changes=()","moderators_only()","moderators_only()","most_popular_tags()","most_popular_tags()","multipart?()","must_have_owners()","name()","name()","name_to_id()","names()","names_by_parent()","names_by_parent()","names_with_count()","namespace_notes()","naturalized()","navigate()","nested_field_id()","nested_field_name()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","no_assignment()","no_assignment()","no_challenge()","no_challenge()","no_challenge()","no_challenge()","no_challenge()","no_challenge()","no_circular_skin()","no_claim()","no_collection()","no_match?()","no_match_required?()","no_midstream_nomination_changes()","no_participant()","no_prompt()","no_reserved_strings()","no_signup()","no_signup()","no_site_parent()","no_tags()","no_user()","no_user()","nominated_only()","nominated_parents()","nominated_parents()","nominated_tags()","nomination_limits()","nomination_notes()","nomination_status()","nomination_status_span()","non_anonymous_byline()","non_anonymous_text_byline()","noncanonical_info_class()","noncanonical_tag()","not_allowed()","not_already_reviewed()","not_empty?()","not_existing()","not_found()","not_implemented()","not_orphaned()","not_signup_owner()","not_signup_owner()","notify()","notify_and_show_confirmation_screen()","notify_co_authors()","notify_maintainers()","notify_of_author_reveal()","notify_of_reveal()","notify_of_status_change()","notify_parent_owners()","notify_parents()","notify_prompters()","notify_recipients()","notify_subscribers()","notify_user_by_email?()","notify_user_by_email?()","notify_user_by_inbox?()","notify_user_of_claim()","notify_user_of_own_comments?()","number_of_chapters()","number_of_posted_chapters()","number_of_prompts()","offer_byline()","offering_pseud()","offering_user()","open_collection_names()","opendoors_only()","openid()","openid_small()","order_by_offering_pseud()","order_by_requesting_pseud()","original_ultimate_parent()","orphan()","orphan()","orphan()","orphan_account()","owned_by()","owned_by()","owned_tag_set_ids()","owned_tag_sets()","owner_changes()","owner_changes=()","owner_only()","owner_only()","owners()","owners_only()","owners_required()","params_without()","parent_attributes=()","parent_exists()","parent_is_allowed()","parent_name()","parent_name=()","parent_names()","parent_names()","parent_skin_title()","parent_skin_title=()","parent_tagname()","parent_tagname=()","parent_types()","parent_types()","parent_types()","parent_types()","parent_types()","parents()","parse_author()","parse_author_common()","parse_author_from_lj()","parse_author_from_minotaur()","parse_author_from_unknown()","parse_author_from_yuletide()","parse_autocomplete_value()","parse_autocomplete_value()","parse_byline()","parse_bylines()","parse_chapter_of_work()","parse_chapters_into_story()","parse_common()","parse_media_from_filename()","parse_sheet_role()","parse_story()","parse_story_from_deviantart()","parse_story_from_dw()","parse_story_from_ffnet()","parse_story_from_lj()","parse_story_from_lotrfanfiction()","parse_story_from_modified_efiction()","parse_story_from_twilightarchives()","parse_story_from_unknown()","parse_story_from_yuletide()","partial_match?()","passwd()","passwd_small()","people_paginated_section()","perform()","perform()","perform()","perform()","perform()","pinch_hitter_byline()","pinch_hitter_byline=()","pinch_request_byline()","pinch_request_byline=()","plural()","position()","post()","post_draft()","post_first_chapter()","posted?()","posted?()","posted_works()","potential_match_generation_notification()","preview()","preview()","preview()","preview_tags()","print_bookmarks_link()","print_coauthors()","print_gifts_link()","print_pseud_bookmarks_link()","print_pseud_list()","print_pseud_selector()","print_pseud_series_link()","print_pseud_works_link()","print_pseuds()","print_series_link()","print_works()","print_works_link()","process_dir()","process_file()","profile_logs()","progress()","progress_key()","prompt_meme?()","prompt_meme_to_csv()","prompt_restriction_settings()","prompt_tags()","prompter_notification()","proposed_fill_date()","pseud()","pseud_link()","pseud_text()","pseuds()","published_at()","published_at()","purge()","purge_old_drafts()","queue_kudo()","queue_subscription()","random_chapter()","random_search_tip()","random_sentence()","rating_selected()","read_inbox_comments()","reading_object()","rec_counts_for_pseuds()","recategorize()","reccers()","recipient()","recipient=()","recipient_is_not_registered()","recipient_notification()","recipients()","recipients()","recipients=()","recipients_link()","redirect_back_or_default()","redirect_to_all_comments()","redirect_to_comment()","reject()","reject()","reject_by_collection()","reject_by_user()","reject_children()","rejected?()","rejected_by_collection()","rejected_by_collection?()","rejected_by_user()","rejected_by_user?()","related_work_notification()","relationship()","relationship_in_fandom()","relationship_string=()","relationship_tagnames()","relationships()","relationships()","relationships()","remove()","remove=()","remove_association()","remove_author()","remove_author()","remove_filter_tagging()","remove_filter_tagging()","remove_filter_tagging()","remove_filter_taggings()","remove_from_autocomplete()","remove_from_autocomplete()","remove_from_autocomplete()","remove_from_queue()","remove_invalid()","remove_me_from_preferences()","remove_meta_filters()","remove_name_link()","remove_outdated_downloads()","remove_pseud_from_kudos()","remove_stale_from_autocomplete()","remove_sub_filters()","remove_tag_association_label()","remove_tagnames()","remove_tags_from_autocomplete()","render_mobi_html()","render_orphan_partial()","render_xhtml()","reorder()","reorder()","reorder()","reorder()","replace_me_with_default()","reply()","request()","request_byline()","request_byline()","request_noncanonical_info()","request_to_array()","requesting_pseud()","requesting_pseud()","require_login()","require_unique?()","require_unique_tagname_with_parent()","require_unique_tagnames()","required()","required_and_allowed()","required_and_allowed_boolean()","reset_filter_count()","reset_order()","reset_password()","reset_positions_in_collection!()","reset_user_password()","respond_to?()","restricted?()","restricted_tags()","reveal!()","reveal!()","reveal_authors!()","reviewed?()","reviewed?()","revised_at()","rows_for_words()","sanitized_content()","save_chapters()","save_creatorships()","save_parents()","scan_text_for_meta()","search()","search()","search()","search()","search_by_role()","search_header()","see_adult?()","seedusers()","seedworks()","send_activation()","send_author_reveal_notifications()","send_external_invites()","send_notification()","send_out()","send_out()","send_out()","send_reveal_notifications()","series_attributes=()","series_data_for_work()","series_list_for_feeds()","series_removal_confirmation()","set()","set()","set()","set_all()","set_anonymous_and_unrevealed()","set_approval_status()","set_approval_status()","set_author_attributes()","set_base_locale()","set_challenge_claim_info()","set_challenge_info()","set_chapter_attributes()","set_current_user()","set_default_skin()","set_depth()","set_flash_cookie()","set_format_for_date()","set_instance_variables()","set_instance_variables_tags()","set_last_wrangler()","set_limit()","set_new_recipients()","set_owned_tag_sets()","set_parent()","set_parented()","set_preferred_locale()","set_pseud()","set_redirects()","set_revised_at()","set_site_skin()","set_sort_order()","set_stats_updated_at()","set_tag_set_nomination()","set_tag_status()","set_thread_for_replies()","set_time_zone()","set_time_zone()","set_up_generating()","set_url_status()","set_word_count()","set_word_count()","set_work_attributes()","setflash()","setup_for_review()","shift_chapter_attributes()","should_exist?()","show()","show()","show()","show()","show()","show()","show()","show()","show()","show()","show()","show()","show()","show()","show()","show()","show()","show()","show()","show()","show()","show()","show()","show()","show()","show()","show()","show()","show()","show()","show()","show()","show()","show()","show()","show()","show()","show()","show()","show()","show()","show()","show()","show()","show()","show()","show()","show()","show()","show_advanced_skin?()","show_auth_error()","show_collection_preface()","show_collection_profile_navigation()","show_collection_section()","show_collections_data()","show_comments()","show_comments_link()","show_hidden()","show_hidden_tags_link()","show_hide_comments_link()","show_hit_count?()","show_hit_count_to_public?()","show_multiple()","show_options()","show_series_data()","show_work_notes?()","show_wrangling_dashboard()","signup_closed()","signup_closed()","signup_notification()","signup_open()","signup_open()","signup_owner_only()","signup_owner_only()","singular()","site_map()","site_pages()","site_skins()","site_skins_dir()","skin_author_link()","skin_dir_entries()","skin_dirname()","skin_preview_display()","skins_dir()","sole_authored_works()","sort_by_recent()","sort_by_recent_featured()","sort_link()","sorted_and_filtered()","sorted_authors()","sorted_pseuds()","sorted_title()","span_if_current()","squish_name()","standard_icon()","stats_updated_at()","stats_view()","store_location()","string()","strip_title()","stylesheet_link()","sub_tag_string=()","sub_tag_tree()","subject_text()","submit_button()","submit_fieldset()","subscription_notification()","summary()","summary_dir()","summary_file()","suspend_filter_counts?()","syn_string()","syn_string=()","synonyms()","table_name_prefix()","tag()","tag_category_name()","tag_cloud()","tag_comment_as_spam_link()","tag_comment_link()","tag_groups()","tag_groups()","tag_groups()","tag_groups()","tag_in_fandom()","tag_link_list()","tag_list()","tag_list()","tag_list()","tag_list=()","tag_relation_to_list()","tag_search_result()","tag_set_ids()","tag_sets_to_add()","tag_sets_to_add=()","tag_sets_to_remove()","tag_sets_to_remove=()","tag_string()","tag_string=()","tag_unlinked_list()","tag_with_link_to_edit()","tag_wrangler()","tag_wrangler=()","tag_wrangler_footer()","tag_wrangling_off?()","taggable_list()","taglist()","tagnames()","tagnames_must_exist()","tagnames_to_list()","tagnames_to_remove()","tags()","tags_in_set()","tags_in_sets()","text_byline()","time_ago_in_words()","time_in_zone()","times_nominated()","title()","title()","title()","title_for_comment_page()","title_required?()","to_notify()","to_param()","to_param()","to_param()","to_param()","to_param()","to_param()","to_param()","to_s()","to_s()","to_s()","top_level?()","topmost_tag_type()","topmost_tag_type()","topmost_tag_type()","tos()","tos_faq()","tos_field_name()","translation_admin()","translation_admin=()","translation_status()","truncate_on_word_boundary()","type_validity()","ultimate_parent()","unassigned()","uncategorized()","unclaim!()","unclaimed()","uncover_default()","undefault()","unfulfilled?()","unfulfilled_claims()","unfulfilled_in_collection()","unfulfilled_in_collection()","unique_tags()","unposted_for_user()","unposted_in_collection()","unposted_in_collection()","unposted_work()","unposted_works()","unposted_works()","unprocessable_entity()","unread_inbox_comments()","unread_inbox_comments_count()","unregister_imports()","unrestricted()","unrestricted=()","unrevealed?()","unrevealed?()","unrevealed?()","unreviewed()","unreviewed?()","unreviewed?()","unreviewed_by_collection()","unreviewed_by_user()","unset()","unwrangleable_status()","unwrangled()","unwrangled?()","update()","update()","update()","update()","update()","update()","update()","update()","update()","update()","update()","update()","update()","update()","update()","update()","update()","update()","update()","update()","update()","update()","update()","update()","update()","update()","update()","update()","update()","update()","update()","update()","update_allowed_values()","update_allowed_values()","update_child_parent_tagnames()","update_complete_status()","update_feedback_in_inbox()","update_filter_counts_since()","update_filters_for_canonical_change()","update_filters_for_merger_change()","update_major_version()","update_minor_version()","update_multiple()","update_multiple()","update_multiple()","update_multiple()","update_multiple()","update_or_create()","update_or_create_in_database()","update_placeholder_assignments!()","update_positions()","update_positions()","update_positions()","update_tags()","update_thread()","update_user()","update_wrangler()","update_wrangler()","url_required?()","url_update()","usable()","usable()","use_tinymce()","user()","user_allowed_to_destroy?()","user_allowed_to_destroy?()","user_allowed_to_destroy?()","user_allowed_to_destroy?()","user_allowed_to_promote?()","user_allowed_to_see?()","user_allowed_to_see_claims?()","user_allowed_to_see_prompt?()","user_allowed_to_see_requests_summary?()","user_allowed_to_see_signups?()","user_allowed_to_see_signups?()","user_is_maintainer?()","user_is_moderator?()","user_is_moderator?()","user_is_owner?()","user_is_owner?()","user_is_participant?()","user_is_posting_participant?()","user_logout_required()","user_name()","users_only()","valid_colors()","valid_font()","valid_media()","valid_public_preview()","valid_sort_column()","valid_sort_direction()","validate_authors()","validate_authors()","validate_date_of_birth()","validate_each()","validate_each()","validate_each()","validate_published_at()","validate_published_at()","value_for_comment_form()","visibility_changed?()","visible()","visible()","visible()","visible()","visible()","visible?()","visible?()","visible?()","visible?()","visible_bookmarks_count()","visible_external_works_count()","visible_recs_count()","visible_taggables_count()","visible_to_user()","visible_word_count()","visible_work_count()","visible_work_count()","visible_works_count()","visible_works_count()","warning_display_name()","wip_length()","wip_length()","wip_length=()","wip_length=()","wipeout_unposted_works()","with_popularity_relative_to_average()","with_type()","with_type_from_redis()","work_blurb_cache_key()","work_count()","work_counts_for_pseuds()","work_meta_cache_key()","work_meta_list()","work_parent_value()","work_series_description()","work_skin_allowed()","wrangle()","wrangle()","wrangler_list()","readme","mimetype"],"longSearchIndex":["abusereport","abusereportscontroller","admin","admin::admininvitationscontroller","admin::adminuserscontroller","admin::settingscontroller","admin::skinscontroller","admin::statscontroller","admin::usercreationscontroller","adminmailer","adminpost","adminposttag","adminposttagging","adminpostscontroller","adminsession","adminsessionscontroller","adminsetting","adminscontroller","advancedsearchhelper","alphabethelper","applicationcontroller","applicationhelper","archivefaq","archivefaqscontroller","autocompletecontroller","banned","bookmark","bookmarkscontroller","bookmarkshelper","cachehelper","castnomination","category","challenge","challenge::giftexchangecontroller","challenge::promptmemecontroller","challengeassignment","challengeassignmentscontroller","challengeclaim","challengeclaimscontroller","challengehelper","challengerequestscontroller","challengesignup","challengesignupobserver","challengesignupsweeper","challengesignupscontroller","challengesweeper","challengescontroller","chapter","chaptersweeper","chapterscontroller","chaptershelper","character","characternomination","collection","collectionitem","collectionitemscontroller","collectionobserver","collectionparticipant","collectionparticipantscontroller","collectionpreference","collectionprofile","collectionprofilecontroller","collectionsweeper","collectionscontroller","collectionshelper","comment","commentmailer","commentobserver","commentsweeper","commentscontroller","commentshelper","commontagging","creationobserver","creatorship","datehelper","devmodecontroller","downloadscontroller","emailveracityvalidator","errorscontroller","externalauthor","externalauthorname","externalauthorscontroller","externalauthorshelper","externalcreatorship","externalwork","externalworkscontroller","fandom","fandomnomination","fandomscontroller","feedsweeper","feedback","feedbackscontroller","filtercount","filtertagging","freeform","freeformnomination","gift","giftexchange","giftscontroller","hitcounter","homecontroller","homehelper","inboxcomment","inboxcontroller","inboxhelper","invitation","invitationscontroller","invitationshelper","inviterequest","inviterequestscontroller","knownissue","knownissuescontroller","kudo","kudomailer","kudoobserver","kudoscontroller","kudossweeper","language","languagescontroller","locale","localescontroller","logitem","media","mediacontroller","metatagging","object","offer","opendoors","opendoors::externalauthorscontroller","opendoors::toolscontroller","orphanscontroller","orphanshelper","ownedsettagging","ownedtagset","ownedtagsetscontroller","passwordscontroller","people","peoplecontroller","potentialmatch","potentialmatchsettings","potentialmatchescontroller","potentialpromptmatch","preference","preferencescontroller","profile","profilecontroller","prompt","promptmeme","promptrestriction","promptrestrictionshelper","promptscontroller","pseud","pseudsweeper","pseudscontroller","pseudshelper","rating","reading","readingscontroller","redirectcontroller","redismailqueue","relatedwork","relatedworkscontroller","relationship","relationshipnomination","request","role","rolesuser","searchcontroller","searchhelper","serialwork","serialworkscontroller","series","seriescontroller","serieshelper","settagging","skin","skinparent","skinscontroller","skinshelper","statcounter","static","static::basecontroller","static::collectionscontroller","static::fandomscontroller","static::mediacontroller","static::restrictedworkscontroller","static::workscontroller","staticsweeper","statscontroller","statshelper","storyparser","storyparser::error","subscription","subscriptionscontroller","tag","tagnomination","tagnominationscontroller","tagset","tagsetassociation","tagsetassociationscontroller","tagsetnomination","tagsetnominationscontroller","tagsetownership","tagsetsweeper","tagsetshelper","tagsweeper","tagwranglerscontroller","tagwranglingscontroller","tagging","tagscontroller","tagshelper","translationhelper","translationnote","translationnotescontroller","translationscontroller","translatorscontroller","unsortedtag","unsortedtagscontroller","urlactivevalidator","urlformatvalidator","user","userinviterequest","userinviterequestscontroller","userinviterequestshelper","usermailer","usersession","usersessionscontroller","userscontroller","usershelper","validationhelper","warning","weightedrandom","work","worklink","worklinkscontroller","workobserver","workskin","worksweeper","workscontroller","workshelper","wranglingassignment","tagset#+()","tagset#-()","challengeassignment#<=>()","challengeclaim#<=>()","challengesignup#<=>()","potentialmatch#<=>()","potentialpromptmatch#<=>()","pseud#<=>()","tag#<=>()","work#<=>()","challengeclaim#==()","devmodecontroller#_get_view_paths()","chapter#abbreviated_display_title()","adminmailer#abuse_report()","usermailer#abuse_report()","applicationcontroller#access_denied()","adminsetting::account_creation_enabled?()","admin::adminuserscontroller#activate()","user#activate()","userscontroller#activate()","usermailer#activation()","user#active?()","collectionparticipantscontroller#add()","character#add_association()","fandom#add_association()","media#add_association()","tag#add_association()","commentshelper#add_cancel_comment_reply_link()","commentscontroller#add_comment()","commentscontroller#add_comment_reply()","commentshelper#add_comment_reply_link()","commentobserver#add_feedback_to_inbox()","externalwork#add_filter_tagging()","work#add_filter_tagging()","tag#add_filter_taggings()","tagging#add_filter_taggings()","metatagging#add_filters()","fandom#add_media_for_uncategorized()","tag::add_missing_filter_taggings()","ownedtagset#add_moderator()","externalauthorshelper#add_name_link()","ownedtagset#add_owner()","tag#add_parent_string()","ownedtagset#add_tagnames()","tagset#add_tags_to_autocomplete()","tag#add_to_autocomplete()","tagset#add_to_autocomplete()","tagsetassociation#add_to_autocomplete()","work#adjust_filter_counts()","series#adjust_restricted()","work#adjust_series_restriction()","serialwork#adjust_series_visibility()","comment#adjust_threading()","applicationcontroller#admin_logout_required()","applicationcontroller#admin_only()","applicationcontroller#admin_only_access_denied()","user#admin_update()","advancedsearchhelper#advanced_search_string=()","challengesweeper#after_create()","collectionsweeper#after_create()","commentobserver#after_create()","creationobserver#after_create()","feedsweeper#after_create()","kudoobserver#after_create()","kudossweeper#after_create()","pseudsweeper#after_create()","tagsetsweeper#after_create()","tagsweeper#after_create()","challengesignupsweeper#after_destroy()","challengesweeper#after_destroy()","chaptersweeper#after_destroy()","collectionsweeper#after_destroy()","commentsweeper#after_destroy()","tagsetsweeper#after_destroy()","worksweeper#after_destroy()","challengesignupsweeper#after_save()","chaptersweeper#after_save()","collectionsweeper#after_save()","commentsweeper#after_save()","worksweeper#after_save()","challengesweeper#after_update()","collectionsweeper#after_update()","commentobserver#after_update()","creationobserver#after_update()","feedsweeper#after_update()","pseudsweeper#after_update()","staticsweeper#after_update()","tagsetsweeper#after_update()","tagsweeper#after_update()","comment#akismet_attributes()","feedback#akismet_attributes()","people::all()","collection#all_approved_bookmarks()","collection#all_approved_bookmarks_count()","collection#all_approved_works()","collection#all_approved_works_count()","relationship#all_characters()","collection#all_fandoms()","collection#all_fandoms_count()","work#all_kudos_count()","collection#all_members()","collection#all_moderators()","collection#all_owners()","collection#all_participants()","collection#all_posting_participants()","series#allfandoms()","promptrestriction#allow_any?()","giftexchange#allow_name_change?()","applicationhelper#allow_tinymce?()","promptrestriction#allowed()","applicationhelper#allowed_css_instructions()","applicationhelper#allowed_html_instructions()","prompt#allowed_tags()","challengeassignmentscontroller#allowed_to_destroy()","challengeclaimscontroller#allowed_to_destroy()","challengesignupscontroller#allowed_to_destroy()","collectionitemscontroller#allowed_to_destroy()","collectionparticipantscontroller#allowed_to_destroy()","promptscontroller#allowed_to_destroy()","collectionparticipantscontroller#allowed_to_promote()","promptscontroller#allowed_to_see()","series#allpseuds()","alphabethelper#alpha_paginated_section()","ownedtagset#already_approved?()","ownedtagset#already_in_set?()","ownedtagset#already_nominated?()","ownedtagset#already_rejected?()","collection#anonymous?()","series#anonymous?()","work#anonymous?()","collectionitem#approve()","commentscontroller#approve()","tagnomination#approve!()","collectionitem#approve_automatically()","collectionitem#approve_by_collection()","collectionitem#approve_by_user()","collectionparticipant#approve_membership!()","collectionitem#approved?()","collectionitem::approved_by_collection()","collectionitem#approved_by_collection?()","collectionitem::approved_by_user()","collectionitem#approved_by_user?()","skin::approved_or_owned_by()","adminmailer#archive_notification()","usermailer#archive_notification()","user#archivist()","user#archivist=()","translationscontroller#assign()","challengeassignment::assign_offer!()","challengeassignment::assign_request!()","tagset#assign_tags()","collection#assignment_notification()","challengeassignmentscontroller#assignments_not_sent()","challengeassignmentscontroller#assignments_sent()","potentialmatchescontroller#assignments_sent()","autocompletecontroller#associated_tags()","tag#associations_to_remove()","ownedtagset#associations_to_remove=()","tag#associations_to_remove=()","collection#async()","chapter#author_attributes=()","series#author_attributes=()","work#author_attributes=()","externalcreatorship#author_name()","series#author_tags()","usershelper#authored_items()","people#authors()","usershelper#authors_header()","tag::autocomplete_fandom_lookup()","tagset::autocomplete_lookup()","tagsetassociation::autocomplete_lookup()","applicationhelper#autocomplete_options()","collection#autocomplete_prefixes()","pseud#autocomplete_prefixes()","tag#autocomplete_prefixes()","tagset#autocomplete_prefixes()","tagsetassociation#autocomplete_prefixes()","collection#autocomplete_score()","tag#autocomplete_score()","tagsetassociation#autocomplete_score()","collection#autocomplete_search_string()","collection#autocomplete_search_string_was()","pseud#autocomplete_value()","tagsetassociation#autocomplete_value()","devmodecontroller#backtrace_view()","tag#banned()","adminsetting::banner_on()","tagsetnominationscontroller#base_nom_query()","workskin::basic_formatting()","kudomailer#batch_kudo_notification()","ownedtagsetscontroller#batch_load()","usermailer#batch_subscription_notification()","challengesignupobserver#before_destroy()","collectionsweeper#before_destroy()","pseudsweeper#before_destroy()","tagsweeper#before_destroy()","workobserver#before_destroy()","collectionobserver#before_update()","creationobserver#before_update()","pseudsweeper#before_update()","workobserver#before_update()","prompt#blank?()","externalauthor#block_import()","tagshelper#blurb_tag_block()","bookmarkshelper#bookmark_form_path()","bookmarkshelper#bookmark_if_exists()","bookmarkshelper#bookmark_link()","userscontroller#browse()","filtertagging::build_from_taggings()","tagsetnominationscontroller#build_nominations()","abusereportscontroller#build_post_info()","feedbackscontroller#build_post_info()","challengesignupscontroller#build_prompts()","tag::by_name_without_articles()","tagsetassociation::by_name_without_articles()","applicationhelper#byline()","challengesignup#byline()","pseud#byline()","skin#byline()","potentialmatch::byline_key()","skin#cache!()","adminsetting::cache_expiration()","skin::cached()","tag#can_change_type?()","challengesignup#can_delete?()","prompt#can_delete?()","tagsetnomination#can_nominate()","workshelper#can_see_work()","tagshelper#can_wrangle?()","commentscontroller#cancel_comment()","commentshelper#cancel_comment_button()","commentscontroller#cancel_comment_delete()","commentscontroller#cancel_comment_edit()","commentscontroller#cancel_comment_reply()","commentshelper#cancel_comment_reply_link()","commentshelper#cancel_delete_comment_link()","potentialmatchescontroller#cancel_generate()","potentialmatch::cancel_generation()","workscontroller#cancel_posting_and_redirect()","potentialmatch::canceled?()","collection#challenge?()","collectionshelper#challenge_assignment_byline()","collectionshelper#challenge_assignment_email()","work#challenge_assignment_ids()","work#challenge_assignment_ids=()","usermailer#challenge_assignment_notification()","work#challenge_claim_ids()","collectionshelper#challenge_class_name()","autocompletecontroller#challenge_participants()","pseud#change_bookmarks_ownership()","pseud#change_challenge_participation()","pseud#change_collections_membership()","usermailer#change_email()","userscontroller#change_email()","pseud#change_gift_recipients()","pseud#change_membership()","userscontroller#change_openid()","pseud#change_ownership()","work#change_ownership()","userscontroller#change_password()","tagnomination::change_tagname!()","tagnomination#change_tagname?()","userscontroller#change_username()","work#chapter_attributes=()","chapter#chapter_header()","subscription#chapter_name()","chapter#chapter_title()","work#chapter_total_display()","work#chaptered?()","work#chapters_in_order()","autocompletecontroller#character()","autocompletecontroller#character_in_fandom()","tag#character_string=()","fandomnomination#character_tagnames()","character#characters()","freeform#characters()","relationship#characters()","userscontroller#check_account_creation_status()","applicationhelper#check_all_none()","challengeassignmentscontroller#check_assignments_not_sent()","potentialmatchescontroller#check_assignments_not_sent()","challengeassignmentscontroller#check_assignments_sent()","workshelper#check_backdate_box()","tag#check_canonical()","pseud#check_default_pseud()","skinscontroller#check_editability()","work#check_filter_counts()","externalwork#check_filter_taggings()","downloadscontroller#check_for_file()","work#check_for_invalid_chapters()","storyparser#check_for_previous_import()","comment#check_for_spam()","feedback#check_for_spam()","comment#check_for_spam?()","feedback#check_for_spam?()","collectionitem#check_gift_received()","readingscontroller#check_history_enabled()","fandom#check_media()","applicationcontroller#check_ownership()","applicationcontroller#check_ownership_or_admin()","workshelper#check_parent_box()","invitationscontroller#check_permission()","languagescontroller#check_permission()","localescontroller#check_permission()","translationnotescontroller#check_permission()","translationscontroller#check_permission()","translatorscontroller#check_permission()","commentscontroller#check_permission_to_delete()","commentscontroller#check_permission_to_edit()","applicationcontroller#check_permission_to_wrangle()","adminsetting::check_queue()","challengeassignmentscontroller#check_signup_closed()","potentialmatchescontroller#check_signup_closed()","challengesignupscontroller#check_signup_open()","promptscontroller#check_signup_open()","tag#check_synonym()","commentscontroller#check_tag_wrangler_access()","skinscontroller#check_title()","tag#check_type_changes()","applicationcontroller#check_user_status()","applicationcontroller#check_visibility()","challengerequestscontroller#check_visibility()","workshelper#check_warning()","fandom#check_wrangling_status()","applicationhelper#checkbox_section()","applicationhelper#checkbox_section_css_class()","applicationhelper#checkbox_section_toggle()","character#child_types()","fandom#child_types()","freeform#child_types()","media#child_types()","relationship#child_types()","tag#child_types()","weightedrandom#choice()","externalauthorscontroller#claim()","externalauthor#claim!()","prompt#claim_by()","challengeclaim#claim_byline()","usermailer#claim_notification()","challengehelper#claim_title()","prompt#claimable?()","externalauthor::claimed()","externalauthor#claimed?()","externalcreatorship#claimed?()","challengeclaim#claiming_pseud()","challengeclaim#claiming_user()","applicationhelper#classes_for_main()","storyparser#clean_and_split_tags()","work#clean_and_validate_title()","storyparser#clean_close_html_tags()","skin#clean_css()","workskin#clean_css()","skin#clean_media()","storyparser#clean_storytext()","storyparser#clean_tags()","collection#clean_up_challenge()","work#clean_up_creatorships()","ownedtagset#cleanup_outdated_associations()","externalwork#cleanup_url()","prompt#cleanup_url()","readingscontroller#clear()","challengeassignment::clear!()","potentialmatch::clear!()","challengeassignment#clear_assignment()","challengesignup#clear_assignments_and_claims()","skin#clear_cache!()","prompt#clear_claims()","applicationcontroller#clear_flash_cookie()","collection#clear_icon()","pseud#clear_icon()","ownedtagset#clear_nominations!()","redismailqueue::clear_queue()","collection#closed?()","usermailer#coauthor_notification()","user#coauthored_works()","user#coauthors()","tagsetnominationscontroller#collect_update_multiple_results()","collection#collection_depth()","autocompletecontroller#collection_fullname()","collectionitem#collection_is_open()","collectionshelper#collection_link()","applicationcontroller#collection_maintainers_only()","usermailer#collection_notification()","applicationcontroller#collection_owners_only()","autocompletecontroller#collection_parent_name()","adminmailer#comment_notification()","commentmailer#comment_notification()","comment#comment_owner()","comment#comment_owner_email()","comment#comment_owner_name()","commentmailer#comment_reply_notification()","commentmailer#comment_sent_notification()","devmodecontroller#comment_work()","devmodecontroller#comment_works()","inboxhelper#commentable_description_link()","adminpost#commentable_name()","chapter#commentable_name()","comment#commentable_name()","tag#commentable_name()","comment::commentable_object()","adminpost#commentable_owners()","tag#commentable_owners()","work#comments()","externalworkscontroller#compare()","potentialmatch#compare_all()","potentialpromptmatch#compare_all()","inviterequest#compare_with_users()","externalauthorscontroller#complete_claim()","locale#completeness()","workscontroller#confirm_delete()","workscontroller#confirm_delete_multiple()","errorscontroller#conflict()","storyparser#convert_rating()","storyparser#convert_rating_string()","storyparser#convert_revised_at()","giftexchange#copy_tag_set_from_offer_to_request()","prompt#correct_number_of_tags()","comment#count_all_comments()","work#count_all_comments()","tagsetnomination#count_by_fandom?()","inboxcomment::count_unread()","bookmark::count_visible_bookmarks()","comment#count_visible_comments()","challengeassignment#cover()","challengeassignmentscontroller#cover_default()","abusereportscontroller#create()","admin::admininvitationscontroller#create()","adminpostscontroller#create()","adminsessionscontroller#create()","archivefaqscontroller#create()","bookmarkscontroller#create()","challenge::giftexchangecontroller#create()","challenge::promptmemecontroller#create()","challengeclaimscontroller#create()","challengesignupscontroller#create()","chapterscontroller#create()","collectionitemscontroller#create()","collectionscontroller#create()","commentscontroller#create()","externalauthorscontroller#create()","feedbackscontroller#create()","invitationscontroller#create()","inviterequestscontroller#create()","knownissuescontroller#create()","kudoscontroller#create()","languagescontroller#create()","localescontroller#create()","opendoors::externalauthorscontroller#create()","orphanscontroller#create()","ownedtagsetscontroller#create()","passwordscontroller#create()","promptscontroller#create()","pseudscontroller#create()","seriescontroller#create()","skinscontroller#create()","subscriptionscontroller#create()","tagsetnominationscontroller#create()","tagwranglerscontroller#create()","tagscontroller#create()","translationnotescontroller#create()","translationscontroller#create()","translatorscontroller#create()","userinviterequestscontroller#create()","usersessionscontroller#create()","userscontroller#create()","workscontroller#create()","tag::create_canonical()","skin::create_default()","user#create_default_associateds()","externalauthor#create_default_name()","downloadscontroller#create_epub_files()","user#create_log_item()","downloadscontroller#create_mobi_html()","worklink::create_or_increment()","work#create_stat_counter()","devmodecontroller#create_work()","downloadscontroller#create_work_html()","subscription#creation_name()","pseud#creations()","invitationshelper#creator_link()","applicationcontroller#current_admin()","applicationcontroller#current_admin_session()","applicationcontroller#current_user()","applicationcontroller#current_user_owns?()","applicationcontroller#current_user_session()","datehelper#date_in_user_time_zone()","adminsetting::days_to_purge_unactivated()","challengeassignment#default()","challengeassignmentscontroller#default()","language::default()","locale::default()","skin::default()","challengeassignmentscontroller#default_all()","work#default_date()","externalauthor#default_name()","user#default_pseud()","adminsetting::default_skin()","challengeassignment#defaulted()","challengeassignment#defaulted=()","challengeassignment::delayed_generate()","challengeassignment::delayed_send_out()","commentscontroller#delete_comment()","commentshelper#delete_comment_link()","userscontroller#delete_confirmation()","serialwork#delete_empty_series()","collection#delete_icon()","pseud#delete_icon()","collection#delete_icon=()","pseud#delete_icon=()","collection#delete_icon?()","pseud#delete_icon?()","workscontroller#delete_multiple()","usermailer#delete_signup_notification()","tagging#delete_unused_tags()","usermailer#delete_work_notification()","externalauthor#delete_works()","redismailqueue::deliver_kudos()","redismailqueue::deliver_subscriptions()","tagshelper#description()","prompt#description_required?()","admin::adminuserscontroller#destroy()","admin::usercreationscontroller#destroy()","adminpostscontroller#destroy()","adminsessionscontroller#destroy()","adminscontroller#destroy()","archivefaqscontroller#destroy()","bookmarkscontroller#destroy()","challenge::giftexchangecontroller#destroy()","challenge::promptmemecontroller#destroy()","challengeclaimscontroller#destroy()","challengesignupscontroller#destroy()","chapterscontroller#destroy()","collectionitemscontroller#destroy()","collectionparticipantscontroller#destroy()","collectionscontroller#destroy()","commentscontroller#destroy()","externalauthorscontroller#destroy()","invitationscontroller#destroy()","inviterequestscontroller#destroy()","knownissuescontroller#destroy()","ownedtagsetscontroller#destroy()","promptscontroller#destroy()","pseudscontroller#destroy()","readingscontroller#destroy()","relatedworkscontroller#destroy()","serialworkscontroller#destroy()","seriescontroller#destroy()","skinscontroller#destroy()","subscriptionscontroller#destroy()","tagsetnominationscontroller#destroy()","tagwranglerscontroller#destroy()","translationnotescontroller#destroy()","translationscontroller#destroy()","translatorscontroller#destroy()","usersessionscontroller#destroy()","userscontroller#destroy()","workscontroller#destroy()","work#destroy_chapters_in_reverse()","tagnomination#destroy_if_blank()","tagsetnominationscontroller#destroy_multiple()","devmodecontroller#development_only()","preference::disable_work_skin?()","tagwranglingscontroller#discuss()","work#display_authors()","chapter#display_title()","translationhelper#distance_of_time_in_words()","translationhelper#distance_of_time_in_words_to_now()","challengeassignment::do_assign_offer!()","challengeassignment::do_assign_request!()","ownedtagsetscontroller#do_batch_load()","commentshelper#do_cancel_delete_comment_link()","creationobserver#do_notify()","redirectcontroller#do_redirect()","peoplecontroller#do_search()","homecontroller#donate()","storyparser#download_and_parse_chapter_of_work()","storyparser#download_and_parse_chaptered_story()","storyparser#download_and_parse_chapters_into_story()","storyparser#download_and_parse_story()","work#download_authors()","work#download_basename()","storyparser#download_chaptered_from_efiction()","storyparser#download_chaptered_from_ffnet()","work#download_dir()","downloadscontroller#download_epub()","work#download_fandoms()","work#download_folder()","storyparser#download_from_lj()","downloadscontroller#download_html()","downloadscontroller#download_mobi()","downloadscontroller#download_pdf()","storyparser#download_text()","work#download_title()","workshelper#download_url_for_work()","storyparser#download_with_timeout()","workscontroller#drafts()","admin::adminuserscontroller#edit()","adminpostscontroller#edit()","archivefaqscontroller#edit()","bookmarkscontroller#edit()","challenge::giftexchangecontroller#edit()","challenge::promptmemecontroller#edit()","challengesignupscontroller#edit()","chapterscontroller#edit()","collectionscontroller#edit()","commentscontroller#edit()","externalauthorscontroller#edit()","externalworkscontroller#edit()","knownissuescontroller#edit()","ownedtagsetscontroller#edit()","promptscontroller#edit()","pseudscontroller#edit()","seriescontroller#edit()","skinscontroller#edit()","tagsetnominationscontroller#edit()","tagscontroller#edit()","translationnotescontroller#edit()","translationscontroller#edit()","userscontroller#edit()","workscontroller#edit()","commentshelper#edit_comment_link()","workscontroller#edit_multiple()","workscontroller#edit_tags()","usermailer#edit_work_notification()","skin#editable?()","adminmailer#edited_comment_notification()","commentmailer#edited_comment_notification()","commentmailer#edited_comment_reply_notification()","tagset#empty?()","adminsetting::enable_test_caching?()","autocompletecontroller#encoding()","userscontroller#end_banner()","userscontroller#end_first_login()","collection#ensure_associated()","work#ensure_revised_at()","validationhelper#error_messages_for()","validationhelper#error_messages_formatted()","people#escaped()","tagset#exact_match?()","applicationhelper#expand_contract_all()","applicationhelper#expand_contract_shuffle()","commentsweeper#expire_cache()","challengesignupscontroller#export_csv()","bookmark#external=()","externalcreatorship#external_author()","externalcreatorship#external_author=()","autocompletecontroller#external_work()","externalauthor#external_work_creatorships()","externalauthorname#external_work_creatorships()","commentshelper#fallback_url_for_comment()","commentshelper#fallback_url_for_top_level()","autocompletecontroller#fandom()","language#fandom_count()","tag#fandom_string=()","character#fandoms()","freeform#fandoms()","relationship#fandoms()","skin::featured()","tagscontroller#feed()","workshelper#feed_summary()","adminmailer#feedback()","usermailer#feedback()","adminposttag::fetch()","externalworkscontroller#fetch()","applicationcontroller#fetch_admin_settings()","bookmarkscontroller#fetch_recent()","applicationhelper#field_attribute()","applicationhelper#field_id()","applicationhelper#field_name()","applicationhelper#field_with_unique_id()","tag#filter()","admin::admininvitationscontroller#find()","filtertagging::find()","people::find()","comment#find_all_comments()","work#find_all_comments()","filtertagging::find_by_id()","tag::find_by_name()","tagging::find_by_tag()","translationnotescontroller#find_locale()","translationscontroller#find_locale()","locale::find_main_cached()","locale::find_main_translations()","tag::find_or_create_by_name()","externalauthor#find_or_invite()","work::find_with_options()","potentialmatch::finish_generation()","work#first_chapter()","homecontroller#first_login_help()","user#first_save?()","chapter#fix_positions()","chapter#fix_positions_after_destroy()","preference#fix_time_zone()","applicationhelper#flash_div()","user::for_claims()","tagnomination::for_tag_set()","tagsetassociation::for_tag_set()","tagsetnomination::for_tag_set()","collectionitem::for_user()","errorscontroller#forbidden()","opendoors::externalauthorscontroller#forward()","autocompletecontroller#freeform()","tag#freeform_string=()","character#freeforms()","freeform#freeforms()","relationship#freeforms()","weightedrandom::from_params()","challengeassignment#fulfilled?()","challengeclaim#fulfilled?()","prompt#fulfilled_claims()","challengeassignment::generate()","challengeassignmentscontroller#generate()","potentialmatch::generate()","potentialmatchescontroller#generate()","usermailer#generate_attachment_content_from_signup()","usermailer#generate_attachment_content_from_work()","applicationhelper#generate_countdown_html()","potentialmatch::generate_for_signup()","potentialmatch::generate_in_background()","user#generate_password()","potentialmatchescontroller#generate_progress()","challengesignup::generate_summary()","challengesignup::generate_summary_in_background()","challengesignup::generate_summary_tags()","skinparent::get_all_child_ids()","skinparent::get_all_parent_ids()","skin#get_all_parents()","workshelper#get_bookmark_embed_link()","bookmarkshelper#get_bookmark_link_text()","skin#get_cached_style()","tagshelper#get_category_class()","storyparser#get_chapter_from_work_params()","challengeassignment#get_collection_item()","challengeclaim#get_collection_item()","storyparser#get_collection_names()","commentshelper#get_commenter_pseud_or_name()","devmodecontroller#get_controller_dir()","skin#get_css()","skin::get_current_site_skin()","skin::get_current_version()","workshelper#get_embed_link()","workshelper#get_endnotes_link()","externalauthorscontroller#get_external_author_from_invitation()","homecontroller#get_id()","skin#get_ie_comment()","storyparser#get_last_modified()","devmodecontroller#get_links_to()","collection#get_maintainers_email()","skin#get_media()","skin#get_media_for_filename()","bookmarkshelper#get_new_bookmark_path()","castnomination#get_owned_tag_set()","tagnomination#get_owned_tag_set()","applicationcontroller#get_page_title()","ownedtagsetscontroller#get_parent_child_tags()","castnomination#get_parent_tagname()","tagnomination#get_parent_tagname()","collection#get_participants_for_user()","collection#get_participating_pseuds_for_user()","offer#get_prompt_restriction()","prompt#get_prompt_restriction()","promptrestrictionshelper#get_prompt_restriction()","request#get_prompt_restriction()","tagshelper#get_ratings_class()","skin#get_role()","skin#get_sheet_role()","skinshelper#get_skin_cache()","storyparser#get_source_if_known()","skin#get_style()","skin#get_style_block()","bookmarkshelper#get_symbol_for_bookmark()","tagshelper#get_symbol_link()","tagshelper#get_symbols_for()","tagsetassociationscontroller#get_tags_to_associate()","tagshelper#get_title_string()","redirectcontroller#get_url_to_look_for()","devmodecontroller#get_view_dir()","devmodecontroller#get_view_paths()","tagshelper#get_warnings_class()","skin#get_wizard_settings()","collection#gift_exchange?()","challengesignupscontroller#gift_exchange_to_csv()","collection#gift_notification()","invitation::grant_all()","invitation::grant_empty()","admin::admininvitationscontroller#grant_invites_to_users()","applicationcontroller#guest?()","downloadscontroller#guest_downloading_off()","adminsetting::guest_downloading_off?()","work#guest_kudos_count()","tag#has_child?()","gift#has_name_or_pseud()","user#has_no_credentials?()","collectionparticipantscontroller#has_other_owners()","tag#has_parent?()","work#has_required_tags?()","promptrestriction#has_tags?()","tagset#has_type?()","admin::usercreationscontroller#hide()","applicationcontroller#hide_banner()","commentscontroller#hide_comments()","commentshelper#hide_comments_link()","tagshelper#hide_freeform?()","preference#hide_hit_counts()","bookmarkscontroller#hide_recent()","tagshelper#hide_warnings?()","hitcounter::hits_to_database()","statcounter::hits_to_database()","homehelper#html_to_text()","workskin#human()","workskin#i18n_key()","usershelper#icon_display()","workscontroller#import()","workskin::import_basic_formatting()","storyparser#import_from_urls()","workscontroller#import_multiple()","workscontroller#import_single()","skin::in_chooser()","potentialmatch::in_progress?()","ownedtagset::in_prompt_restriction()","tag::in_prompt_restriction()","work::in_series()","tag::in_tag_set()","inboxhelper#inbox_reply_link()","abusereportscontroller#index()","admin::admininvitationscontroller#index()","admin::adminuserscontroller#index()","admin::settingscontroller#index()","admin::skinscontroller#index()","admin::statscontroller#index()","adminpostscontroller#index()","adminscontroller#index()","archivefaqscontroller#index()","bookmarkscontroller#index()","challengeassignmentscontroller#index()","challengeclaimscontroller#index()","challengerequestscontroller#index()","challengesignupscontroller#index()","chapterscontroller#index()","collectionitemscontroller#index()","collectionparticipantscontroller#index()","collectionscontroller#index()","commentscontroller#index()","devmodecontroller#index()","externalauthorscontroller#index()","externalworkscontroller#index()","fandomscontroller#index()","giftscontroller#index()","homecontroller#index()","invitationscontroller#index()","inviterequestscontroller#index()","knownissuescontroller#index()","languagescontroller#index()","localescontroller#index()","mediacontroller#index()","opendoors::externalauthorscontroller#index()","opendoors::toolscontroller#index()","orphanscontroller#index()","ownedtagsetscontroller#index()","peoplecontroller#index()","potentialmatchescontroller#index()","preferencescontroller#index()","promptscontroller#index()","pseudscontroller#index()","readingscontroller#index()","relatedworkscontroller#index()","searchcontroller#index()","seriescontroller#index()","skinscontroller#index()","static::fandomscontroller#index()","static::restrictedworkscontroller#index()","statscontroller#index()","subscriptionscontroller#index()","tagsetassociationscontroller#index()","tagsetnominationscontroller#index()","tagwranglerscontroller#index()","tagwranglingscontroller#index()","tagscontroller#index()","translationnotescontroller#index()","translationscontroller#index()","translatorscontroller#index()","unsortedtagscontroller#index()","userinviterequestscontroller#index()","userscontroller#index()","worklinkscontroller#index()","workscontroller#index()","admin::skinscontroller#index_approved()","admin::skinscontroller#index_rejected()","tag#indirect_bookmarks()","metatagging#inherit_meta_tags()","commontagging#inherit_parents()","hitcounter#init_redis()","statcounter#init_redis()","devmodecontroller#inspect_view()","errorscontroller#internal_server_error()","potentialmatch::interrupt_key()","usermailer#invitation()","usermailer#invitation_to_claim()","inviterequest::invite()","inviterequest#invite_and_remove()","invitationscontroller#invite_friend()","admin::admininvitationscontroller#invite_from_queue()","adminsetting::invite_from_queue_at()","adminsetting::invite_from_queue_enabled?()","adminsetting::invite_from_queue_frequency()","adminsetting::invite_from_queue_number()","usermailer#invite_increase_notification()","invitationshelper#invitee_link()","applicationcontroller#is_admin?()","user#is_archivist?()","user#is_author_of?()","usershelper#is_author_of?()","work#is_complete()","collectionparticipant#is_invited?()","collectionparticipant#is_maintainer?()","collectionparticipant#is_member?()","collectionparticipant#is_moderator?()","collectionparticipant#is_none?()","chapter#is_only_chapter?()","collectionparticipant#is_owner?()","applicationcontroller#is_registered_user?()","user#is_sole_author_of?()","tagset#is_subset_of?()","tagset#is_superset_of?()","user#is_tag_wrangler?()","user#is_translation_admin?()","work#is_wip()","collectionitem#item_creator_names()","collectionitem#item_creator_pseuds()","collectionitem#item_date()","collectionparticipantscontroller#join()","tagnomination::join_fandom_nomination()","castnomination#known_fandom()","kudomailer#kudo_notification()","tagshelper#label_for_filter()","workshelper#language_link()","work#last_chapter()","work#last_posted_chapter()","commentshelper#last_reply_by()","applicationhelper#link_to_add_section()","bookmarkshelper#link_to_bookmarkable_bookmarks()","commentshelper#link_to_comment_ultimate_parent()","tagshelper#link_to_edit_tag()","applicationhelper#link_to_help()","alphabethelper#link_to_letter()","userinviterequestshelper#link_to_previous_invite_requests()","applicationhelper#link_to_remote()","applicationhelper#link_to_remove_section()","applicationhelper#link_to_rss()","tagshelper#link_to_tag()","bookmarkshelper#link_to_tag_bookmarks()","pseudshelper#link_to_tag_with_count()","tagshelper#link_to_tag_with_text()","tagshelper#link_to_tag_works()","tagshelper#link_to_tag_works_with_text()","bookmarkshelper#link_to_user_bookmarkable_bookmarks()","tagshelper#link_to_with_tag_class()","collectionscontroller#list_challenges()","devmodecontroller#list_controllers()","devmodecontroller#list_views()","validationhelper#live_validation_for_field()","validationhelper#live_validation_varname()","validationhelper#live_validation_wrapper()","skinscontroller#load_archive_parents()","challengeassignmentscontroller#load_assignment_from_id()","ownedtagset#load_batch_associations!()","bookmarkscontroller#load_bookmark()","bookmarkscontroller#load_bookmarkable()","challengeassignmentscontroller#load_challenge()","challengeclaimscontroller#load_challenge()","challengesignupscontroller#load_challenge()","challengescontroller#load_challenge()","potentialmatchescontroller#load_challenge()","promptscontroller#load_challenge()","challengeclaimscontroller#load_claim_from_id()","collectionitemscontroller#load_collectible_item()","applicationcontroller#load_collection()","challengescontroller#load_collection()","collectionscontroller#load_collection_from_id()","commentscontroller#load_comment()","commentscontroller#load_commentable()","devmodecontroller#load_erb()","opendoors::externalauthorscontroller#load_external_author()","collectionitemscontroller#load_item_and_collection()","applicationcontroller#load_locales()","static::basecontroller#load_media()","tagsetnominationscontroller#load_nomination()","orphanscontroller#load_orphans()","collectionparticipantscontroller#load_participant_and_collection()","potentialmatchescontroller#load_potential_match_from_id()","promptscontroller#load_prompt_from_id()","workscontroller#load_pseuds()","serialworkscontroller#load_serial_work()","seriescontroller#load_series()","promptscontroller#load_signup()","challengesignupscontroller#load_signup_from_id()","skin::load_site_css()","skinscontroller#load_skin()","static::basecontroller#load_static_controller()","tagscontroller#load_tag()","ownedtagsetscontroller#load_tag_set()","tagsetassociationscontroller#load_tag_set()","tagsetnominationscontroller#load_tag_set()","challengeassignmentscontroller#load_user()","challengeclaimscontroller#load_user()","externalauthorscontroller#load_user()","inboxcontroller#load_user()","preferencescontroller#load_user()","pseudscontroller#load_user()","readingscontroller#load_user()","statscontroller#load_user()","subscriptionscontroller#load_user()","userscontroller#load_user()","worklinkscontroller#load_user_and_work()","workscontroller#load_work()","applicationhelper#locales_menu()","usershelper#log_item_action_name()","applicationcontroller#logged_in?()","applicationcontroller#logged_in_as_admin?()","applicationcontroller#logout_if_not_user_credentials()","hitcounter::logs_to_database()","statcounter::logs_to_database()","applicationhelper#mailto_link()","challengesignupscontroller#maintainer_or_signup_owner_only()","promptscontroller#maintainer_or_signup_owner_only()","collection#maintainers()","tagsetassociation#make_official!()","archivefaqscontroller#manage()","chapterscontroller#manage()","invitationscontroller#manage()","inviterequestscontroller#manage()","seriescontroller#manage()","comment#mark_as_ham!()","feedback#mark_as_ham!()","invitation#mark_as_redeemed()","comment#mark_as_spam!()","feedback#mark_as_spam!()","user#mark_invitation_redeemed()","reading::mark_to_read_later()","workshelper#markasread_link()","workshelper#marked_for_later?()","workscontroller#marktoread()","workshelper#marktoread_link()","usermailer#mass_archive_notification()","tagscontroller#mass_update()","unsortedtagscontroller#mass_update()","challengesignup#match()","prompt#match()","tagset#match_rank()","tagset#matching_tags()","tag#media_string=()","character#medias()","freeform#medias()","relationship#medias()","externalworkscontroller#merge()","externalwork#merge_similar()","tag#merger_string=()","tag#meta_tag_string=()","tagshelper#meta_tag_tree()","metatagging#meta_tag_validation()","prompt#method_missing()","errorscontroller#method_not_allowed()","workskin::model_name()","collection#moderated?()","ownedtagset#moderator_changes()","ownedtagset#moderator_changes=()","ownedtagsetscontroller#moderators_only()","tagsetassociationscontroller#moderators_only()","pseud#most_popular_tags()","user#most_popular_tags()","work#multipart?()","collection#must_have_owners()","kudo#name()","subscription#name()","applicationhelper#name_to_id()","externalauthor#names()","tag::names_by_parent()","tagsetassociation::names_by_parent()","tagnomination::names_with_count()","translationhelper#namespace_notes()","skin::naturalized()","workscontroller#navigate()","applicationhelper#nested_field_id()","applicationhelper#nested_field_name()","abusereportscontroller#new()","admin::admininvitationscontroller#new()","adminpostscontroller#new()","adminsessionscontroller#new()","archivefaqscontroller#new()","bookmarkscontroller#new()","challenge::giftexchangecontroller#new()","challenge::promptmemecontroller#new()","challengesignupscontroller#new()","chapterscontroller#new()","collectionitemscontroller#new()","collectionscontroller#new()","commentscontroller#new()","externalauthorscontroller#new()","externalworkscontroller#new()","feedbackscontroller#new()","knownissuescontroller#new()","languagescontroller#new()","localescontroller#new()","opendoors::externalauthorscontroller#new()","orphanscontroller#new()","ownedtagsetscontroller#new()","passwordscontroller#new()","people::new()","promptscontroller#new()","pseudscontroller#new()","seriescontroller#new()","skinscontroller#new()","tagsetnominationscontroller#new()","tagscontroller#new()","translationnotescontroller#new()","translationscontroller#new()","translatorscontroller#new()","userinviterequestscontroller#new()","usersessionscontroller#new()","userscontroller#new()","weightedrandom::new()","workscontroller#new()","challengeassignmentscontroller#no_assignment()","potentialmatchescontroller#no_assignment()","challengeassignmentscontroller#no_challenge()","challengeclaimscontroller#no_challenge()","challengesignupscontroller#no_challenge()","challengescontroller#no_challenge()","potentialmatchescontroller#no_challenge()","promptscontroller#no_challenge()","skinparent#no_circular_skin()","challengeclaimscontroller#no_claim()","challengescontroller#no_collection()","tagset#no_match?()","potentialmatchsettings#no_match_required?()","ownedtagset#no_midstream_nomination_changes()","collectionparticipantscontroller#no_participant()","promptscontroller#no_prompt()","collection#no_reserved_strings()","challengesignupscontroller#no_signup()","promptscontroller#no_signup()","skinparent#no_site_parent()","work::no_tags()","challengeassignmentscontroller#no_user()","challengeclaimscontroller#no_user()","ownedtagsetscontroller#nominated_only()","autocompletecontroller#nominated_parents()","tagnomination::nominated_parents()","tagsetnomination#nominated_tags()","tagsetnomination#nomination_limits()","tagsetshelper#nomination_notes()","tagsetshelper#nomination_status()","tagsetshelper#nomination_status_span()","applicationhelper#non_anonymous_byline()","applicationhelper#non_anonymous_text_byline()","tagsetshelper#noncanonical_info_class()","autocompletecontroller#noncanonical_tag()","applicationcontroller#not_allowed()","tagnomination#not_already_reviewed()","collection#not_empty?()","tagsetassociation#not_existing()","errorscontroller#not_found()","errorscontroller#not_implemented()","pseud::not_orphaned()","challengesignupscontroller#not_signup_owner()","promptscontroller#not_signup_owner()","admin::adminuserscontroller#notify()","userscontroller#notify_and_show_confirmation_screen()","creationobserver#notify_co_authors()","collection#notify_maintainers()","collectionitem#notify_of_author_reveal()","collectionitem#notify_of_reveal()","collectionitem#notify_of_status_change()","relatedwork#notify_parent_owners()","creationobserver#notify_parents()","creationobserver#notify_prompters()","creationobserver#notify_recipients()","creationobserver#notify_subscribers()","commentobserver#notify_user_by_email?()","kudoobserver#notify_user_by_email?()","commentobserver#notify_user_by_inbox?()","externalauthor#notify_user_of_claim()","commentobserver#notify_user_of_own_comments?()","work#number_of_chapters()","work#number_of_posted_chapters()","challengesignup#number_of_prompts()","challengeassignment#offer_byline()","challengeassignment#offering_pseud()","challengeassignment#offering_user()","autocompletecontroller#open_collection_names()","applicationcontroller#opendoors_only()","usersessionscontroller#openid()","usersessionscontroller#openid_small()","challengeclaim::order_by_offering_pseud()","challengeclaim::order_by_requesting_pseud()","comment#original_ultimate_parent()","collection::orphan()","creatorship::orphan()","externalauthor#orphan()","user::orphan_account()","ownedtagset::owned_by()","tagsetnomination::owned_by()","promptrestriction#owned_tag_set_ids()","autocompletecontroller#owned_tag_sets()","ownedtagset#owner_changes()","ownedtagset#owner_changes=()","challengeassignmentscontroller#owner_only()","challengeclaimscontroller#owner_only()","series#owners()","ownedtagsetscontroller#owners_only()","collectionparticipantscontroller#owners_required()","applicationhelper#params_without()","work#parent_attributes=()","collection#parent_exists()","collection#parent_is_allowed()","collection#parent_name()","collection#parent_name=()","tag::parent_names()","tagsetassociation::parent_names()","skinparent#parent_skin_title()","skinparent#parent_skin_title=()","tagsetassociation#parent_tagname()","tagsetassociation#parent_tagname=()","character#parent_types()","fandom#parent_types()","freeform#parent_types()","relationship#parent_types()","tag#parent_types()","work#parents()","storyparser#parse_author()","storyparser#parse_author_common()","storyparser#parse_author_from_lj()","storyparser#parse_author_from_minotaur()","storyparser#parse_author_from_unknown()","storyparser#parse_author_from_yuletide()","tag::parse_autocomplete_value()","tagsetassociation::parse_autocomplete_value()","pseud::parse_byline()","pseud::parse_bylines()","storyparser#parse_chapter_of_work()","storyparser#parse_chapters_into_story()","storyparser#parse_common()","skin#parse_media_from_filename()","skin#parse_sheet_role()","storyparser#parse_story()","storyparser#parse_story_from_deviantart()","storyparser#parse_story_from_dw()","storyparser#parse_story_from_ffnet()","storyparser#parse_story_from_lj()","storyparser#parse_story_from_lotrfanfiction()","storyparser#parse_story_from_modified_efiction()","storyparser#parse_story_from_twilightarchives()","storyparser#parse_story_from_unknown()","storyparser#parse_story_from_yuletide()","tagset#partial_match?()","usersessionscontroller#passwd()","usersessionscontroller#passwd_small()","alphabethelper#people_paginated_section()","adminsetting::perform()","challengeassignment::perform()","challengesignup::perform()","collection::perform()","potentialmatch::perform()","challengeassignment#pinch_hitter_byline()","challengeassignment#pinch_hitter_byline=()","challengeassignment#pinch_request_byline()","challengeassignment#pinch_request_byline=()","workskin#plural()","potentialmatch::position()","chapterscontroller#post()","workscontroller#post_draft()","work#post_first_chapter()","challengeassignment#posted?()","collectionitem#posted?()","series#posted_works()","usermailer#potential_match_generation_notification()","chapterscontroller#preview()","skinscontroller#preview()","workscontroller#preview()","workscontroller#preview_tags()","usershelper#print_bookmarks_link()","usershelper#print_coauthors()","usershelper#print_gifts_link()","usershelper#print_pseud_bookmarks_link()","pseudshelper#print_pseud_list()","pseudshelper#print_pseud_selector()","usershelper#print_pseud_series_link()","usershelper#print_pseud_works_link()","usershelper#print_pseuds()","usershelper#print_series_link()","usershelper#print_works()","usershelper#print_works_link()","devmodecontroller#process_dir()","devmodecontroller#process_file()","devmodecontroller#profile_logs()","potentialmatch::progress()","potentialmatch::progress_key()","collection#prompt_meme?()","challengesignupscontroller#prompt_meme_to_csv()","promptrestrictionshelper#prompt_restriction_settings()","challengehelper#prompt_tags()","usermailer#prompter_notification()","inviterequest#proposed_fill_date()","autocompletecontroller#pseud()","applicationhelper#pseud_link()","applicationhelper#pseud_text()","people#pseuds()","series#published_at()","work#published_at()","challengeassignmentscontroller#purge()","work::purge_old_drafts()","redismailqueue::queue_kudo()","redismailqueue::queue_subscription()","devmodecontroller#random_chapter()","searchhelper#random_search_tip()","devmodecontroller#random_sentence()","workshelper#rating_selected()","user#read_inbox_comments()","reading::reading_object()","pseud::rec_counts_for_pseuds()","unsortedtag#recategorize()","people#reccers()","gift#recipient()","gift#recipient=()","invitation#recipient_is_not_registered()","usermailer#recipient_notification()","collectionitem#recipients()","work#recipients()","work#recipients=()","workshelper#recipients_link()","applicationcontroller#redirect_back_or_default()","commentscontroller#redirect_to_all_comments()","commentscontroller#redirect_to_comment()","collectionitem#reject()","commentscontroller#reject()","collectionitem#reject_by_collection()","collectionitem#reject_by_user()","fandomnomination#reject_children()","collectionitem#rejected?()","collectionitem::rejected_by_collection()","collectionitem#rejected_by_collection?()","collectionitem::rejected_by_user()","collectionitem#rejected_by_user?()","usermailer#related_work_notification()","autocompletecontroller#relationship()","autocompletecontroller#relationship_in_fandom()","tag#relationship_string=()","fandomnomination#relationship_tagnames()","character#relationships()","freeform#relationships()","relationship#relationships()","collectionitem#remove()","collectionitem#remove=()","tag#remove_association()","series#remove_author()","work#remove_author()","externalwork#remove_filter_tagging()","tagging#remove_filter_tagging()","work#remove_filter_tagging()","tag#remove_filter_taggings()","tag#remove_from_autocomplete()","tagset#remove_from_autocomplete()","tagsetassociation#remove_from_autocomplete()","user#remove_from_queue()","filtertagging::remove_invalid()","skin#remove_me_from_preferences()","tag#remove_meta_filters()","externalauthorshelper#remove_name_link()","work#remove_outdated_downloads()","user#remove_pseud_from_kudos()","tag#remove_stale_from_autocomplete()","tag#remove_sub_filters()","tagshelper#remove_tag_association_label()","ownedtagset#remove_tagnames()","tagset#remove_tags_from_autocomplete()","downloadscontroller#render_mobi_html()","orphanshelper#render_orphan_partial()","downloadscontroller#render_xhtml()","archivefaq::reorder()","inviterequestscontroller#reorder()","series#reorder()","work#reorder()","pseud#replace_me_with_default()","inboxcontroller#reply()","challengeassignment#request()","challengeassignment#request_byline()","challengeclaim#request_byline()","tagsetnominationscontroller#request_noncanonical_info()","challengesignupscontroller#request_to_array()","challengeassignment#requesting_pseud()","challengeclaim#requesting_pseud()","static::restrictedworkscontroller#require_login()","promptrestriction#require_unique?()","tagnomination#require_unique_tagname_with_parent()","tagsetnomination#require_unique_tagnames()","promptrestriction#required()","promptrestrictionshelper#required_and_allowed()","promptrestrictionshelper#required_and_allowed_boolean()","tag#reset_filter_count()","inviterequest::reset_order()","usermailer#reset_password()","prompt::reset_positions_in_collection!()","user#reset_user_password()","prompt#respond_to?()","promptrestriction#restricted?()","prompt#restricted_tags()","collection#reveal!()","collectionitem#reveal!()","collection#reveal_authors!()","tagnomination#reviewed?()","tagsetnomination#reviewed?()","series#revised_at()","translationhelper#rows_for_words()","comment#sanitized_content()","work#save_chapters()","creationobserver#save_creatorships()","work#save_parents()","storyparser#scan_text_for_meta()","bookmarkscontroller#search()","peoplecontroller#search()","tagscontroller#search()","workscontroller#search()","user::search_by_role()","searchhelper#search_header()","applicationcontroller#see_adult?()","devmodecontroller#seedusers()","devmodecontroller#seedworks()","admin::adminuserscontroller#send_activation()","collection#send_author_reveal_notifications()","workscontroller#send_external_invites()","admin::adminuserscontroller#send_notification()","challengeassignment#send_out()","challengeassignment::send_out()","challengeassignmentscontroller#send_out()","collection#send_reveal_notifications()","work#series_attributes=()","serieshelper#series_data_for_work()","serieshelper#series_list_for_feeds()","serieshelper#series_removal_confirmation()","challengeassignmentscontroller#set()","localescontroller#set()","skinscontroller#set()","filtercount::set_all()","collectionitem#set_anonymous_and_unrevealed()","castnomination#set_approval_status()","tagnomination#set_approval_status()","workscontroller#set_author_attributes()","locale::set_base_locale()","work#set_challenge_claim_info()","work#set_challenge_info()","storyparser#set_chapter_attributes()","applicationcontroller#set_current_user()","preference#set_default_skin()","comment#set_depth()","applicationcontroller#set_flash_cookie()","datehelper#set_format_for_date()","workscontroller#set_instance_variables()","workscontroller#set_instance_variables_tags()","tag#set_last_wrangler()","tagsetnominationscontroller#set_limit()","work#set_new_recipients()","promptrestriction#set_owned_tag_sets()","comment#set_parent()","tagnomination#set_parented()","applicationcontroller#set_preferred_locale()","prompt#set_pseud()","applicationcontroller#set_redirects()","work#set_revised_at()","skinshelper#set_site_skin()","applicationcontroller#set_sort_order()","adminsetting::set_stats_updated_at()","castnomination#set_tag_set_nomination()","tagnomination#set_tag_status()","comment#set_thread_for_replies()","challenge::giftexchangecontroller#set_time_zone()","challenge::promptmemecontroller#set_time_zone()","potentialmatch::set_up_generating()","externalwork#set_url_status()","chapter#set_word_count()","work#set_word_count()","storyparser#set_work_attributes()","applicationcontroller#setflash()","tagsetnominationscontroller#setup_for_review()","storyparser#shift_chapter_attributes()","filtertagging#should_exist?()","abusereportscontroller#show()","admin::adminuserscontroller#show()","adminpostscontroller#show()","adminscontroller#show()","archivefaqscontroller#show()","bookmarkscontroller#show()","challenge::giftexchangecontroller#show()","challenge::promptmemecontroller#show()","challengeassignmentscontroller#show()","challengeclaimscontroller#show()","challengesignupscontroller#show()","chapterscontroller#show()","collectionprofilecontroller#show()","collectionscontroller#show()","commentscontroller#show()","downloadscontroller#show()","externalworkscontroller#show()","fandomscontroller#show()","inboxcontroller#show()","invitationscontroller#show()","inviterequestscontroller#show()","knownissuescontroller#show()","kudoscontroller#show()","languagescontroller#show()","localescontroller#show()","mediacontroller#show()","opendoors::externalauthorscontroller#show()","ownedtagsetscontroller#show()","potentialmatchescontroller#show()","profilecontroller#show()","promptscontroller#show()","pseudscontroller#show()","redirectcontroller#show()","relatedworkscontroller#show()","seriescontroller#show()","skinscontroller#show()","static::collectionscontroller#show()","static::fandomscontroller#show()","static::mediacontroller#show()","static::restrictedworkscontroller#show()","static::workscontroller#show()","tagsetnominationscontroller#show()","tagwranglerscontroller#show()","tagscontroller#show()","translationnotescontroller#show()","translationscontroller#show()","translatorscontroller#show()","userscontroller#show()","workscontroller#show()","skinshelper#show_advanced_skin?()","usersessionscontroller#show_auth_error()","collectionshelper#show_collection_preface()","collectionshelper#show_collection_profile_navigation()","collectionshelper#show_collection_section()","collectionshelper#show_collections_data()","commentscontroller#show_comments()","commentshelper#show_comments_link()","tagscontroller#show_hidden()","tagshelper#show_hidden_tags_link()","commentshelper#show_hide_comments_link()","workshelper#show_hit_count?()","workshelper#show_hit_count_to_public?()","workscontroller#show_multiple()","ownedtagsetscontroller#show_options()","serieshelper#show_series_data()","workshelper#show_work_notes?()","tagshelper#show_wrangling_dashboard()","challengesignupscontroller#signup_closed()","promptscontroller#signup_closed()","usermailer#signup_notification()","challengeassignmentscontroller#signup_open()","potentialmatchescontroller#signup_open()","challengesignupscontroller#signup_owner_only()","promptscontroller#signup_owner_only()","workskin#singular()","homecontroller#site_map()","homecontroller#site_pages()","autocompletecontroller#site_skins()","skin::site_skins_dir()","skinshelper#skin_author_link()","skin::skin_dir_entries()","skin#skin_dirname()","skinshelper#skin_preview_display()","skin::skins_dir()","user#sole_authored_works()","skin::sort_by_recent()","skin::sort_by_recent_featured()","applicationhelper#sort_link()","collection::sorted_and_filtered()","work#sorted_authors()","work#sorted_pseuds()","work#sorted_title()","applicationhelper#span_if_current()","tag#squish_name()","usershelper#standard_icon()","adminsetting::stats_updated_at()","statshelper#stats_view()","applicationcontroller#store_location()","tag::string()","chapter#strip_title()","skin#stylesheet_link()","tag#sub_tag_string=()","tagshelper#sub_tag_tree()","subscription#subject_text()","applicationhelper#submit_button()","applicationhelper#submit_fieldset()","usermailer#subscription_notification()","challengesignupscontroller#summary()","challengesignup::summary_dir()","challengesignup::summary_file()","adminsetting::suspend_filter_counts?()","tag#syn_string()","tag#syn_string=()","tag#synonyms()","opendoors::table_name_prefix()","autocompletecontroller#tag()","tagshelper#tag_category_name()","tagshelper#tag_cloud()","commentshelper#tag_comment_as_spam_link()","tagshelper#tag_comment_link()","externalwork#tag_groups()","prompt#tag_groups()","series#tag_groups()","work#tag_groups()","autocompletecontroller#tag_in_fandom()","tagshelper#tag_link_list()","adminpost#tag_list()","prompt#tag_list()","workscontroller#tag_list()","adminpost#tag_list=()","tagsetshelper#tag_relation_to_list()","tagshelper#tag_search_result()","promptrestriction#tag_set_ids()","promptrestriction#tag_sets_to_add()","promptrestriction#tag_sets_to_add=()","promptrestriction#tag_sets_to_remove()","promptrestriction#tag_sets_to_remove=()","bookmark#tag_string()","bookmark#tag_string=()","prompt#tag_unlinked_list()","tagshelper#tag_with_link_to_edit()","user#tag_wrangler()","user#tag_wrangler=()","tagshelper#tag_wrangler_footer()","adminsetting::tag_wrangling_off?()","tagshelper#taggable_list()","tagset#taglist()","tagset#tagnames()","tagset#tagnames_must_exist()","tagset#tagnames_to_list()","tagset#tagnames_to_remove()","promptrestriction#tags()","ownedtagset#tags_in_set()","autocompletecontroller#tags_in_sets()","applicationhelper#text_byline()","translationhelper#time_ago_in_words()","applicationhelper#time_in_zone()","tagnomination#times_nominated()","challengeassignment#title()","challengeclaim#title()","collectionitem#title()","commentshelper#title_for_comment_page()","prompt#title_required?()","redismailqueue::to_notify()","collection#to_param()","language#to_param()","locale#to_param()","people#to_param()","pseud#to_param()","tag#to_param()","user#to_param()","externalauthorname#to_s()","externalcreatorship#to_s()","tagsetassociation#to_s()","comment#top_level?()","giftexchange#topmost_tag_type()","promptrestriction#topmost_tag_type()","tagset#topmost_tag_type()","homecontroller#tos()","homecontroller#tos_faq()","usershelper#tos_field_name()","user#translation_admin()","user#translation_admin=()","translationhelper#translation_status()","storyparser#truncate_on_word_boundary()","tagnomination#type_validity()","comment#ultimate_parent()","fandomscontroller#unassigned()","media::uncategorized()","externalauthor#unclaim!()","externalauthor::unclaimed()","challengeassignmentscontroller#uncover_default()","challengeassignmentscontroller#undefault()","prompt#unfulfilled?()","prompt#unfulfilled_claims()","challengeassignment::unfulfilled_in_collection()","challengeclaim::unfulfilled_in_collection()","challengesignup#unique_tags()","challengeclaim::unposted_for_user()","challengeassignment::unposted_in_collection()","challengeclaim::unposted_in_collection()","user#unposted_work()","pseud#unposted_works()","user#unposted_works()","errorscontroller#unprocessable_entity()","user#unread_inbox_comments()","user#unread_inbox_comments_count()","devmodecontroller#unregister_imports()","work#unrestricted()","work#unrestricted=()","collection#unrevealed?()","series#unrevealed?()","work#unrevealed?()","tagnomination::unreviewed()","tagnomination#unreviewed?()","tagsetnomination#unreviewed?()","collectionitem::unreviewed_by_collection()","collectionitem::unreviewed_by_user()","skinscontroller#unset()","tag#unwrangleable_status()","fandom::unwrangled()","tag#unwrangled?()","admin::settingscontroller#update()","admin::skinscontroller#update()","adminpostscontroller#update()","archivefaqscontroller#update()","bookmarkscontroller#update()","challenge::giftexchangecontroller#update()","challenge::promptmemecontroller#update()","challengesignupscontroller#update()","chapterscontroller#update()","collectionparticipantscontroller#update()","collectionscontroller#update()","commentscontroller#update()","externalauthorscontroller#update()","externalworkscontroller#update()","inboxcontroller#update()","invitationscontroller#update()","knownissuescontroller#update()","ownedtagsetscontroller#update()","preferencescontroller#update()","promptscontroller#update()","pseudscontroller#update()","relatedworkscontroller#update()","seriescontroller#update()","skinscontroller#update()","tagnominationscontroller#update()","tagsetnominationscontroller#update()","tagscontroller#update()","translationnotescontroller#update()","translationscontroller#update()","userinviterequestscontroller#update()","userscontroller#update()","workscontroller#update()","giftexchange#update_allowed_values()","promptrestriction#update_allowed_values()","fandomnomination#update_child_parent_tagnames()","work#update_complete_status()","commentobserver#update_feedback_in_inbox()","filtertagging::update_filter_counts_since()","tag#update_filters_for_canonical_change()","tag#update_filters_for_merger_change()","work#update_major_version()","work#update_minor_version()","challengeassignmentscontroller#update_multiple()","collectionitemscontroller#update_multiple()","tagsetassociationscontroller#update_multiple()","tagsetnominationscontroller#update_multiple()","workscontroller#update_multiple()","reading::update_or_create()","reading::update_or_create_in_database()","challengeassignment::update_placeholder_assignments!()","archivefaqscontroller#update_positions()","chapterscontroller#update_positions()","seriescontroller#update_positions()","workscontroller#update_tags()","comment#update_thread()","admin::adminuserscontroller#update_user()","commontagging#update_wrangler()","tag#update_wrangler()","prompt#url_required?()","opendoors::toolscontroller#url_update()","ownedtagset::usable()","skin::usable()","applicationhelper#use_tinymce()","challengesignup#user()","challengeclaim#user_allowed_to_destroy?()","challengesignup#user_allowed_to_destroy?()","collectionitem#user_allowed_to_destroy?()","collectionparticipant#user_allowed_to_destroy?()","collectionparticipant#user_allowed_to_promote?()","challengesignup#user_allowed_to_see?()","promptmeme#user_allowed_to_see_claims?()","giftexchange#user_allowed_to_see_prompt?()","giftexchange#user_allowed_to_see_requests_summary?()","challengesignup#user_allowed_to_see_signups?()","promptmeme#user_allowed_to_see_signups?()","collection#user_is_maintainer?()","collection#user_is_moderator?()","ownedtagset#user_is_moderator?()","collection#user_is_owner?()","ownedtagset#user_is_owner?()","collection#user_is_participant?()","collection#user_is_posting_participant?()","applicationcontroller#user_logout_required()","pseud#user_name()","applicationcontroller#users_only()","skin#valid_colors()","skin#valid_font()","skin#valid_media()","skin#valid_public_preview()","applicationcontroller#valid_sort_column()","applicationcontroller#valid_sort_direction()","chapter#validate_authors()","work#validate_authors()","profile#validate_date_of_birth()","emailveracityvalidator#validate_each()","urlactivevalidator#validate_each()","urlformatvalidator#validate_each()","chapter#validate_published_at()","work#validate_published_at()","commentshelper#value_for_comment_form()","work#visibility_changed?()","externalwork#visible()","ownedtagset::visible()","series#visible()","work::visible()","work#visible()","bookmark#visible?()","externalwork#visible?()","series#visible?()","work#visible?()","tag#visible_bookmarks_count()","tag#visible_external_works_count()","pseud#visible_recs_count()","tag#visible_taggables_count()","work::visible_to_user()","series#visible_word_count()","series#visible_work_count()","user#visible_work_count()","pseud#visible_works_count()","tag#visible_works_count()","tagshelper#warning_display_name()","chapter#wip_length()","work#wip_length()","chapter#wip_length=()","work#wip_length=()","user#wipeout_unposted_works()","tag::with_popularity_relative_to_average()","tagset#with_type()","tagset#with_type_from_redis()","cachehelper#work_blurb_cache_key()","language#work_count()","pseud::work_counts_for_pseuds()","cachehelper#work_meta_cache_key()","workshelper#work_meta_list()","workshelper#work_parent_value()","serieshelper#work_series_description()","work#work_skin_allowed()","tagwranglingscontroller#wrangle()","tagscontroller#wrangle()","tagshelper#wrangler_list()","",""],"info":[["AbuseReport","","AbuseReport.html","",""],["AbuseReportsController","","AbuseReportsController.html","",""],["Admin","","Admin.html","",""],["Admin::AdminInvitationsController","","Admin/AdminInvitationsController.html","",""],["Admin::AdminUsersController","","Admin/AdminUsersController.html","",""],["Admin::SettingsController","","Admin/SettingsController.html","",""],["Admin::SkinsController","","Admin/SkinsController.html","",""],["Admin::StatsController","","Admin/StatsController.html","",""],["Admin::UserCreationsController","","Admin/UserCreationsController.html","",""],["AdminMailer","","AdminMailer.html","",""],["AdminPost","","AdminPost.html","",""],["AdminPostTag","","AdminPostTag.html","",""],["AdminPostTagging","","AdminPostTagging.html","",""],["AdminPostsController","","AdminPostsController.html","",""],["AdminSession","","AdminSession.html","",""],["AdminSessionsController","","AdminSessionsController.html","",""],["AdminSetting","","AdminSetting.html","",""],["AdminsController","","AdminsController.html","",""],["AdvancedSearchHelper","","AdvancedSearchHelper.html","",""],["AlphabetHelper","","AlphabetHelper.html","",""],["ApplicationController","","ApplicationController.html","",""],["ApplicationHelper","","ApplicationHelper.html","","<p>Methods added to this helper will be available to all templates in the\napplication.\n"],["ArchiveFaq","","ArchiveFaq.html","",""],["ArchiveFaqsController","","ArchiveFaqsController.html","",""],["AutocompleteController","","AutocompleteController.html","",""],["Banned","","Banned.html","",""],["Bookmark","","Bookmark.html","",""],["BookmarksController","","BookmarksController.html","",""],["BookmarksHelper","","BookmarksHelper.html","",""],["CacheHelper","","CacheHelper.html","",""],["CastNomination","","CastNomination.html","",""],["Category","","Category.html","",""],["Challenge","","Challenge.html","",""],["Challenge::GiftExchangeController","","Challenge/GiftExchangeController.html","",""],["Challenge::PromptMemeController","","Challenge/PromptMemeController.html","",""],["ChallengeAssignment","","ChallengeAssignment.html","",""],["ChallengeAssignmentsController","","ChallengeAssignmentsController.html","",""],["ChallengeClaim","","ChallengeClaim.html","",""],["ChallengeClaimsController","","ChallengeClaimsController.html","",""],["ChallengeHelper","","ChallengeHelper.html","",""],["ChallengeRequestsController","","ChallengeRequestsController.html","",""],["ChallengeSignup","","ChallengeSignup.html","",""],["ChallengeSignupObserver","","ChallengeSignupObserver.html","",""],["ChallengeSignupSweeper","","ChallengeSignupSweeper.html","",""],["ChallengeSignupsController","","ChallengeSignupsController.html","",""],["ChallengeSweeper","","ChallengeSweeper.html","",""],["ChallengesController","","ChallengesController.html","",""],["Chapter","","Chapter.html","",""],["ChapterSweeper","","ChapterSweeper.html","",""],["ChaptersController","","ChaptersController.html","",""],["ChaptersHelper","","ChaptersHelper.html","",""],["Character","","Character.html","",""],["CharacterNomination","","CharacterNomination.html","",""],["Collection","","Collection.html","",""],["CollectionItem","","CollectionItem.html","",""],["CollectionItemsController","","CollectionItemsController.html","",""],["CollectionObserver","","CollectionObserver.html","",""],["CollectionParticipant","","CollectionParticipant.html","",""],["CollectionParticipantsController","","CollectionParticipantsController.html","",""],["CollectionPreference","","CollectionPreference.html","",""],["CollectionProfile","","CollectionProfile.html","",""],["CollectionProfileController","","CollectionProfileController.html","",""],["CollectionSweeper","","CollectionSweeper.html","",""],["CollectionsController","","CollectionsController.html","",""],["CollectionsHelper","","CollectionsHelper.html","",""],["Comment","","Comment.html","",""],["CommentMailer","","CommentMailer.html","",""],["CommentObserver","","CommentObserver.html","",""],["CommentSweeper","","CommentSweeper.html","",""],["CommentsController","","CommentsController.html","",""],["CommentsHelper","","CommentsHelper.html","",""],["CommonTagging","","CommonTagging.html","",""],["CreationObserver","","CreationObserver.html","",""],["Creatorship","","Creatorship.html","",""],["DateHelper","","DateHelper.html","",""],["DevmodeController","","DevmodeController.html","",""],["DownloadsController","","DownloadsController.html","",""],["EmailVeracityValidator","","EmailVeracityValidator.html","","<p>from\nmy.rails-royce.org/2010/07/21/email-validation-in-ruby-on-rails-without-regexp/\n"],["ErrorsController","","ErrorsController.html","",""],["ExternalAuthor","","ExternalAuthor.html","",""],["ExternalAuthorName","","ExternalAuthorName.html","",""],["ExternalAuthorsController","","ExternalAuthorsController.html","",""],["ExternalAuthorsHelper","","ExternalAuthorsHelper.html","",""],["ExternalCreatorship","","ExternalCreatorship.html","",""],["ExternalWork","","ExternalWork.html","",""],["ExternalWorksController","","ExternalWorksController.html","",""],["Fandom","","Fandom.html","",""],["FandomNomination","","FandomNomination.html","",""],["FandomsController","","FandomsController.html","",""],["FeedSweeper","","FeedSweeper.html","",""],["Feedback","","Feedback.html","","<p>Class which holds feedback sent to the archive administrators about the\narchive as a whole\n"],["FeedbacksController","","FeedbacksController.html","",""],["FilterCount","","FilterCount.html","",""],["FilterTagging","","FilterTagging.html","","<p>This is essentially a mirror of the taggings table as applied to works\n(right now) except with all works …\n"],["Freeform","","Freeform.html","",""],["FreeformNomination","","FreeformNomination.html","",""],["Gift","","Gift.html","",""],["GiftExchange","","GiftExchange.html","",""],["GiftsController","","GiftsController.html","",""],["HitCounter","","HitCounter.html","",""],["HomeController","","HomeController.html","",""],["HomeHelper","","HomeHelper.html","",""],["InboxComment","","InboxComment.html","",""],["InboxController","","InboxController.html","",""],["InboxHelper","","InboxHelper.html","",""],["Invitation","","Invitation.html","","<p>Beta invitations railscasts.com/episodes/124-beta-invitations\n"],["InvitationsController","","InvitationsController.html","",""],["InvitationsHelper","","InvitationsHelper.html","",""],["InviteRequest","","InviteRequest.html","",""],["InviteRequestsController","","InviteRequestsController.html","",""],["KnownIssue","","KnownIssue.html","",""],["KnownIssuesController","","KnownIssuesController.html","",""],["Kudo","","Kudo.html","",""],["KudoMailer","","KudoMailer.html","",""],["KudoObserver","","KudoObserver.html","",""],["KudosController","","KudosController.html","",""],["KudosSweeper","","KudosSweeper.html","",""],["Language","","Language.html","",""],["LanguagesController","","LanguagesController.html","",""],["Locale","","Locale.html","",""],["LocalesController","","LocalesController.html","",""],["LogItem","","LogItem.html","",""],["Media","","Media.html","",""],["MediaController","","MediaController.html","",""],["MetaTagging","","MetaTagging.html","",""],["Object","","Object.html","",""],["Offer","","Offer.html","",""],["Opendoors","","Opendoors.html","",""],["Opendoors::ExternalAuthorsController","","Opendoors/ExternalAuthorsController.html","",""],["Opendoors::ToolsController","","Opendoors/ToolsController.html","",""],["OrphansController","","OrphansController.html","",""],["OrphansHelper","","OrphansHelper.html","",""],["OwnedSetTagging","","OwnedSetTagging.html","",""],["OwnedTagSet","","OwnedTagSet.html","",""],["OwnedTagSetsController","","OwnedTagSetsController.html","",""],["PasswordsController","","PasswordsController.html","","<p>Use for resetting lost passwords\n"],["People","","People.html","",""],["PeopleController","","PeopleController.html","",""],["PotentialMatch","","PotentialMatch.html","",""],["PotentialMatchSettings","","PotentialMatchSettings.html","",""],["PotentialMatchesController","","PotentialMatchesController.html","",""],["PotentialPromptMatch","","PotentialPromptMatch.html","",""],["Preference","","Preference.html","",""],["PreferencesController","","PreferencesController.html","",""],["Profile","","Profile.html","",""],["ProfileController","","ProfileController.html","",""],["Prompt","","Prompt.html","",""],["PromptMeme","","PromptMeme.html","",""],["PromptRestriction","","PromptRestriction.html","",""],["PromptRestrictionsHelper","","PromptRestrictionsHelper.html","",""],["PromptsController","","PromptsController.html","",""],["Pseud","","Pseud.html","",""],["PseudSweeper","","PseudSweeper.html","",""],["PseudsController","","PseudsController.html","",""],["PseudsHelper","","PseudsHelper.html","",""],["Rating","","Rating.html","",""],["Reading","","Reading.html","",""],["ReadingsController","","ReadingsController.html","",""],["RedirectController","","RedirectController.html","",""],["RedisMailQueue","","RedisMailQueue.html","",""],["RelatedWork","","RelatedWork.html","",""],["RelatedWorksController","","RelatedWorksController.html","",""],["Relationship","","Relationship.html","",""],["RelationshipNomination","","RelationshipNomination.html","",""],["Request","","Request.html","",""],["Role","","Role.html","","<p>Defines named roles for users that may be applied to objects in a\npolymorphic fashion. For example, you …\n"],["RolesUser","","RolesUser.html","",""],["SearchController","","SearchController.html","",""],["SearchHelper","","SearchHelper.html","",""],["SerialWork","","SerialWork.html","",""],["SerialWorksController","","SerialWorksController.html","",""],["Series","","Series.html","",""],["SeriesController","","SeriesController.html","",""],["SeriesHelper","","SeriesHelper.html","",""],["SetTagging","","SetTagging.html","",""],["Skin","","Skin.html","",""],["SkinParent","","SkinParent.html","",""],["SkinsController","","SkinsController.html","",""],["SkinsHelper","","SkinsHelper.html","",""],["StatCounter","","StatCounter.html","",""],["Static","","Static.html","",""],["Static::BaseController","","Static/BaseController.html","",""],["Static::CollectionsController","","Static/CollectionsController.html","",""],["Static::FandomsController","","Static/FandomsController.html","",""],["Static::MediaController","","Static/MediaController.html","",""],["Static::RestrictedWorksController","","Static/RestrictedWorksController.html","",""],["Static::WorksController","","Static/WorksController.html","",""],["StaticSweeper","","StaticSweeper.html","",""],["StatsController","","StatsController.html","",""],["StatsHelper","","StatsHelper.html","",""],["StoryParser","","StoryParser.html","","<p>Parse stories from other websites and uploaded files, looking for metadata\nto harvest and put into the …\n"],["StoryParser::Error","","StoryParser/Error.html","","<p>Use this for raising custom error messages (so that we can distinguish them\nfrom unexpected exceptions …\n"],["Subscription","","Subscription.html","",""],["SubscriptionsController","","SubscriptionsController.html","",""],["Tag","","Tag.html","",""],["TagNomination","","TagNomination.html","",""],["TagNominationsController","","TagNominationsController.html","",""],["TagSet","","TagSet.html","",""],["TagSetAssociation","","TagSetAssociation.html","",""],["TagSetAssociationsController","","TagSetAssociationsController.html","",""],["TagSetNomination","","TagSetNomination.html","",""],["TagSetNominationsController","","TagSetNominationsController.html","",""],["TagSetOwnership","","TagSetOwnership.html","",""],["TagSetSweeper","","TagSetSweeper.html","",""],["TagSetsHelper","","TagSetsHelper.html","",""],["TagSweeper","","TagSweeper.html","",""],["TagWranglersController","","TagWranglersController.html","",""],["TagWranglingsController","","TagWranglingsController.html","",""],["Tagging","","Tagging.html","",""],["TagsController","","TagsController.html","",""],["TagsHelper","","TagsHelper.html","",""],["TranslationHelper","","TranslationHelper.html","",""],["TranslationNote","","TranslationNote.html","",""],["TranslationNotesController","","TranslationNotesController.html","",""],["TranslationsController","","TranslationsController.html","",""],["TranslatorsController","","TranslatorsController.html","",""],["UnsortedTag","","UnsortedTag.html","",""],["UnsortedTagsController","","UnsortedTagsController.html","",""],["UrlActiveValidator","","UrlActiveValidator.html","",""],["UrlFormatValidator","","UrlFormatValidator.html","","<p>Validate format of URLs\n"],["User","","User.html","",""],["UserInviteRequest","","UserInviteRequest.html","",""],["UserInviteRequestsController","","UserInviteRequestsController.html","",""],["UserInviteRequestsHelper","","UserInviteRequestsHelper.html","",""],["UserMailer","","UserMailer.html","",""],["UserSession","","UserSession.html","",""],["UserSessionsController","","UserSessionsController.html","",""],["UsersController","","UsersController.html","",""],["UsersHelper","","UsersHelper.html","",""],["ValidationHelper","","ValidationHelper.html","",""],["Warning","","Warning.html","",""],["WeightedRandom","","WeightedRandom.html","",""],["Work","","Work.html","",""],["WorkLink","","WorkLink.html","",""],["WorkLinksController","","WorkLinksController.html","",""],["WorkObserver","","WorkObserver.html","",""],["WorkSkin","","WorkSkin.html","",""],["WorkSweeper","","WorkSweeper.html","",""],["WorksController","","WorksController.html","",""],["WorksHelper","","WorksHelper.html","",""],["WranglingAssignment","","WranglingAssignment.html","",""],["+","TagSet","TagSet.html#method-i-2B","(other)","<p>Various utility methods\n"],["-","TagSet","TagSet.html#method-i-2D","(other)",""],["<=>","ChallengeAssignment","ChallengeAssignment.html#method-i-3C-3D-3E","(other)","<p>sort in order that puts assignments with no request ahead of assignments\nwith no offer, ahead of assignments …\n"],["<=>","ChallengeClaim","ChallengeClaim.html#method-i-3C-3D-3E","(other)",""],["<=>","ChallengeSignup","ChallengeSignup.html#method-i-3C-3D-3E","(other)",""],["<=>","PotentialMatch","PotentialMatch.html#method-i-3C-3D-3E","(other)",""],["<=>","PotentialPromptMatch","PotentialPromptMatch.html#method-i-3C-3D-3E","(other)",""],["<=>","Pseud","Pseud.html#method-i-3C-3D-3E","(other)","<p>Enigel Dec 12 08: added sort method sorting by pseud name or by login name\nin case of equality\n"],["<=>","Tag","Tag.html#method-i-3C-3D-3E","(another_tag)","<p>sort tags by name\n"],["<=>","Work","Work.html#method-i-3C-3D-3E","(another_work)","<p>sort works by title\n"],["==","ChallengeClaim","ChallengeClaim.html#method-i-3D-3D","(other)","<p>have to override the == operator or else two claims by same user on same\nuser’s prompts are equal\n"],["_get_view_paths","DevmodeController","DevmodeController.html#method-i-_get_view_paths","(controller, view, stack)",""],["abbreviated_display_title","Chapter","Chapter.html#method-i-abbreviated_display_title","()",""],["abuse_report","AdminMailer","AdminMailer.html#method-i-abuse_report","(abuse_report_id)",""],["abuse_report","UserMailer","UserMailer.html#method-i-abuse_report","(report_id)",""],["access_denied","ApplicationController","ApplicationController.html#method-i-access_denied","(options ={})","<p>Redirect as appropriate when an access request fails.\n<p>The default action is to redirect to the login screen. …\n"],["account_creation_enabled?","AdminSetting","AdminSetting.html#method-c-account_creation_enabled-3F","()",""],["activate","Admin::AdminUsersController","Admin/AdminUsersController.html#method-i-activate","()",""],["activate","User","User.html#method-i-activate","()",""],["activate","UsersController","UsersController.html#method-i-activate","()",""],["activation","UserMailer","UserMailer.html#method-i-activation","(user_id)","<p>Emails a user to confirm that their account is validated and activated\n"],["active?","User","User.html#method-i-active-3F","()","<p>AUTHENTICATION AND PASSWORDS\n"],["add","CollectionParticipantsController","CollectionParticipantsController.html#method-i-add","()",""],["add_association","Character","Character.html#method-i-add_association","(tag)",""],["add_association","Fandom","Fandom.html#method-i-add_association","(tag)",""],["add_association","Media","Media.html#method-i-add_association","(tag)",""],["add_association","Tag","Tag.html#method-i-add_association","(tag)","<p>Add a common tagging association Offloading most of the logic to the\ninherited tag models\n"],["add_cancel_comment_reply_link","CommentsHelper","CommentsHelper.html#method-i-add_cancel_comment_reply_link","(comment)","<p>HELPERS FOR REPLYING TO COMMENTS #####\n"],["add_comment","CommentsController","CommentsController.html#method-i-add_comment","()",""],["add_comment_reply","CommentsController","CommentsController.html#method-i-add_comment_reply","()",""],["add_comment_reply_link","CommentsHelper","CommentsHelper.html#method-i-add_comment_reply_link","(comment)","<p>return link to add new reply to a comment\n"],["add_feedback_to_inbox","CommentObserver","CommentObserver.html#method-i-add_feedback_to_inbox","(user, comment)",""],["add_filter_tagging","ExternalWork","ExternalWork.html#method-i-add_filter_tagging","(tag)","<p>Creates a filter_tagging relationship between the work and the tag or its\ncanonical synonym\n"],["add_filter_tagging","Work","Work.html#method-i-add_filter_tagging","(tag, meta=false)","<p>Creates a filter_tagging relationship between the work and the tag or its\ncanonical synonym\n"],["add_filter_taggings","Tag","Tag.html#method-i-add_filter_taggings","()","<p>Add filter taggings for a given tag\n"],["add_filter_taggings","Tagging","Tagging.html#method-i-add_filter_taggings","()",""],["add_filters","MetaTagging","MetaTagging.html#method-i-add_filters","()","<p>When you filter by the meta tag, you should get the works associated with\nthe sub tag but not vice versa …\n"],["add_media_for_uncategorized","Fandom","Fandom.html#method-i-add_media_for_uncategorized","()",""],["add_missing_filter_taggings","Tag","Tag.html#method-c-add_missing_filter_taggings","()","<p>Add any filter taggings that should exist but don’t\n"],["add_moderator","OwnedTagSet","OwnedTagSet.html#method-i-add_moderator","(pseud)",""],["add_name_link","ExternalAuthorsHelper","ExternalAuthorsHelper.html#method-i-add_name_link","(form_builder)",""],["add_owner","OwnedTagSet","OwnedTagSet.html#method-i-add_owner","(pseud)",""],["add_parent_string","Tag","Tag.html#method-i-add_parent_string","(tag_string)",""],["add_tagnames","OwnedTagSet","OwnedTagSet.html#method-i-add_tagnames","(tag_type, tagnames_to_add)",""],["add_tags_to_autocomplete","TagSet","TagSet.html#method-i-add_tags_to_autocomplete","(tags_to_add)",""],["add_to_autocomplete","Tag","Tag.html#method-i-add_to_autocomplete","(score = nil)",""],["add_to_autocomplete","TagSet","TagSet.html#method-i-add_to_autocomplete","(score = nil)",""],["add_to_autocomplete","TagSetAssociation","TagSetAssociation.html#method-i-add_to_autocomplete","(score = nil)",""],["adjust_filter_counts","Work","Work.html#method-i-adjust_filter_counts","()","<p>Calls reset_filter_count on all the work’s filters\n"],["adjust_restricted","Series","Series.html#method-i-adjust_restricted","()","<p>if the series includes an unrestricted work, restricted should be false if\nthe series includes no unrestricted …\n"],["adjust_series_restriction","Work","Work.html#method-i-adjust_series_restriction","()","<p>Make sure the series restriction level is in line with its works\n"],["adjust_series_visibility","SerialWork","SerialWork.html#method-i-adjust_series_visibility","()","<p>If you add or remove a work from a series, make sure restricted? is still\naccurate\n"],["adjust_threading","Comment","Comment.html#method-i-adjust_threading","()",""],["admin_logout_required","ApplicationController","ApplicationController.html#method-i-admin_logout_required","()","<p>Prevents admin from logging in as users\n"],["admin_only","ApplicationController","ApplicationController.html#method-i-admin_only","()","<p>Filter method - keeps users out of admin areas\n"],["admin_only_access_denied","ApplicationController","ApplicationController.html#method-i-admin_only_access_denied","()",""],["admin_update","User","User.html#method-i-admin_update","(attributes)","<p>Allow admins to set roles and change email\n"],["advanced_search_string=","AdvancedSearchHelper","AdvancedSearchHelper.html#method-i-advanced_search_string-3D","(term_string)",""],["after_create","ChallengeSweeper","ChallengeSweeper.html#method-i-after_create","(record)",""],["after_create","CollectionSweeper","CollectionSweeper.html#method-i-after_create","(record)",""],["after_create","CommentObserver","CommentObserver.html#method-i-after_create","(comment)","<p>Add new comments to the inbox of the person to whom they’re directed Send\nthat user a notification email …\n"],["after_create","CreationObserver","CreationObserver.html#method-i-after_create","(creation)","<p>Send notifications when a creation is posted without preview\n"],["after_create","FeedSweeper","FeedSweeper.html#method-i-after_create","(record)",""],["after_create","KudoObserver","KudoObserver.html#method-i-after_create","(kudo)",""],["after_create","KudosSweeper","KudosSweeper.html#method-i-after_create","(kudo)",""],["after_create","PseudSweeper","PseudSweeper.html#method-i-after_create","(record)",""],["after_create","TagSetSweeper","TagSetSweeper.html#method-i-after_create","(record)",""],["after_create","TagSweeper","TagSweeper.html#method-i-after_create","(tag)",""],["after_destroy","ChallengeSignupSweeper","ChallengeSignupSweeper.html#method-i-after_destroy","(record)",""],["after_destroy","ChallengeSweeper","ChallengeSweeper.html#method-i-after_destroy","(record)",""],["after_destroy","ChapterSweeper","ChapterSweeper.html#method-i-after_destroy","(chapter)",""],["after_destroy","CollectionSweeper","CollectionSweeper.html#method-i-after_destroy","(record)",""],["after_destroy","CommentSweeper","CommentSweeper.html#method-i-after_destroy","(comment)",""],["after_destroy","TagSetSweeper","TagSetSweeper.html#method-i-after_destroy","(record)",""],["after_destroy","WorkSweeper","WorkSweeper.html#method-i-after_destroy","(record)",""],["after_save","ChallengeSignupSweeper","ChallengeSignupSweeper.html#method-i-after_save","(record)",""],["after_save","ChapterSweeper","ChapterSweeper.html#method-i-after_save","(chapter)",""],["after_save","CollectionSweeper","CollectionSweeper.html#method-i-after_save","(record)",""],["after_save","CommentSweeper","CommentSweeper.html#method-i-after_save","(comment)",""],["after_save","WorkSweeper","WorkSweeper.html#method-i-after_save","(record)",""],["after_update","ChallengeSweeper","ChallengeSweeper.html#method-i-after_update","(record)",""],["after_update","CollectionSweeper","CollectionSweeper.html#method-i-after_update","(record)",""],["after_update","CommentObserver","CommentObserver.html#method-i-after_update","(comment)",""],["after_update","CreationObserver","CreationObserver.html#method-i-after_update","(creation)","<p>Send notifications if a creation has been edited and its recipients list\nhas changed\n"],["after_update","FeedSweeper","FeedSweeper.html#method-i-after_update","(record)",""],["after_update","PseudSweeper","PseudSweeper.html#method-i-after_update","(record)",""],["after_update","StaticSweeper","StaticSweeper.html#method-i-after_update","(record)",""],["after_update","TagSetSweeper","TagSetSweeper.html#method-i-after_update","(record)",""],["after_update","TagSweeper","TagSweeper.html#method-i-after_update","(tag)",""],["akismet_attributes","Comment","Comment.html#method-i-akismet_attributes","()",""],["akismet_attributes","Feedback","Feedback.html#method-i-akismet_attributes","()",""],["all","People","People.html#method-c-all","()",""],["all_approved_bookmarks","Collection","Collection.html#method-i-all_approved_bookmarks","()",""],["all_approved_bookmarks_count","Collection","Collection.html#method-i-all_approved_bookmarks_count","()",""],["all_approved_works","Collection","Collection.html#method-i-all_approved_works","()",""],["all_approved_works_count","Collection","Collection.html#method-i-all_approved_works_count","()",""],["all_characters","Relationship","Relationship.html#method-i-all_characters","()",""],["all_fandoms","Collection","Collection.html#method-i-all_fandoms","()",""],["all_fandoms_count","Collection","Collection.html#method-i-all_fandoms_count","()",""],["all_kudos_count","Work","Work.html#method-i-all_kudos_count","()",""],["all_members","Collection","Collection.html#method-i-all_members","()",""],["all_moderators","Collection","Collection.html#method-i-all_moderators","()",""],["all_owners","Collection","Collection.html#method-i-all_owners","()",""],["all_participants","Collection","Collection.html#method-i-all_participants","()",""],["all_posting_participants","Collection","Collection.html#method-i-all_posting_participants","()",""],["allfandoms","Series","Series.html#method-i-allfandoms","()","<p>returns list of fandoms on this series\n"],["allow_any?","PromptRestriction","PromptRestriction.html#method-i-allow_any-3F","(tag_type)",""],["allow_name_change?","GiftExchange","GiftExchange.html#method-i-allow_name_change-3F","()","<p>override core\n"],["allow_tinymce?","ApplicationHelper","ApplicationHelper.html#method-i-allow_tinymce-3F","(controller)","<p>check for pages that allow tiny_mce before loading the massive javascript\n"],["allowed","PromptRestriction","PromptRestriction.html#method-i-allowed","(tag_type)",""],["allowed_css_instructions","ApplicationHelper","ApplicationHelper.html#method-i-allowed_css_instructions","()",""],["allowed_html_instructions","ApplicationHelper","ApplicationHelper.html#method-i-allowed_html_instructions","(show_list = false, show_text=true)","<p>1: default shows just the link to help 2: show_text = true: shows “plain\ntext with limited html” …\n"],["allowed_tags","Prompt","Prompt.html#method-i-allowed_tags","()",""],["allowed_to_destroy","ChallengeAssignmentsController","ChallengeAssignmentsController.html#method-i-allowed_to_destroy","()",""],["allowed_to_destroy","ChallengeClaimsController","ChallengeClaimsController.html#method-i-allowed_to_destroy","()",""],["allowed_to_destroy","ChallengeSignupsController","ChallengeSignupsController.html#method-i-allowed_to_destroy","()",""],["allowed_to_destroy","CollectionItemsController","CollectionItemsController.html#method-i-allowed_to_destroy","()",""],["allowed_to_destroy","CollectionParticipantsController","CollectionParticipantsController.html#method-i-allowed_to_destroy","()",""],["allowed_to_destroy","PromptsController","PromptsController.html#method-i-allowed_to_destroy","()",""],["allowed_to_promote","CollectionParticipantsController","CollectionParticipantsController.html#method-i-allowed_to_promote","()",""],["allowed_to_see","PromptsController","PromptsController.html#method-i-allowed_to_see","()",""],["allpseuds","Series","Series.html#method-i-allpseuds","()","<p>return list of pseuds on this series\n"],["alpha_paginated_section","AlphabetHelper","AlphabetHelper.html#method-i-alpha_paginated_section","(alphabet = People.all.map(&:char))",""],["already_approved?","OwnedTagSet","OwnedTagSet.html#method-i-already_approved-3F","(tagname)",""],["already_in_set?","OwnedTagSet","OwnedTagSet.html#method-i-already_in_set-3F","(tagname)","<p>we can use redis to speed this up since tagset data is loaded there for\nautocomplete\n"],["already_nominated?","OwnedTagSet","OwnedTagSet.html#method-i-already_nominated-3F","(tagname)",""],["already_rejected?","OwnedTagSet","OwnedTagSet.html#method-i-already_rejected-3F","(tagname)",""],["anonymous?","Collection","Collection.html#method-i-anonymous-3F","()",""],["anonymous?","Series","Series.html#method-i-anonymous-3F","()",""],["anonymous?","Work","Work.html#method-i-anonymous-3F","(user=User.current_user)",""],["approve","CollectionItem","CollectionItem.html#method-i-approve","(user)",""],["approve","CommentsController","CommentsController.html#method-i-approve","()",""],["approve!","TagNomination","TagNomination.html#method-i-approve-21","()",""],["approve_automatically","CollectionItem","CollectionItem.html#method-i-approve_automatically","()",""],["approve_by_collection","CollectionItem","CollectionItem.html#method-i-approve_by_collection","()",""],["approve_by_user","CollectionItem","CollectionItem.html#method-i-approve_by_user","()",""],["approve_membership!","CollectionParticipant","CollectionParticipant.html#method-i-approve_membership-21","()",""],["approved?","CollectionItem","CollectionItem.html#method-i-approved-3F","()",""],["approved_by_collection","CollectionItem","CollectionItem.html#method-c-approved_by_collection","()",""],["approved_by_collection?","CollectionItem","CollectionItem.html#method-i-approved_by_collection-3F","()",""],["approved_by_user","CollectionItem","CollectionItem.html#method-c-approved_by_user","()",""],["approved_by_user?","CollectionItem","CollectionItem.html#method-i-approved_by_user-3F","()",""],["approved_or_owned_by","Skin","Skin.html#method-c-approved_or_owned_by","(user=User.current_user)",""],["archive_notification","AdminMailer","AdminMailer.html#method-i-archive_notification","(admin_login, user_ids, subject, message)",""],["archive_notification","UserMailer","UserMailer.html#method-i-archive_notification","(admin_login, user_id, subject, message)","<p>Sends an admin message to a user\n"],["archivist","User","User.html#method-i-archivist","()","<p>Is this user an authorized archivist?\n"],["archivist=","User","User.html#method-i-archivist-3D","(should_be_archivist)","<p>Set archivist role for this user and log change\n"],["assign","TranslationsController","TranslationsController.html#method-i-assign","()",""],["assign_offer!","ChallengeAssignment","ChallengeAssignment.html#method-c-assign_offer-21","(collection, offer_signup)","<p>go through the offer’s potential matches in order from best to worst and\ntry and assign\n"],["assign_request!","ChallengeAssignment","ChallengeAssignment.html#method-c-assign_request-21","(collection, request_signup)","<p>go through the request’s potential matches in order from best to worst and\ntry and assign\n"],["assign_tags","TagSet","TagSet.html#method-i-assign_tags","()",""],["assignment_notification","Collection","Collection.html#method-i-assignment_notification","()",""],["assignments_not_sent","ChallengeAssignmentsController","ChallengeAssignmentsController.html#method-i-assignments_not_sent","()",""],["assignments_sent","ChallengeAssignmentsController","ChallengeAssignmentsController.html#method-i-assignments_sent","()",""],["assignments_sent","PotentialMatchesController","PotentialMatchesController.html#method-i-assignments_sent","()",""],["associated_tags","AutocompleteController","AutocompleteController.html#method-i-associated_tags","()","<p>expects the following params:  :fandom - fandom name(s) as an array or a\ncomma-separated string :tag_set …\n"],["associations_to_remove","Tag","Tag.html#method-i-associations_to_remove","()",""],["associations_to_remove=","OwnedTagSet","OwnedTagSet.html#method-i-associations_to_remove-3D","(assoc_ids)","<p>MANAGING ASSOCIATIONS\n"],["associations_to_remove=","Tag","Tag.html#method-i-associations_to_remove-3D","(taglist)",""],["async","Collection","Collection.html#method-i-async","(method, *args)","<p>We can pass this any Collection instance method that we want to run later.\n"],["author_attributes=","Chapter","Chapter.html#method-i-author_attributes-3D","(attributes)","<p>Virtual attribute for pseuds\n"],["author_attributes=","Series","Series.html#method-i-author_attributes-3D","(attributes)","<p>Virtual attribute for pseuds\n"],["author_attributes=","Work","Work.html#method-i-author_attributes-3D","(attributes)","<p>Virtual attribute for pseuds\n"],["author_name","ExternalCreatorship","ExternalCreatorship.html#method-i-author_name","()",""],["author_tags","Series","Series.html#method-i-author_tags","()",""],["authored_items","UsersHelper","UsersHelper.html#method-i-authored_items","(pseud, work_counts={}, rec_counts={})",""],["authors","People","People.html#method-i-authors","()",""],["authors_header","UsersHelper","UsersHelper.html#method-i-authors_header","(collection, what = \"People\")","<p>def print_pseud_drafts_link(pseud)\n\n<pre>total = pseud.unposted_works.size\nlink_to_unless_current t('my_drafts', ...</pre>\n"],["autocomplete_fandom_lookup","Tag","Tag.html#method-c-autocomplete_fandom_lookup","(options = {})","<p>look up tags that have been wrangled into a given fandom\n"],["autocomplete_lookup","TagSet","TagSet.html#method-c-autocomplete_lookup","(options={})","<p>returns tags that are in ANY or ALL of the specified tag sets\n"],["autocomplete_lookup","TagSetAssociation","TagSetAssociation.html#method-c-autocomplete_lookup","(options = {})","<p>returns tags that have been associated with a given fandom OR wrangled\n"],["autocomplete_options","ApplicationHelper","ApplicationHelper.html#method-i-autocomplete_options","(method, options={})","<p>returns the default autocomplete attributes, all of which can be overridden\nnote: we do this and put …\n"],["autocomplete_prefixes","Collection","Collection.html#method-i-autocomplete_prefixes","()",""],["autocomplete_prefixes","Pseud","Pseud.html#method-i-autocomplete_prefixes","()",""],["autocomplete_prefixes","Tag","Tag.html#method-i-autocomplete_prefixes","()",""],["autocomplete_prefixes","TagSet","TagSet.html#method-i-autocomplete_prefixes","()",""],["autocomplete_prefixes","TagSetAssociation","TagSetAssociation.html#method-i-autocomplete_prefixes","()",""],["autocomplete_score","Collection","Collection.html#method-i-autocomplete_score","()",""],["autocomplete_score","Tag","Tag.html#method-i-autocomplete_score","()",""],["autocomplete_score","TagSetAssociation","TagSetAssociation.html#method-i-autocomplete_score","()",""],["autocomplete_search_string","Collection","Collection.html#method-i-autocomplete_search_string","()",""],["autocomplete_search_string_was","Collection","Collection.html#method-i-autocomplete_search_string_was","()",""],["autocomplete_value","Pseud","Pseud.html#method-i-autocomplete_value","()",""],["autocomplete_value","TagSetAssociation","TagSetAssociation.html#method-i-autocomplete_value","()","<p>the value and score in autocomplete are the value/score of the child tag\n"],["backtrace_view","DevmodeController","DevmodeController.html#method-i-backtrace_view","()",""],["banned","Tag","Tag.html#method-i-banned","()",""],["banner_on","AdminSetting","AdminSetting.html#method-c-banner_on","()","<p>update admin banner setting for all users when banner notice is changed\n"],["base_nom_query","TagSetNominationsController","TagSetNominationsController.html#method-i-base_nom_query","(tag_type)",""],["basic_formatting","WorkSkin","WorkSkin.html#method-c-basic_formatting","()",""],["batch_kudo_notification","KudoMailer","KudoMailer.html#method-i-batch_kudo_notification","(user_id, user_kudos)","<p>send a batched-up notification  user_kudos is a hash of arrays converted to\nJSON string format\n<p>commentable_type … &mdash; "],["batch_load","OwnedTagSetsController","OwnedTagSetsController.html#method-i-batch_load","()",""],["batch_subscription_notification","UserMailer","UserMailer.html#method-i-batch_subscription_notification","(subscription_id, entries)","<p>Sends a batched subscription notification\n"],["before_destroy","ChallengeSignupObserver","ChallengeSignupObserver.html#method-i-before_destroy","(challenge_signup)","<p>Email a copy of the deleted signup to the user, to cover accidental\ndeletions or modly deletions\n"],["before_destroy","CollectionSweeper","CollectionSweeper.html#method-i-before_destroy","(record)",""],["before_destroy","PseudSweeper","PseudSweeper.html#method-i-before_destroy","(record)",""],["before_destroy","TagSweeper","TagSweeper.html#method-i-before_destroy","(tag)",""],["before_destroy","WorkObserver","WorkObserver.html#method-i-before_destroy","(work)","<p>Email a copy of the deleted work to all co-authors\n"],["before_update","CollectionObserver","CollectionObserver.html#method-i-before_update","(new_collection)",""],["before_update","CreationObserver","CreationObserver.html#method-i-before_update","(creation)","<p>Send notifications when a creation is posted from a draft state\n"],["before_update","PseudSweeper","PseudSweeper.html#method-i-before_update","(record)",""],["before_update","WorkObserver","WorkObserver.html#method-i-before_update","(work)","<p>TODO: Email a copy of the previous version of the work to all co-authors\n"],["blank?","Prompt","Prompt.html#method-i-blank-3F","()","<p>make sure we are not blank\n"],["block_import","ExternalAuthor","ExternalAuthor.html#method-i-block_import","()",""],["blurb_tag_block","TagsHelper","TagsHelper.html#method-i-blurb_tag_block","(item, tag_groups=nil)",""],["bookmark_form_path","BookmarksHelper","BookmarksHelper.html#method-i-bookmark_form_path","(bookmark, bookmarkable)",""],["bookmark_if_exists","BookmarksHelper","BookmarksHelper.html#method-i-bookmark_if_exists","(bookmarkable)","<p>if the current user has the current object bookmarked return the existing\nbookmark since the user may …\n"],["bookmark_link","BookmarksHelper","BookmarksHelper.html#method-i-bookmark_link","(bookmarkable, blurb=false)","<p>Link to bookmark\n"],["browse","UsersController","UsersController.html#method-i-browse","()",""],["build_from_taggings","FilterTagging","FilterTagging.html#method-c-build_from_taggings","()","<p>Build all filter taggings from current taggings data\n"],["build_nominations","TagSetNominationsController","TagSetNominationsController.html#method-i-build_nominations","()","<p>used in new/edit to build any nominations that don’t already exist before\nwe open the form\n"],["build_post_info","AbuseReportsController","AbuseReportsController.html#method-i-build_post_info","(report)",""],["build_post_info","FeedbacksController","FeedbacksController.html#method-i-build_post_info","(feedback)",""],["build_prompts","ChallengeSignupsController","ChallengeSignupsController.html#method-i-build_prompts","()",""],["by_name_without_articles","Tag","Tag.html#method-c-by_name_without_articles","(fieldname = \"name\")",""],["by_name_without_articles","TagSetAssociation","TagSetAssociation.html#method-c-by_name_without_articles","(fieldname = \"name\")","<p>sort by names stripping off the articles\n"],["byline","ApplicationHelper","ApplicationHelper.html#method-i-byline","(creation, options={})","<p>modified by Enigel Dec 13 08 to use pseud byline rather than just pseud\nname in order to disambiguate …\n"],["byline","ChallengeSignup","ChallengeSignup.html#method-i-byline","()",""],["byline","Pseud","Pseud.html#method-i-byline","()","<p>Produces a byline that indicates the user’s name if pseud is not unique\n"],["byline","Skin","Skin.html#method-i-byline","()",""],["byline_key","PotentialMatch","PotentialMatch.html#method-c-byline_key","(collection)",""],["cache!","Skin","Skin.html#method-i-cache-21","()","<p>create the minimal number of files we can, containing all the css for this\nentire skin\n"],["cache_expiration","AdminSetting","AdminSetting.html#method-c-cache_expiration","()",""],["cached","Skin","Skin.html#method-c-cached","()",""],["can_change_type?","Tag","Tag.html#method-i-can_change_type-3F","()","<p>only allow changing the tag type for unwrangled tags not used in any tag\nsets or on any works\n"],["can_delete?","ChallengeSignup","ChallengeSignup.html#method-i-can_delete-3F","(prompt)",""],["can_delete?","Prompt","Prompt.html#method-i-can_delete-3F","()",""],["can_nominate","TagSetNomination","TagSetNomination.html#method-i-can_nominate","()",""],["can_see_work","WorksHelper","WorksHelper.html#method-i-can_see_work","(work, user)",""],["can_wrangle?","TagsHelper","TagsHelper.html#method-i-can_wrangle-3F","()","<p>Should the current user be able to access tag wrangling pages?\n"],["cancel_comment","CommentsController","CommentsController.html#method-i-cancel_comment","()",""],["cancel_comment_button","CommentsHelper","CommentsHelper.html#method-i-cancel_comment_button","(comment, commentable)","<p>TO DO: create fallbacks to support non-JavaScript requests! return button\nto cancel adding a comment. …\n"],["cancel_comment_delete","CommentsController","CommentsController.html#method-i-cancel_comment_delete","()",""],["cancel_comment_edit","CommentsController","CommentsController.html#method-i-cancel_comment_edit","()",""],["cancel_comment_reply","CommentsController","CommentsController.html#method-i-cancel_comment_reply","()",""],["cancel_comment_reply_link","CommentsHelper","CommentsHelper.html#method-i-cancel_comment_reply_link","(comment)","<p>return link to cancel new reply to a comment\n"],["cancel_delete_comment_link","CommentsHelper","CommentsHelper.html#method-i-cancel_delete_comment_link","(comment)","<p>return link to cancel new reply to a comment\n"],["cancel_generate","PotentialMatchesController","PotentialMatchesController.html#method-i-cancel_generate","()",""],["cancel_generation","PotentialMatch","PotentialMatch.html#method-c-cancel_generation","(collection)",""],["cancel_posting_and_redirect","WorksController","WorksController.html#method-i-cancel_posting_and_redirect","()",""],["canceled?","PotentialMatch","PotentialMatch.html#method-c-canceled-3F","(collection)",""],["challenge?","Collection","Collection.html#method-i-challenge-3F","()",""],["challenge_assignment_byline","CollectionsHelper","CollectionsHelper.html#method-i-challenge_assignment_byline","(assignment)","<p>def collection_item_approval_radio_buttons(form, collection_item)\n\n<pre>fieldname = @user ? :user_approval_status ...</pre>\n"],["challenge_assignment_email","CollectionsHelper","CollectionsHelper.html#method-i-challenge_assignment_email","(assignment)",""],["challenge_assignment_ids","Work","Work.html#method-i-challenge_assignment_ids","()",""],["challenge_assignment_ids=","Work","Work.html#method-i-challenge_assignment_ids-3D","(ids)",""],["challenge_assignment_notification","UserMailer","UserMailer.html#method-i-challenge_assignment_notification","(collection_id, assigned_user_id, assignment_id)",""],["challenge_claim_ids","Work","Work.html#method-i-challenge_claim_ids","()",""],["challenge_class_name","CollectionsHelper","CollectionsHelper.html#method-i-challenge_class_name","(collection)",""],["challenge_participants","AutocompleteController","AutocompleteController.html#method-i-challenge_participants","()","<p>people signed up for a challenge\n"],["change_bookmarks_ownership","Pseud","Pseud.html#method-i-change_bookmarks_ownership","()",""],["change_challenge_participation","Pseud","Pseud.html#method-i-change_challenge_participation","()",""],["change_collections_membership","Pseud","Pseud.html#method-i-change_collections_membership","()",""],["change_email","UserMailer","UserMailer.html#method-i-change_email","(user_id, old_email, new_email)","<p>Confirms to a user that their email was changed\n"],["change_email","UsersController","UsersController.html#method-i-change_email","()",""],["change_gift_recipients","Pseud","Pseud.html#method-i-change_gift_recipients","()",""],["change_membership","Pseud","Pseud.html#method-i-change_membership","(collection, new_pseud)",""],["change_openid","UsersController","UsersController.html#method-i-change_openid","()",""],["change_ownership","Pseud","Pseud.html#method-i-change_ownership","(creation, pseud, options={})","<p>Change the ownership of a creation from one pseud to another Options:\nskip_series – if you begin by …\n"],["change_ownership","Work","Work.html#method-i-change_ownership","(old_user, new_user, new_pseud=nil)","<p>Transfer ownership of the work from one user to another\n"],["change_password","UsersController","UsersController.html#method-i-change_password","()",""],["change_tagname!","TagNomination","TagNomination.html#method-c-change_tagname-21","(owned_tag_set_to_change, old_tagname, new_tagname)","<p>If the mod is changing our name, change all other noms in this set as well\n"],["change_tagname?","TagNomination","TagNomination.html#method-i-change_tagname-3F","(new_tagname)","<p>Can we change the name to this new name?\n"],["change_username","UsersController","UsersController.html#method-i-change_username","()",""],["chapter_attributes=","Work","Work.html#method-i-chapter_attributes-3D","(attributes)","<p>Virtual attribute for first chapter\n"],["chapter_header","Chapter","Chapter.html#method-i-chapter_header","()",""],["chapter_name","Subscription","Subscription.html#method-i-chapter_name","(creation)",""],["chapter_title","Chapter","Chapter.html#method-i-chapter_title","()",""],["chapter_total_display","Work","Work.html#method-i-chapter_total_display","()","<p>1/1, 2/3, 5/?, etc.\n"],["chaptered?","Work","Work.html#method-i-chaptered-3F","()","<p>Returns true if a work has or will have more than one chapter\n"],["chapters_in_order","Work","Work.html#method-i-chapters_in_order","(include_content = true)",""],["character","AutocompleteController","AutocompleteController.html#method-i-character","()",""],["character_in_fandom","AutocompleteController","AutocompleteController.html#method-i-character_in_fandom","()",""],["character_string=","Tag","Tag.html#method-i-character_string-3D","(tag_string)",""],["character_tagnames","FandomNomination","FandomNomination.html#method-i-character_tagnames","()",""],["characters","Character","Character.html#method-i-characters","()",""],["characters","Freeform","Freeform.html#method-i-characters","()",""],["characters","Relationship","Relationship.html#method-i-characters","()",""],["check_account_creation_status","UsersController","UsersController.html#method-i-check_account_creation_status","()",""],["check_all_none","ApplicationHelper","ApplicationHelper.html#method-i-check_all_none","(all_text=\"All\", none_text=\"None\", name_filter=nil)",""],["check_assignments_not_sent","ChallengeAssignmentsController","ChallengeAssignmentsController.html#method-i-check_assignments_not_sent","()",""],["check_assignments_not_sent","PotentialMatchesController","PotentialMatchesController.html#method-i-check_assignments_not_sent","()",""],["check_assignments_sent","ChallengeAssignmentsController","ChallengeAssignmentsController.html#method-i-check_assignments_sent","()",""],["check_backdate_box","WorksHelper","WorksHelper.html#method-i-check_backdate_box","(work, chapter)","<p>Return true or false to determine whether the published at field should\nshow on the work form\n"],["check_canonical","Tag","Tag.html#method-i-check_canonical","()",""],["check_default_pseud","Pseud","Pseud.html#method-i-check_default_pseud","()",""],["check_editability","SkinsController","SkinsController.html#method-i-check_editability","()",""],["check_filter_counts","Work","Work.html#method-i-check_filter_counts","()","<p>Determine if filter counts need to be reset after the work is saved\n"],["check_filter_taggings","ExternalWork","ExternalWork.html#method-i-check_filter_taggings","()","<p>Add and remove filter taggings as tags are added and removed\n"],["check_for_file","DownloadsController","DownloadsController.html#method-i-check_for_file","(format)","<p>redirect and return inside this method would only exit\n<strong>this</strong> method, not the controller action it was …\n"],["check_for_invalid_chapters","Work","Work.html#method-i-check_for_invalid_chapters","()",""],["check_for_previous_import","StoryParser","StoryParser.html#method-i-check_for_previous_import","(location)",""],["check_for_spam","Comment","Comment.html#method-i-check_for_spam","()",""],["check_for_spam","Feedback","Feedback.html#method-i-check_for_spam","()",""],["check_for_spam?","Comment","Comment.html#method-i-check_for_spam-3F","()",""],["check_for_spam?","Feedback","Feedback.html#method-i-check_for_spam-3F","()",""],["check_gift_received","CollectionItem","CollectionItem.html#method-i-check_gift_received","(has_received)",""],["check_history_enabled","ReadingsController","ReadingsController.html#method-i-check_history_enabled","()","<p>checks if user has history enabled and redirects to preferences if not, so\nthey can potentially change …\n"],["check_media","Fandom","Fandom.html#method-i-check_media","(media)","<p>An association callback to add the default media if all others have been\nremoved\n"],["check_ownership","ApplicationController","ApplicationController.html#method-i-check_ownership","()","<p>Make sure a specific object belongs to the current user and that they have\npermission to view, edit or …\n"],["check_ownership_or_admin","ApplicationController","ApplicationController.html#method-i-check_ownership_or_admin","()",""],["check_parent_box","WorksHelper","WorksHelper.html#method-i-check_parent_box","(work)","<p>Determines whether or not to expand the related work association fields\nwhen the work form loads\n"],["check_permission","InvitationsController","InvitationsController.html#method-i-check_permission","()",""],["check_permission","LanguagesController","LanguagesController.html#method-i-check_permission","()",""],["check_permission","LocalesController","LocalesController.html#method-i-check_permission","()",""],["check_permission","TranslationNotesController","TranslationNotesController.html#method-i-check_permission","()",""],["check_permission","TranslationsController","TranslationsController.html#method-i-check_permission","()",""],["check_permission","TranslatorsController","TranslatorsController.html#method-i-check_permission","()",""],["check_permission_to_delete","CommentsController","CommentsController.html#method-i-check_permission_to_delete","()","<p>Must be able to delete other people’s comments on owned works, not just\nowned comments!\n"],["check_permission_to_edit","CommentsController","CommentsController.html#method-i-check_permission_to_edit","()","<p>Comments cannot be edited after they’ve been replied to\n"],["check_permission_to_wrangle","ApplicationController","ApplicationController.html#method-i-check_permission_to_wrangle","()","<p>Make sure user is allowed to access tag wrangling pages\n"],["check_queue","AdminSetting","AdminSetting.html#method-c-check_queue","()","<p>run once a day from cron\n"],["check_signup_closed","ChallengeAssignmentsController","ChallengeAssignmentsController.html#method-i-check_signup_closed","()",""],["check_signup_closed","PotentialMatchesController","PotentialMatchesController.html#method-i-check_signup_closed","()",""],["check_signup_open","ChallengeSignupsController","ChallengeSignupsController.html#method-i-check_signup_open","()",""],["check_signup_open","PromptsController","PromptsController.html#method-i-check_signup_open","()",""],["check_synonym","Tag","Tag.html#method-i-check_synonym","()",""],["check_tag_wrangler_access","CommentsController","CommentsController.html#method-i-check_tag_wrangler_access","()",""],["check_title","SkinsController","SkinsController.html#method-i-check_title","()",""],["check_type_changes","Tag","Tag.html#method-i-check_type_changes","()",""],["check_user_status","ApplicationController","ApplicationController.html#method-i-check_user_status","()","<p>Prevents banned and suspended users from adding/editing content\n"],["check_visibility","ApplicationController","ApplicationController.html#method-i-check_visibility","()","<p>Make sure the user is allowed to see a specific page includes a special\ncase for restricted works and …\n"],["check_visibility","ChallengeRequestsController","ChallengeRequestsController.html#method-i-check_visibility","()",""],["check_warning","WorksHelper","WorksHelper.html#method-i-check_warning","(work, warning)","<p>select the default warning if this is a new work\n"],["check_wrangling_status","Fandom","Fandom.html#method-i-check_wrangling_status","()",""],["checkbox_section","ApplicationHelper","ApplicationHelper.html#method-i-checkbox_section","(form, attribute, choices, options = {})","<p>FRONT END: is this and the toggle now formatted properly? (NB in the signup\nform this is currently displaying …\n"],["checkbox_section_css_class","ApplicationHelper","ApplicationHelper.html#method-i-checkbox_section_css_class","(size, concise=false)",""],["checkbox_section_toggle","ApplicationHelper","ApplicationHelper.html#method-i-checkbox_section_toggle","(checkboxes_id, checkboxes_size, options = {})","<p>toggle an checkboxes (scrollable checkboxes) section of a form to show all\nof the checkboxes\n"],["child_types","Character","Character.html#method-i-child_types","()",""],["child_types","Fandom","Fandom.html#method-i-child_types","()",""],["child_types","Freeform","Freeform.html#method-i-child_types","()",""],["child_types","Media","Media.html#method-i-child_types","()",""],["child_types","Relationship","Relationship.html#method-i-child_types","()",""],["child_types","Tag","Tag.html#method-i-child_types","()",""],["choice","WeightedRandom","WeightedRandom.html#method-i-choice","()",""],["claim","ExternalAuthorsController","ExternalAuthorsController.html#method-i-claim","()",""],["claim!","ExternalAuthor","ExternalAuthor.html#method-i-claim-21","(claiming_user)",""],["claim_by","Prompt","Prompt.html#method-i-claim_by","(user)",""],["claim_byline","ChallengeClaim","ChallengeClaim.html#method-i-claim_byline","()",""],["claim_notification","UserMailer","UserMailer.html#method-i-claim_notification","(external_author_id, claimed_work_ids)","<p>Notifies a writer that their imported works have been claimed\n"],["claim_title","ChallengeHelper","ChallengeHelper.html#method-i-claim_title","(claim)","<p>generate the display value for the claim\n"],["claimable?","Prompt","Prompt.html#method-i-claimable-3F","()","<p>currently only prompt meme prompts can be claimed, and by any number of\npeople\n"],["claimed","ExternalAuthor","ExternalAuthor.html#method-c-claimed","()",""],["claimed?","ExternalAuthor","ExternalAuthor.html#method-i-claimed-3F","()",""],["claimed?","ExternalCreatorship","ExternalCreatorship.html#method-i-claimed-3F","()",""],["claiming_pseud","ChallengeClaim","ChallengeClaim.html#method-i-claiming_pseud","()",""],["claiming_user","ChallengeClaim","ChallengeClaim.html#method-i-claiming_user","()",""],["classes_for_main","ApplicationHelper","ApplicationHelper.html#method-i-classes_for_main","()","<p>Generates class names for the main div in the application layout\n"],["clean_and_split_tags","StoryParser","StoryParser.html#method-i-clean_and_split_tags","(tags)","<p>convert space-separated tags to comma-separated\n"],["clean_and_validate_title","Work","Work.html#method-i-clean_and_validate_title","()",""],["clean_close_html_tags","StoryParser","StoryParser.html#method-i-clean_close_html_tags","(value)",""],["clean_css","Skin","Skin.html#method-i-clean_css","()",""],["clean_css","WorkSkin","WorkSkin.html#method-i-clean_css","()","<p>override parent’s clean_css to append a prefix\n"],["clean_media","Skin","Skin.html#method-i-clean_media","()",""],["clean_storytext","StoryParser","StoryParser.html#method-i-clean_storytext","(storytext)","<p>We clean the text as if it had been submitted as the content of a chapter\n"],["clean_tags","StoryParser","StoryParser.html#method-i-clean_tags","(tags)","<p>works conservatively – doesn’t split on spaces and truncates instead.\n"],["clean_up_challenge","Collection","Collection.html#method-i-clean_up_challenge","()",""],["clean_up_creatorships","Work","Work.html#method-i-clean_up_creatorships","()",""],["cleanup_outdated_associations","OwnedTagSet","OwnedTagSet.html#method-i-cleanup_outdated_associations","()",""],["cleanup_url","ExternalWork","ExternalWork.html#method-i-cleanup_url","()",""],["cleanup_url","Prompt","Prompt.html#method-i-cleanup_url","()",""],["clear","ReadingsController","ReadingsController.html#method-i-clear","()",""],["clear!","ChallengeAssignment","ChallengeAssignment.html#method-c-clear-21","(collection)","<p>clear out all previous assignments. note: this does NOT invoke callbacks\nbecause ChallengeAssignments …\n"],["clear!","PotentialMatch","PotentialMatch.html#method-c-clear-21","(collection)",""],["clear_assignment","ChallengeAssignment","ChallengeAssignment.html#method-i-clear_assignment","()",""],["clear_assignments_and_claims","ChallengeSignup","ChallengeSignup.html#method-i-clear_assignments_and_claims","()",""],["clear_cache!","Skin","Skin.html#method-i-clear_cache-21","()",""],["clear_claims","Prompt","Prompt.html#method-i-clear_claims","()",""],["clear_flash_cookie","ApplicationController","ApplicationController.html#method-i-clear_flash_cookie","()",""],["clear_icon","Collection","Collection.html#method-i-clear_icon","()",""],["clear_icon","Pseud","Pseud.html#method-i-clear_icon","()",""],["clear_nominations!","OwnedTagSet","OwnedTagSet.html#method-i-clear_nominations-21","()",""],["clear_queue","RedisMailQueue","RedisMailQueue.html#method-c-clear_queue","(notification_type)",""],["closed?","Collection","Collection.html#method-i-closed-3F","()",""],["coauthor_notification","UserMailer","UserMailer.html#method-i-coauthor_notification","(user_id, creation_id, creation_class_name)","<p>Sends email when a user is added as a co-author\n"],["coauthored_works","User","User.html#method-i-coauthored_works","()","<p>Returns array of the user’s co-authored works\n"],["coauthors","User","User.html#method-i-coauthors","()","<p>Returns an array (of pseuds) of this user’s co-authors\n"],["collect_update_multiple_results","TagSetNominationsController","TagSetNominationsController.html#method-i-collect_update_multiple_results","()","<p>gathers up the data for all the tag types\n"],["collection_depth","Collection","Collection.html#method-i-collection_depth","()",""],["collection_fullname","AutocompleteController","AutocompleteController.html#method-i-collection_fullname","()","<p>look up collections ranked by number of items they contain\n"],["collection_is_open","CollectionItem","CollectionItem.html#method-i-collection_is_open","()",""],["collection_link","CollectionsHelper","CollectionsHelper.html#method-i-collection_link","(item)","<p>Generates a draggable, pop-up div which contains the add-to-collection form\n"],["collection_maintainers_only","ApplicationController","ApplicationController.html#method-i-collection_maintainers_only","()",""],["collection_notification","UserMailer","UserMailer.html#method-i-collection_notification","(collection_id, subject, message)",""],["collection_owners_only","ApplicationController","ApplicationController.html#method-i-collection_owners_only","()",""],["collection_parent_name","AutocompleteController","AutocompleteController.html#method-i-collection_parent_name","()","<p>For creating collections, autocomplete the name of a parent collection\nowned by the user only\n"],["comment_notification","AdminMailer","AdminMailer.html#method-i-comment_notification","(comment_id)","<p>Sends email to an admin when a new comment is created on an admin post\n"],["comment_notification","CommentMailer","CommentMailer.html#method-i-comment_notification","(user_id, comment_id)","<p>Sends email to an owner of the top-level commentable when a new comment is\ncreated\n"],["comment_owner","Comment","Comment.html#method-i-comment_owner","()",""],["comment_owner_email","Comment","Comment.html#method-i-comment_owner_email","()",""],["comment_owner_name","Comment","Comment.html#method-i-comment_owner_name","()",""],["comment_reply_notification","CommentMailer","CommentMailer.html#method-i-comment_reply_notification","(your_comment_id, comment_id)","<p>Sends email to commenter when a reply is posted to their comment This may\nbe a non-user of the archive …\n"],["comment_sent_notification","CommentMailer","CommentMailer.html#method-i-comment_sent_notification","(comment_id)","<p>Sends email to the poster of a comment\n"],["comment_work","DevmodeController","DevmodeController.html#method-i-comment_work","(work, comments, subcomment_chance, comment_length)","<p>Assists seedworks\n"],["comment_works","DevmodeController","DevmodeController.html#method-i-comment_works","()",""],["commentable_description_link","InboxHelper","InboxHelper.html#method-i-commentable_description_link","(comment)","<p>Describes commentable - used on inbox show page\n"],["commentable_name","AdminPost","AdminPost.html#method-i-commentable_name","()","<p>Return the name to link comments to for this object\n"],["commentable_name","Chapter","Chapter.html#method-i-commentable_name","()","<p>Return the name to link comments to for this object\n"],["commentable_name","Comment","Comment.html#method-i-commentable_name","()","<p>override this method from commentable_entity.rb to return the name of the\nultimate parent this is on …\n"],["commentable_name","Tag","Tag.html#method-i-commentable_name","()",""],["commentable_object","Comment","Comment.html#method-c-commentable_object","(commentable)",""],["commentable_owners","AdminPost","AdminPost.html#method-i-commentable_owners","()",""],["commentable_owners","Tag","Tag.html#method-i-commentable_owners","()",""],["comments","Work","Work.html#method-i-comments","()","<p>returns the top-level comments for all chapters in the work\n"],["compare","ExternalWorksController","ExternalWorksController.html#method-i-compare","()",""],["compare_all","PotentialMatch","PotentialMatch.html#method-i-compare_all","(self_value, other_value)",""],["compare_all","PotentialPromptMatch","PotentialPromptMatch.html#method-i-compare_all","(self_value, other_value)",""],["compare_with_users","InviteRequest","InviteRequest.html#method-i-compare_with_users","()","<p>Ensure that invite request is for a new user\n"],["complete_claim","ExternalAuthorsController","ExternalAuthorsController.html#method-i-complete_claim","()",""],["completeness","Locale","Locale.html#method-i-completeness","()","<p>Returns a floating point number between 0.0 and 1.0, reflecting the\nfraction of the translations that …\n"],["confirm_delete","WorksController","WorksController.html#method-i-confirm_delete","()",""],["confirm_delete_multiple","WorksController","WorksController.html#method-i-confirm_delete_multiple","()",""],["conflict","ErrorsController","ErrorsController.html#method-i-conflict","()",""],["convert_rating","StoryParser","StoryParser.html#method-i-convert_rating","(rating)","<p>Convert the common ratings into whatever ratings we’re using on this\narchive.\n"],["convert_rating_string","StoryParser","StoryParser.html#method-i-convert_rating_string","(rating)",""],["convert_revised_at","StoryParser","StoryParser.html#method-i-convert_revised_at","(date_string)",""],["copy_tag_set_from_offer_to_request","GiftExchange","GiftExchange.html#method-i-copy_tag_set_from_offer_to_request","()",""],["correct_number_of_tags","Prompt","Prompt.html#method-i-correct_number_of_tags","()",""],["count_all_comments","Comment","Comment.html#method-i-count_all_comments","()",""],["count_all_comments","Work","Work.html#method-i-count_all_comments","()","<p>Returns number of comments Hidden and deleted comments are referenced in\nthe view because of  the threading …\n"],["count_by_fandom?","TagSetNomination","TagSetNomination.html#method-i-count_by_fandom-3F","(tag_type)",""],["count_unread","InboxComment","InboxComment.html#method-c-count_unread","()","<p>Gets the number of unread comments\n"],["count_visible_bookmarks","Bookmark","Bookmark.html#method-c-count_visible_bookmarks","(bookmarkable, current_user=:false)","<p>Returns the number of bookmarks on an item visible to the current user\n"],["count_visible_comments","Comment","Comment.html#method-i-count_visible_comments","()",""],["cover","ChallengeAssignment","ChallengeAssignment.html#method-i-cover","(pseud)",""],["cover_default","ChallengeAssignmentsController","ChallengeAssignmentsController.html#method-i-cover_default","()",""],["create","AbuseReportsController","AbuseReportsController.html#method-i-create","()","<p>POST /abuse_reports POST /abuse_reports.xml\n"],["create","Admin::AdminInvitationsController","Admin/AdminInvitationsController.html#method-i-create","()",""],["create","AdminPostsController","AdminPostsController.html#method-i-create","()","<p>POST /admin_posts POST /admin_posts.xml\n"],["create","AdminSessionsController","AdminSessionsController.html#method-i-create","()",""],["create","ArchiveFaqsController","ArchiveFaqsController.html#method-i-create","()","<p>POST /archive_faqs POST /archive_faqs.xml\n"],["create","BookmarksController","BookmarksController.html#method-i-create","()","<p>POST /bookmarks POST /bookmarks.xml\n"],["create","Challenge::GiftExchangeController","Challenge/GiftExchangeController.html#method-i-create","()",""],["create","Challenge::PromptMemeController","Challenge/PromptMemeController.html#method-i-create","()",""],["create","ChallengeClaimsController","ChallengeClaimsController.html#method-i-create","()",""],["create","ChallengeSignupsController","ChallengeSignupsController.html#method-i-create","()",""],["create","ChaptersController","ChaptersController.html#method-i-create","()","<p>POST /work/:work_id/chapters POST /work/:work_id/chapters.xml\n"],["create","CollectionItemsController","CollectionItemsController.html#method-i-create","()",""],["create","CollectionsController","CollectionsController.html#method-i-create","()",""],["create","CommentsController","CommentsController.html#method-i-create","()","<p>POST /comments POST /comments.xml\n"],["create","ExternalAuthorsController","ExternalAuthorsController.html#method-i-create","()",""],["create","FeedbacksController","FeedbacksController.html#method-i-create","()",""],["create","InvitationsController","InvitationsController.html#method-i-create","()",""],["create","InviteRequestsController","InviteRequestsController.html#method-i-create","()","<p>POST /invite_requests POST /invite_requests.xml\n"],["create","KnownIssuesController","KnownIssuesController.html#method-i-create","()","<p>POST /known_issues POST /known_issues.xml\n"],["create","KudosController","KudosController.html#method-i-create","()",""],["create","LanguagesController","LanguagesController.html#method-i-create","()",""],["create","LocalesController","LocalesController.html#method-i-create","()",""],["create","Opendoors::ExternalAuthorsController","Opendoors/ExternalAuthorsController.html#method-i-create","()","<p>create an external author identity (and pre-emptively block it)\n"],["create","OrphansController","OrphansController.html#method-i-create","()",""],["create","OwnedTagSetsController","OwnedTagSetsController.html#method-i-create","()",""],["create","PasswordsController","PasswordsController.html#method-i-create","()",""],["create","PromptsController","PromptsController.html#method-i-create","()",""],["create","PseudsController","PseudsController.html#method-i-create","()","<p>POST /pseuds POST /pseuds.xml\n"],["create","SeriesController","SeriesController.html#method-i-create","()","<p>POST /series POST /series.xml\n"],["create","SkinsController","SkinsController.html#method-i-create","()",""],["create","SubscriptionsController","SubscriptionsController.html#method-i-create","()","<p>POST /subscriptions POST /subscriptions.xml\n"],["create","TagSetNominationsController","TagSetNominationsController.html#method-i-create","()",""],["create","TagWranglersController","TagWranglersController.html#method-i-create","()",""],["create","TagsController","TagsController.html#method-i-create","()","<p>POST /tags POST /tags.xml\n"],["create","TranslationNotesController","TranslationNotesController.html#method-i-create","()","<p>POST /translation_notes POST /translation_notes.xml\n"],["create","TranslationsController","TranslationsController.html#method-i-create","()",""],["create","TranslatorsController","TranslatorsController.html#method-i-create","()",""],["create","UserInviteRequestsController","UserInviteRequestsController.html#method-i-create","()","<p>POST /user_invite_requests POST /user_invite_requests.xml\n"],["create","UserSessionsController","UserSessionsController.html#method-i-create","()",""],["create","UsersController","UsersController.html#method-i-create","()","<p>POST /users POST /users.xml\n"],["create","WorksController","WorksController.html#method-i-create","()","<p>POST /works\n"],["create_canonical","Tag","Tag.html#method-c-create_canonical","(name, adult=false)",""],["create_default","Skin","Skin.html#method-c-create_default","()",""],["create_default_associateds","User","User.html#method-i-create_default_associateds","()",""],["create_default_name","ExternalAuthor","ExternalAuthor.html#method-i-create_default_name","()",""],["create_epub_files","DownloadsController","DownloadsController.html#method-i-create_epub_files","()",""],["create_log_item","User","User.html#method-i-create_log_item","(options = {})","<p>Creates log item tracking changes to user\n"],["create_mobi_html","DownloadsController","DownloadsController.html#method-i-create_mobi_html","()",""],["create_or_increment","WorkLink","WorkLink.html#method-c-create_or_increment","(work_id, full_url, count_to_add=1)",""],["create_stat_counter","Work","Work.html#method-i-create_stat_counter","()",""],["create_work","DevmodeController","DevmodeController.html#method-i-create_work","(name, authors, ratings, warnings, characters, relationships, fandoms, chapter_count, chapter_char_count)","<p>Assists seedworks\n"],["create_work_html","DownloadsController","DownloadsController.html#method-i-create_work_html","()",""],["creation_name","Subscription","Subscription.html#method-i-creation_name","(creation)",""],["creations","Pseud","Pseud.html#method-i-creations","()","<p>END AUTOCOMPLETE\n"],["creator_link","InvitationsHelper","InvitationsHelper.html#method-i-creator_link","(invitation)",""],["current_admin","ApplicationController","ApplicationController.html#method-i-current_admin","()",""],["current_admin_session","ApplicationController","ApplicationController.html#method-i-current_admin_session","()",""],["current_user","ApplicationController","ApplicationController.html#method-i-current_user","()",""],["current_user_owns?","ApplicationController","ApplicationController.html#method-i-current_user_owns-3F","(item)","<p>Does the current user own a specific object?\n"],["current_user_session","ApplicationController","ApplicationController.html#method-i-current_user_session","()",""],["date_in_user_time_zone","DateHelper","DateHelper.html#method-i-date_in_user_time_zone","(datetime)",""],["days_to_purge_unactivated","AdminSetting","AdminSetting.html#method-c-days_to_purge_unactivated","()",""],["default","ChallengeAssignment","ChallengeAssignment.html#method-i-default","()",""],["default","ChallengeAssignmentsController","ChallengeAssignmentsController.html#method-i-default","()",""],["default","Language","Language.html#method-c-default","()",""],["default","Locale","Locale.html#method-c-default","()",""],["default","Skin","Skin.html#method-c-default","()",""],["default_all","ChallengeAssignmentsController","ChallengeAssignmentsController.html#method-i-default_all","()",""],["default_date","Work","Work.html#method-i-default_date","()",""],["default_name","ExternalAuthor","ExternalAuthor.html#method-i-default_name","()",""],["default_pseud","User","User.html#method-i-default_pseud","()","<p>Retrieve the current default pseud\n"],["default_skin","AdminSetting","AdminSetting.html#method-c-default_skin","()",""],["defaulted","ChallengeAssignment","ChallengeAssignment.html#method-i-defaulted","()",""],["defaulted=","ChallengeAssignment","ChallengeAssignment.html#method-i-defaulted-3D","(value)",""],["delayed_generate","ChallengeAssignment","ChallengeAssignment.html#method-c-delayed_generate","(collection_id)",""],["delayed_send_out","ChallengeAssignment","ChallengeAssignment.html#method-c-delayed_send_out","(collection_id)",""],["delete_comment","CommentsController","CommentsController.html#method-i-delete_comment","()",""],["delete_comment_link","CommentsHelper","CommentsHelper.html#method-i-delete_comment_link","(comment)","<p>return html link to delete comments\n"],["delete_confirmation","UsersController","UsersController.html#method-i-delete_confirmation","()",""],["delete_empty_series","SerialWork","SerialWork.html#method-i-delete_empty_series","()","<p>If you delete a work from a series and it was the last one, delete the\nseries too\n"],["delete_icon","Collection","Collection.html#method-i-delete_icon","()",""],["delete_icon","Pseud","Pseud.html#method-i-delete_icon","()",""],["delete_icon=","Collection","Collection.html#method-i-delete_icon-3D","(value)","<p>Delete current icon (thus reverting to archive default icon)\n"],["delete_icon=","Pseud","Pseud.html#method-i-delete_icon-3D","(value)","<p>Delete current icon (thus reverting to archive default icon)\n"],["delete_icon?","Collection","Collection.html#method-i-delete_icon-3F","()",""],["delete_icon?","Pseud","Pseud.html#method-i-delete_icon-3F","()",""],["delete_multiple","WorksController","WorksController.html#method-i-delete_multiple","()",""],["delete_signup_notification","UserMailer","UserMailer.html#method-i-delete_signup_notification","(user, challenge_signup)",""],["delete_unused_tags","Tagging","Tagging.html#method-i-delete_unused_tags","()","<p>Gets rid of unwrangled tags that aren’t tagging anything else and which\naren’t already deleted\n"],["delete_work_notification","UserMailer","UserMailer.html#method-i-delete_work_notification","(user, work)","<p>Sends email to authors when a creation is deleted NOTE: this must be sent\nsynchronously! otherwise the …\n"],["delete_works","ExternalAuthor","ExternalAuthor.html#method-i-delete_works","()",""],["deliver_kudos","RedisMailQueue","RedisMailQueue.html#method-c-deliver_kudos","()","<p>batch and deliver all the outstanding kudo notifications this should be\ncalled from schedule.rb at some …\n"],["deliver_subscriptions","RedisMailQueue","RedisMailQueue.html#method-c-deliver_subscriptions","()","<p>batch and deliver all the outstanding subscription notifications this\nshould be called from schedule.rb …\n"],["description","TagsHelper","TagsHelper.html#method-i-description","(tag)",""],["description_required?","Prompt","Prompt.html#method-i-description_required-3F","()",""],["destroy","Admin::AdminUsersController","Admin/AdminUsersController.html#method-i-destroy","()","<p>DELETE admin/users/1 DELETE admin/users/1.xml\n"],["destroy","Admin::UserCreationsController","Admin/UserCreationsController.html#method-i-destroy","()",""],["destroy","AdminPostsController","AdminPostsController.html#method-i-destroy","()","<p>DELETE /admin_posts/1 DELETE /admin_posts/1.xml\n"],["destroy","AdminSessionsController","AdminSessionsController.html#method-i-destroy","()",""],["destroy","AdminsController","AdminsController.html#method-i-destroy","()","<p>DELETE /admins/1 DELETE /admins/1.xml\n"],["destroy","ArchiveFaqsController","ArchiveFaqsController.html#method-i-destroy","()","<p>DELETE /archive_faqs/1 DELETE /archive_faqs/1.xml\n"],["destroy","BookmarksController","BookmarksController.html#method-i-destroy","()","<p>DELETE /bookmarks/1 DELETE /bookmarks/1.xml\n"],["destroy","Challenge::GiftExchangeController","Challenge/GiftExchangeController.html#method-i-destroy","()",""],["destroy","Challenge::PromptMemeController","Challenge/PromptMemeController.html#method-i-destroy","()",""],["destroy","ChallengeClaimsController","ChallengeClaimsController.html#method-i-destroy","()",""],["destroy","ChallengeSignupsController","ChallengeSignupsController.html#method-i-destroy","()",""],["destroy","ChaptersController","ChaptersController.html#method-i-destroy","()","<p>DELETE /work/:work_id/chapters/1 DELETE /work/:work_id/chapters/1.xml\n"],["destroy","CollectionItemsController","CollectionItemsController.html#method-i-destroy","()",""],["destroy","CollectionParticipantsController","CollectionParticipantsController.html#method-i-destroy","()",""],["destroy","CollectionsController","CollectionsController.html#method-i-destroy","()",""],["destroy","CommentsController","CommentsController.html#method-i-destroy","()","<p>DELETE /comments/1 DELETE /comments/1.xml\n"],["destroy","ExternalAuthorsController","ExternalAuthorsController.html#method-i-destroy","()",""],["destroy","InvitationsController","InvitationsController.html#method-i-destroy","()",""],["destroy","InviteRequestsController","InviteRequestsController.html#method-i-destroy","()",""],["destroy","KnownIssuesController","KnownIssuesController.html#method-i-destroy","()","<p>DELETE /known_issues/1 DELETE /known_issues/1.xml\n"],["destroy","OwnedTagSetsController","OwnedTagSetsController.html#method-i-destroy","()",""],["destroy","PromptsController","PromptsController.html#method-i-destroy","()",""],["destroy","PseudsController","PseudsController.html#method-i-destroy","()","<p>DELETE /pseuds/1 DELETE /pseuds/1.xml\n"],["destroy","ReadingsController","ReadingsController.html#method-i-destroy","()",""],["destroy","RelatedWorksController","RelatedWorksController.html#method-i-destroy","()",""],["destroy","SerialWorksController","SerialWorksController.html#method-i-destroy","()","<p>DELETE /related_works/1 DELETE /related_works/1.xml\n"],["destroy","SeriesController","SeriesController.html#method-i-destroy","()","<p>DELETE /series/1 DELETE /series/1.xml\n"],["destroy","SkinsController","SkinsController.html#method-i-destroy","()",""],["destroy","SubscriptionsController","SubscriptionsController.html#method-i-destroy","()","<p>DELETE /subscriptions/1 DELETE /subscriptions/1.xml\n"],["destroy","TagSetNominationsController","TagSetNominationsController.html#method-i-destroy","()",""],["destroy","TagWranglersController","TagWranglersController.html#method-i-destroy","()",""],["destroy","TranslationNotesController","TranslationNotesController.html#method-i-destroy","()","<p>DELETE /translation_notes/1 DELETE /translation_notes/1.xml\n"],["destroy","TranslationsController","TranslationsController.html#method-i-destroy","()",""],["destroy","TranslatorsController","TranslatorsController.html#method-i-destroy","()",""],["destroy","UserSessionsController","UserSessionsController.html#method-i-destroy","()",""],["destroy","UsersController","UsersController.html#method-i-destroy","()","<p>DELETE /users/1 DELETE /users/1.xml\n"],["destroy","WorksController","WorksController.html#method-i-destroy","()","<p>DELETE /works/1\n"],["destroy_chapters_in_reverse","Work","Work.html#method-i-destroy_chapters_in_reverse","()",""],["destroy_if_blank","TagNomination","TagNomination.html#method-i-destroy_if_blank","()",""],["destroy_multiple","TagSetNominationsController","TagSetNominationsController.html#method-i-destroy_multiple","()",""],["development_only","DevmodeController","DevmodeController.html#method-i-development_only","()",""],["disable_work_skin?","Preference","Preference.html#method-c-disable_work_skin-3F","(param)",""],["discuss","TagWranglingsController","TagWranglingsController.html#method-i-discuss","()",""],["display_authors","Work","Work.html#method-i-display_authors","()",""],["display_title","Chapter","Chapter.html#method-i-display_title","()",""],["distance_of_time_in_words","TranslationHelper","TranslationHelper.html#method-i-distance_of_time_in_words","(from_time, to_time = 0, include_seconds = false)","<p>Enigel Nov. 15 08\n"],["distance_of_time_in_words_to_now","TranslationHelper","TranslationHelper.html#method-i-distance_of_time_in_words_to_now","(from_time, include_seconds = false)",""],["do_assign_offer!","ChallengeAssignment","ChallengeAssignment.html#method-c-do_assign_offer-21","(assignment, potential_match)",""],["do_assign_request!","ChallengeAssignment","ChallengeAssignment.html#method-c-do_assign_request-21","(assignment, potential_match)",""],["do_batch_load","OwnedTagSetsController","OwnedTagSetsController.html#method-i-do_batch_load","()",""],["do_cancel_delete_comment_link","CommentsHelper","CommentsHelper.html#method-i-do_cancel_delete_comment_link","(comment)",""],["do_notify","CreationObserver","CreationObserver.html#method-i-do_notify","(creation)","<p>send the appropriate notifications\n"],["do_redirect","RedirectController","RedirectController.html#method-i-do_redirect","()",""],["do_search","PeopleController","PeopleController.html#method-i-do_search","()",""],["donate","HomeController","HomeController.html#method-i-donate","()","<p>donate\n"],["download_and_parse_chapter_of_work","StoryParser","StoryParser.html#method-i-download_and_parse_chapter_of_work","(work, location, options = {})","<p>download and add a new chapter to the end of a work\n"],["download_and_parse_chaptered_story","StoryParser","StoryParser.html#method-i-download_and_parse_chaptered_story","(source, location, options = {})","<p>download an entire story from an archive type where we know how to parse\nmulti-chaptered works this should …\n"],["download_and_parse_chapters_into_story","StoryParser","StoryParser.html#method-i-download_and_parse_chapters_into_story","(locations, options = {})","<p>Given an array of urls for chapters of a single story, download them all\nand combine into a single work …\n"],["download_and_parse_story","StoryParser","StoryParser.html#method-i-download_and_parse_story","(location, options = {})","<p>Downloads a story and passes it on to the parser. If the URL of the story\nis from a site for which we …\n"],["download_authors","Work","Work.html#method-i-download_authors","()","<p>need the next two to be filesystem safe and not overly long\n"],["download_basename","Work","Work.html#method-i-download_basename","()",""],["download_chaptered_from_efiction","StoryParser","StoryParser.html#method-i-download_chaptered_from_efiction","(location)","<p>grab all the chapters of a story from an efiction-based site\n"],["download_chaptered_from_ffnet","StoryParser","StoryParser.html#method-i-download_chaptered_from_ffnet","(location)","<p>grab all the chapters of the story from ff.net\n"],["download_dir","Work","Work.html#method-i-download_dir","()","<p>spread downloads out by first two letters of authorname\n"],["download_epub","DownloadsController","DownloadsController.html#method-i-download_epub","()",""],["download_fandoms","Work","Work.html#method-i-download_fandoms","()",""],["download_folder","Work","Work.html#method-i-download_folder","()","<p>split out so we can use this in works_helper\n"],["download_from_lj","StoryParser","StoryParser.html#method-i-download_from_lj","(location)","<p>canonicalize the url for downloading from lj or clones\n"],["download_html","DownloadsController","DownloadsController.html#method-i-download_html","()",""],["download_mobi","DownloadsController","DownloadsController.html#method-i-download_mobi","()",""],["download_pdf","DownloadsController","DownloadsController.html#method-i-download_pdf","()",""],["download_text","StoryParser","StoryParser.html#method-i-download_text","(location)",""],["download_title","Work","Work.html#method-i-download_title","()",""],["download_url_for_work","WorksHelper","WorksHelper.html#method-i-download_url_for_work","(work, format)",""],["download_with_timeout","StoryParser","StoryParser.html#method-i-download_with_timeout","(location, limit = 10)",""],["drafts","WorksController","WorksController.html#method-i-drafts","()",""],["edit","Admin::AdminUsersController","Admin/AdminUsersController.html#method-i-edit","()","<p>GET admin/users/1/edit\n"],["edit","AdminPostsController","AdminPostsController.html#method-i-edit","()","<p>GET /admin_posts/1/edit\n"],["edit","ArchiveFaqsController","ArchiveFaqsController.html#method-i-edit","()","<p>GET /archive_faqs/1/edit\n"],["edit","BookmarksController","BookmarksController.html#method-i-edit","()","<p>GET /bookmarks/1/edit\n"],["edit","Challenge::GiftExchangeController","Challenge/GiftExchangeController.html#method-i-edit","()",""],["edit","Challenge::PromptMemeController","Challenge/PromptMemeController.html#method-i-edit","()",""],["edit","ChallengeSignupsController","ChallengeSignupsController.html#method-i-edit","()",""],["edit","ChaptersController","ChaptersController.html#method-i-edit","()","<p>GET /work/:work_id/chapters/1/edit\n"],["edit","CollectionsController","CollectionsController.html#method-i-edit","()",""],["edit","CommentsController","CommentsController.html#method-i-edit","()","<p>GET /comments/1/edit\n"],["edit","ExternalAuthorsController","ExternalAuthorsController.html#method-i-edit","()",""],["edit","ExternalWorksController","ExternalWorksController.html#method-i-edit","()",""],["edit","KnownIssuesController","KnownIssuesController.html#method-i-edit","()","<p>GET /known_issues/1/edit\n"],["edit","OwnedTagSetsController","OwnedTagSetsController.html#method-i-edit","()",""],["edit","PromptsController","PromptsController.html#method-i-edit","()",""],["edit","PseudsController","PseudsController.html#method-i-edit","()","<p>GET /pseuds/1/edit\n"],["edit","SeriesController","SeriesController.html#method-i-edit","()","<p>GET /series/1/edit\n"],["edit","SkinsController","SkinsController.html#method-i-edit","()",""],["edit","TagSetNominationsController","TagSetNominationsController.html#method-i-edit","()",""],["edit","TagsController","TagsController.html#method-i-edit","()",""],["edit","TranslationNotesController","TranslationNotesController.html#method-i-edit","()","<p>GET /translation_notes/1/edit\n"],["edit","TranslationsController","TranslationsController.html#method-i-edit","()",""],["edit","UsersController","UsersController.html#method-i-edit","()","<p>GET /users/1/edit\n"],["edit","WorksController","WorksController.html#method-i-edit","()","<p>GET /works/1/edit\n"],["edit_comment_link","CommentsHelper","CommentsHelper.html#method-i-edit_comment_link","(comment)","<p>return html link to edit comment\n"],["edit_multiple","WorksController","WorksController.html#method-i-edit_multiple","()",""],["edit_tags","WorksController","WorksController.html#method-i-edit_tags","()","<p>GET /works/1/edit_tags\n"],["edit_work_notification","UserMailer","UserMailer.html#method-i-edit_work_notification","(user, work)","<p>Sends email to coauthors when a work is edited NOTE: this must be sent\nsynchronously! otherwise the new …\n"],["editable?","Skin","Skin.html#method-i-editable-3F","()",""],["edited_comment_notification","AdminMailer","AdminMailer.html#method-i-edited_comment_notification","(comment_id)","<p>Sends email to an admin when a comment on an admin post is edited\n"],["edited_comment_notification","CommentMailer","CommentMailer.html#method-i-edited_comment_notification","(user_id, comment_id)","<p>Sends email to an owner of the top-level commentable when a comment is\nedited\n"],["edited_comment_reply_notification","CommentMailer","CommentMailer.html#method-i-edited_comment_reply_notification","(your_comment_id, edited_comment_id)","<p>Sends email to commenter when a reply to their comment is edited This may\nbe a non-user of the archive …\n"],["empty?","TagSet","TagSet.html#method-i-empty-3F","()",""],["enable_test_caching?","AdminSetting","AdminSetting.html#method-c-enable_test_caching-3F","()",""],["encoding","AutocompleteController","AutocompleteController.html#method-i-encoding","()","<p>encodings for importing\n"],["end_banner","UsersController","UsersController.html#method-i-end_banner","()",""],["end_first_login","UsersController","UsersController.html#method-i-end_first_login","()",""],["ensure_associated","Collection","Collection.html#method-i-ensure_associated","()",""],["ensure_revised_at","Work","Work.html#method-i-ensure_revised_at","()","<p>Just to catch any cases that haven’t gone through set_revised_at\n"],["error_messages_for","ValidationHelper","ValidationHelper.html#method-i-error_messages_for","(object)","<p>much simplified and html-safed version of error_messages_for error messages\ncontaining a “^” …\n"],["error_messages_formatted","ValidationHelper","ValidationHelper.html#method-i-error_messages_formatted","(errors, intro = \"\")",""],["escaped","People","People.html#method-i-escaped","()",""],["exact_match?","TagSet","TagSet.html#method-i-exact_match-3F","(another, type=nil)",""],["expand_contract_all","ApplicationHelper","ApplicationHelper.html#method-i-expand_contract_all","(target=\"index\")","<p>expand/contracts all expand/contract targets inside its nearest parent with\nthe target class (usually …\n"],["expand_contract_shuffle","ApplicationHelper","ApplicationHelper.html#method-i-expand_contract_shuffle","(list_id, shuffle=true)","<p>Sets up expand/contract/shuffle buttons for any list whose id is passed in\nSee the jquery code in application.js …\n"],["expire_cache","CommentSweeper","CommentSweeper.html#method-i-expire_cache","(comment)",""],["export_csv","ChallengeSignupsController","ChallengeSignupsController.html#method-i-export_csv","()","<p>Tab-separated CSV with utf-16le encoding (unicode) and byte order mark.\nThis seems to be the only variant …\n"],["external=","Bookmark","Bookmark.html#method-i-external-3D","(attributes)","<p>Virtual attribute for external works\n"],["external_author","ExternalCreatorship","ExternalCreatorship.html#method-i-external_author","()",""],["external_author=","ExternalCreatorship","ExternalCreatorship.html#method-i-external_author-3D","(external_author)",""],["external_work","AutocompleteController","AutocompleteController.html#method-i-external_work","()","<p>for looking up existing urls for external works to avoid duplication\n"],["external_work_creatorships","ExternalAuthor","ExternalAuthor.html#method-i-external_work_creatorships","()",""],["external_work_creatorships","ExternalAuthorName","ExternalAuthorName.html#method-i-external_work_creatorships","()",""],["fallback_url_for_comment","CommentsHelper","CommentsHelper.html#method-i-fallback_url_for_comment","(comment, options = {})",""],["fallback_url_for_top_level","CommentsHelper","CommentsHelper.html#method-i-fallback_url_for_top_level","(commentable, options = {})","<p>non-JavaScript fallbacks for great justice!\n"],["fandom","AutocompleteController","AutocompleteController.html#method-i-fandom","()",""],["fandom_count","Language","Language.html#method-i-fandom_count","()",""],["fandom_string=","Tag","Tag.html#method-i-fandom_string-3D","(tag_string)",""],["fandoms","Character","Character.html#method-i-fandoms","()",""],["fandoms","Freeform","Freeform.html#method-i-fandoms","()",""],["fandoms","Relationship","Relationship.html#method-i-fandoms","()",""],["featured","Skin","Skin.html#method-c-featured","()",""],["feed","TagsController","TagsController.html#method-i-feed","()",""],["feed_summary","WorksHelper","WorksHelper.html#method-i-feed_summary","(work)","<p>Generates a list of a work’s tags and details for use in feeds\n"],["feedback","AdminMailer","AdminMailer.html#method-i-feedback","(feedback_id)",""],["feedback","UserMailer","UserMailer.html#method-i-feedback","(feedback_id)","<p>archive feedback\n"],["fetch","AdminPostTag","AdminPostTag.html#method-c-fetch","(options)","<p>Find or create by name, and set the language if it’s a new record\n"],["fetch","ExternalWorksController","ExternalWorksController.html#method-i-fetch","()","<p>Used with bookmark form to get an existing external work and return it via\najax\n"],["fetch_admin_settings","ApplicationController","ApplicationController.html#method-i-fetch_admin_settings","()",""],["fetch_recent","BookmarksController","BookmarksController.html#method-i-fetch_recent","()","<p>Used on index page to show 4 most recent bookmarks (after bookmark being\ncurrently viewed) via RJS Only …\n"],["field_attribute","ApplicationHelper","ApplicationHelper.html#method-i-field_attribute","(attribute)","<p>these two handy methods will take a form object (eg from form_for) and an\nattribute (eg :title or ‘_destroy’) …\n"],["field_id","ApplicationHelper","ApplicationHelper.html#method-i-field_id","(form, attribute)",""],["field_name","ApplicationHelper","ApplicationHelper.html#method-i-field_name","(form, attribute)",""],["field_with_unique_id","ApplicationHelper","ApplicationHelper.html#method-i-field_with_unique_id","( form, field_type, object, field_name )","<p>This helper needs to be used in forms that may appear multiple times in the\nsame page (eg the comment …\n"],["filter","Tag","Tag.html#method-i-filter","()","<p>The version of the tag that should be used for filtering, if any\n"],["find","Admin::AdminInvitationsController","Admin/AdminInvitationsController.html#method-i-find","()",""],["find","FilterTagging","FilterTagging.html#method-c-find","(*args)",""],["find","People","People.html#method-c-find","(param)",""],["find_all_comments","Comment","Comment.html#method-i-find_all_comments","()",""],["find_all_comments","Work","Work.html#method-i-find_all_comments","()","<p>Gets all comments for all chapters in the work\n"],["find_by_id","FilterTagging","FilterTagging.html#method-c-find_by_id","(id)",""],["find_by_name","Tag","Tag.html#method-c-find_by_name","(string)","<p>Substitute characters that are particularly prone to cause trouble in urls\n"],["find_by_tag","Tagging","Tagging.html#method-c-find_by_tag","(taggable, tag)",""],["find_locale","TranslationNotesController","TranslationNotesController.html#method-i-find_locale","()",""],["find_locale","TranslationsController","TranslationsController.html#method-i-find_locale","()",""],["find_main_cached","Locale","Locale.html#method-c-find_main_cached","()",""],["find_main_translations","Locale","Locale.html#method-c-find_main_translations","()","<p>Sets up a hash with keys like “app.pages.membership/n_months_free” and\nvalues being translation …\n"],["find_or_create_by_name","Tag","Tag.html#method-c-find_or_create_by_name","(new_name)","<p>If a tag by this name exists in another class, add a suffix to disambiguate\nthem\n"],["find_or_invite","ExternalAuthor","ExternalAuthor.html#method-i-find_or_invite","(archivist = nil)",""],["find_with_options","Work","Work.html#method-c-find_with_options","(options = {})","<p>Used for non-search work filtering\n"],["finish_generation","PotentialMatch","PotentialMatch.html#method-c-finish_generation","(collection)",""],["first_chapter","Work","Work.html#method-i-first_chapter","()","<p>Gets the current first chapter\n"],["first_login_help","HomeController","HomeController.html#method-i-first_login_help","()",""],["first_save?","User","User.html#method-i-first_save-3F","()",""],["fix_positions","Chapter","Chapter.html#method-i-fix_positions","()",""],["fix_positions_after_destroy","Chapter","Chapter.html#method-i-fix_positions_after_destroy","()",""],["fix_time_zone","Preference","Preference.html#method-i-fix_time_zone","()",""],["flash_div","ApplicationHelper","ApplicationHelper.html#method-i-flash_div","(*keys)","<p>Inserts the flash alert messages for flash wherever\n\n<pre>&lt;%= flash_div :key %&gt;</pre>\n<p>is placed in the views. That …\n"],["for_claims","User","User.html#method-c-for_claims","(claims_ids)",""],["for_tag_set","TagNomination","TagNomination.html#method-c-for_tag_set","(tag_set)",""],["for_tag_set","TagSetAssociation","TagSetAssociation.html#method-c-for_tag_set","(tagset)",""],["for_tag_set","TagSetNomination","TagSetNomination.html#method-c-for_tag_set","(tag_set)",""],["for_user","CollectionItem","CollectionItem.html#method-c-for_user","(user=User.current_user)",""],["forbidden","ErrorsController","ErrorsController.html#method-i-forbidden","()",""],["forward","Opendoors::ExternalAuthorsController","Opendoors/ExternalAuthorsController.html#method-i-forward","()",""],["freeform","AutocompleteController","AutocompleteController.html#method-i-freeform","()",""],["freeform_string=","Tag","Tag.html#method-i-freeform_string-3D","(tag_string)",""],["freeforms","Character","Character.html#method-i-freeforms","()",""],["freeforms","Freeform","Freeform.html#method-i-freeforms","()",""],["freeforms","Relationship","Relationship.html#method-i-freeforms","()",""],["from_params","WeightedRandom","WeightedRandom.html#method-c-from_params","(params, name, types)",""],["fulfilled?","ChallengeAssignment","ChallengeAssignment.html#method-i-fulfilled-3F","()",""],["fulfilled?","ChallengeClaim","ChallengeClaim.html#method-i-fulfilled-3F","()",""],["fulfilled_claims","Prompt","Prompt.html#method-i-fulfilled_claims","()",""],["generate","ChallengeAssignment","ChallengeAssignment.html#method-c-generate","(collection)","<p>generate automatic match for a collection this requires potential matches\nto already be generated\n"],["generate","ChallengeAssignmentsController","ChallengeAssignmentsController.html#method-i-generate","()",""],["generate","PotentialMatch","PotentialMatch.html#method-c-generate","(collection)",""],["generate","PotentialMatchesController","PotentialMatchesController.html#method-i-generate","()","<p>Generate potential matches\n"],["generate_attachment_content_from_signup","UserMailer","UserMailer.html#method-i-generate_attachment_content_from_signup","(signup)",""],["generate_attachment_content_from_work","UserMailer","UserMailer.html#method-i-generate_attachment_content_from_work","(work)",""],["generate_countdown_html","ApplicationHelper","ApplicationHelper.html#method-i-generate_countdown_html","(field_id, max)","<p>see: www.w3.org/TR/wai-aria/states_and_properties#aria-valuenow\n"],["generate_for_signup","PotentialMatch","PotentialMatch.html#method-c-generate_for_signup","(collection, request_signup, settings)",""],["generate_in_background","PotentialMatch","PotentialMatch.html#method-c-generate_in_background","(collection)",""],["generate_password","User","User.html#method-i-generate_password","(length=8)",""],["generate_progress","PotentialMatchesController","PotentialMatchesController.html#method-i-generate_progress","()",""],["generate_summary","ChallengeSignup","ChallengeSignup.html#method-c-generate_summary","(collection)","<p>Write the summary to a file that will then be displayed takes about 12\nminutes for yuletide2010 on beta, …\n"],["generate_summary_in_background","ChallengeSignup","ChallengeSignup.html#method-c-generate_summary_in_background","(collection)",""],["generate_summary_tags","ChallengeSignup","ChallengeSignup.html#method-c-generate_summary_tags","(collection)","<p>Code for generating signup summaries\n"],["get_all_child_ids","SkinParent","SkinParent.html#method-c-get_all_child_ids","(skin_id)",""],["get_all_parent_ids","SkinParent","SkinParent.html#method-c-get_all_parent_ids","(skin_id)",""],["get_all_parents","Skin","Skin.html#method-i-get_all_parents","()",""],["get_bookmark_embed_link","WorksHelper","WorksHelper.html#method-i-get_bookmark_embed_link","(bookmark)","<p>convert a bookmark into a nicely formatted chunk of text\n"],["get_bookmark_link_text","BookmarksHelper","BookmarksHelper.html#method-i-get_bookmark_link_text","(bookmarkable, blurb=false)",""],["get_cached_style","Skin","Skin.html#method-i-get_cached_style","(roles_to_include)",""],["get_category_class","TagsHelper","TagsHelper.html#method-i-get_category_class","(category_tags)",""],["get_chapter_from_work_params","StoryParser","StoryParser.html#method-i-get_chapter_from_work_params","(work_params)",""],["get_collection_item","ChallengeAssignment","ChallengeAssignment.html#method-i-get_collection_item","()",""],["get_collection_item","ChallengeClaim","ChallengeClaim.html#method-i-get_collection_item","()",""],["get_collection_names","StoryParser","StoryParser.html#method-i-get_collection_names","(collection_string)","<p>tries to find appropriate existing collections and converts them to\ncomma-separated collection names …\n"],["get_commenter_pseud_or_name","CommentsHelper","CommentsHelper.html#method-i-get_commenter_pseud_or_name","(comment)","<p>return pseudname or name for comment\n"],["get_controller_dir","DevmodeController","DevmodeController.html#method-i-get_controller_dir","()",""],["get_css","Skin","Skin.html#method-i-get_css","()",""],["get_current_site_skin","Skin","Skin.html#method-c-get_current_site_skin","()",""],["get_current_version","Skin","Skin.html#method-c-get_current_version","()","<p>Get the most recent version and find the topmost skin\n"],["get_embed_link","WorksHelper","WorksHelper.html#method-i-get_embed_link","(work)","<p>get a nicely formatted bit of text for pasting into other services title (#\nwords) by authors Chapters: …\n"],["get_endnotes_link","WorksHelper","WorksHelper.html#method-i-get_endnotes_link","()",""],["get_external_author_from_invitation","ExternalAuthorsController","ExternalAuthorsController.html#method-i-get_external_author_from_invitation","()",""],["get_id","HomeController","HomeController.html#method-i-get_id","(path, user, classname)","<p>We try and get ids to use in paths here with a bit of custom guesswork The\nfallback is just using the …\n"],["get_ie_comment","Skin","Skin.html#method-i-get_ie_comment","(style, ie_condition = self.ie_condition)",""],["get_last_modified","StoryParser","StoryParser.html#method-i-get_last_modified","(location)",""],["get_links_to","DevmodeController","DevmodeController.html#method-i-get_links_to","(view)",""],["get_maintainers_email","Collection","Collection.html#method-i-get_maintainers_email","()",""],["get_media","Skin","Skin.html#method-i-get_media","(separator=\", \")",""],["get_media_for_filename","Skin","Skin.html#method-i-get_media_for_filename","()","<p>have to handle any media types that aren’t a single alphanumeric word here\n"],["get_new_bookmark_path","BookmarksHelper","BookmarksHelper.html#method-i-get_new_bookmark_path","(bookmarkable)","<p>returns just a url to the new bookmark form\n"],["get_owned_tag_set","CastNomination","CastNomination.html#method-i-get_owned_tag_set","()",""],["get_owned_tag_set","TagNomination","TagNomination.html#method-i-get_owned_tag_set","()",""],["get_page_title","ApplicationController","ApplicationController.html#method-i-get_page_title","(fandom, author, title, options = {})",""],["get_parent_child_tags","OwnedTagSetsController","OwnedTagSetsController.html#method-i-get_parent_child_tags","()","<p>for manual associations\n"],["get_parent_tagname","CastNomination","CastNomination.html#method-i-get_parent_tagname","()",""],["get_parent_tagname","TagNomination","TagNomination.html#method-i-get_parent_tagname","()","<p>here so we can override it in char/relationship noms\n"],["get_participants_for_user","Collection","Collection.html#method-i-get_participants_for_user","(user)",""],["get_participating_pseuds_for_user","Collection","Collection.html#method-i-get_participating_pseuds_for_user","(user)",""],["get_prompt_restriction","Offer","Offer.html#method-i-get_prompt_restriction","()",""],["get_prompt_restriction","Prompt","Prompt.html#method-i-get_prompt_restriction","()",""],["get_prompt_restriction","PromptRestrictionsHelper","PromptRestrictionsHelper.html#method-i-get_prompt_restriction","(for_offer=false)",""],["get_prompt_restriction","Request","Request.html#method-i-get_prompt_restriction","()",""],["get_ratings_class","TagsHelper","TagsHelper.html#method-i-get_ratings_class","(rating_tags = [])",""],["get_role","Skin","Skin.html#method-i-get_role","()",""],["get_sheet_role","Skin","Skin.html#method-i-get_sheet_role","()",""],["get_skin_cache","SkinsHelper","SkinsHelper.html#method-i-get_skin_cache","(skin)",""],["get_source_if_known","StoryParser","StoryParser.html#method-i-get_source_if_known","(known_sources, location)",""],["get_style","Skin","Skin.html#method-i-get_style","(roles_to_include = DEFAULT_ROLES_TO_INCLUDE)","<p>This is the main function that actually returns code to be embedded in a\npage\n"],["get_style_block","Skin","Skin.html#method-i-get_style_block","(roles_to_include)",""],["get_symbol_for_bookmark","BookmarksHelper","BookmarksHelper.html#method-i-get_symbol_for_bookmark","(bookmark)","<p>returns the appropriate small single icon for a bookmark – not hardcoded,\nthese are in css so they are …\n"],["get_symbol_link","TagsHelper","TagsHelper.html#method-i-get_symbol_link","(css_class, title_string)",""],["get_symbols_for","TagsHelper","TagsHelper.html#method-i-get_symbols_for","(item, tag_groups=nil, symbols_only = false)","<p>produce our spiffy pretty block of tag symbols\n"],["get_tags_to_associate","TagSetAssociationsController","TagSetAssociationsController.html#method-i-get_tags_to_associate","()",""],["get_title_string","TagsHelper","TagsHelper.html#method-i-get_title_string","(tags, category_name = \"\")",""],["get_url_to_look_for","RedirectController","RedirectController.html#method-i-get_url_to_look_for","()",""],["get_view_dir","DevmodeController","DevmodeController.html#method-i-get_view_dir","()",""],["get_view_paths","DevmodeController","DevmodeController.html#method-i-get_view_paths","(controller, view)",""],["get_warnings_class","TagsHelper","TagsHelper.html#method-i-get_warnings_class","(warning_tags = [])","<p>return the right warnings class\n"],["get_wizard_settings","Skin","Skin.html#method-i-get_wizard_settings","()",""],["gift_exchange?","Collection","Collection.html#method-i-gift_exchange-3F","()",""],["gift_exchange_to_csv","ChallengeSignupsController","ChallengeSignupsController.html#method-i-gift_exchange_to_csv","()",""],["gift_notification","Collection","Collection.html#method-i-gift_notification","()",""],["grant_all","Invitation","Invitation.html#method-c-grant_all","(total)","<p>Create a certain number of invitations for all valid users\n"],["grant_empty","Invitation","Invitation.html#method-c-grant_empty","(total)","<p>Create a certain number of invitations for all users who are out of them\n"],["grant_invites_to_users","Admin::AdminInvitationsController","Admin/AdminInvitationsController.html#method-i-grant_invites_to_users","()",""],["guest?","ApplicationController","ApplicationController.html#method-i-guest-3F","()",""],["guest_downloading_off","DownloadsController","DownloadsController.html#method-i-guest_downloading_off","()",""],["guest_downloading_off?","AdminSetting","AdminSetting.html#method-c-guest_downloading_off-3F","()",""],["guest_kudos_count","Work","Work.html#method-i-guest_kudos_count","()",""],["has_child?","Tag","Tag.html#method-i-has_child-3F","(tag)",""],["has_name_or_pseud","Gift","Gift.html#method-i-has_name_or_pseud","()",""],["has_no_credentials?","User","User.html#method-i-has_no_credentials-3F","()",""],["has_other_owners","CollectionParticipantsController","CollectionParticipantsController.html#method-i-has_other_owners","()",""],["has_parent?","Tag","Tag.html#method-i-has_parent-3F","(tag)",""],["has_required_tags?","Work","Work.html#method-i-has_required_tags-3F","()","<p>Check to see that a work is tagged appropriately\n"],["has_tags?","PromptRestriction","PromptRestriction.html#method-i-has_tags-3F","(type=\"tag\")",""],["has_type?","TagSet","TagSet.html#method-i-has_type-3F","(type)",""],["hide","Admin::UserCreationsController","Admin/UserCreationsController.html#method-i-hide","()","<p>Removes an object from public view\n"],["hide_banner","ApplicationController","ApplicationController.html#method-i-hide_banner","()",""],["hide_comments","CommentsController","CommentsController.html#method-i-hide_comments","()",""],["hide_comments_link","CommentsHelper","CommentsHelper.html#method-i-hide_comments_link","(commentable)",""],["hide_freeform?","TagsHelper","TagsHelper.html#method-i-hide_freeform-3F","(creation)","<p>Determines whether or not to display freeform tags for a creation\n"],["hide_hit_counts","Preference","Preference.html#method-i-hide_hit_counts","()",""],["hide_recent","BookmarksController","BookmarksController.html#method-i-hide_recent","()",""],["hide_warnings?","TagsHelper","TagsHelper.html#method-i-hide_warnings-3F","(creation)","<p>Determines whether or not to display warnings for a creation\n"],["hits_to_database","HitCounter","HitCounter.html#method-c-hits_to_database","()","<p>Persist the hit counts to database\n"],["hits_to_database","StatCounter","StatCounter.html#method-c-hits_to_database","()","<p>Persist the hit counts to database\n"],["html_to_text","HomeHelper","HomeHelper.html#method-i-html_to_text","(string)",""],["human","WorkSkin","WorkSkin.html#method-i-human","()",""],["i18n_key","WorkSkin","WorkSkin.html#method-i-i18n_key","()",""],["icon_display","UsersHelper","UsersHelper.html#method-i-icon_display","(user=nil, pseud=nil)","<p>no alt text if there isn’t specific alt text\n"],["import","WorksController","WorksController.html#method-i-import","()","<p>POST /works/import\n"],["import_basic_formatting","WorkSkin","WorkSkin.html#method-c-import_basic_formatting","()",""],["import_from_urls","StoryParser","StoryParser.html#method-i-import_from_urls","(urls, options = {})","<p>Import many stories\n"],["import_multiple","WorksController","WorksController.html#method-i-import_multiple","(urls, options)","<p>import multiple works\n"],["import_single","WorksController","WorksController.html#method-i-import_single","(urls, options)","<p>import a single work (possibly with multiple chapters)\n"],["in_chooser","Skin","Skin.html#method-c-in_chooser","()",""],["in_progress?","PotentialMatch","PotentialMatch.html#method-c-in_progress-3F","(collection)",""],["in_prompt_restriction","OwnedTagSet","OwnedTagSet.html#method-c-in_prompt_restriction","(restriction)",""],["in_prompt_restriction","Tag","Tag.html#method-c-in_prompt_restriction","(restriction)",""],["in_series","Work","Work.html#method-c-in_series","(series)",""],["in_tag_set","Tag","Tag.html#method-c-in_tag_set","(tag_set)",""],["inbox_reply_link","InboxHelper","InboxHelper.html#method-i-inbox_reply_link","(comment)","<p>get_commenter_pseud_or_name can be found in comments_helper\n"],["index","AbuseReportsController","AbuseReportsController.html#method-i-index","()",""],["index","Admin::AdminInvitationsController","Admin/AdminInvitationsController.html#method-i-index","()",""],["index","Admin::AdminUsersController","Admin/AdminUsersController.html#method-i-index","()",""],["index","Admin::SettingsController","Admin/SettingsController.html#method-i-index","()",""],["index","Admin::SkinsController","Admin/SkinsController.html#method-i-index","()",""],["index","Admin::StatsController","Admin/StatsController.html#method-i-index","()",""],["index","AdminPostsController","AdminPostsController.html#method-i-index","()","<p>GET /admin_posts GET /admin_posts.xml\n"],["index","AdminsController","AdminsController.html#method-i-index","()","<p>GET /admins GET /admins.xml\n"],["index","ArchiveFaqsController","ArchiveFaqsController.html#method-i-index","()","<p>GET /archive_faqs GET /archive_faqs.xml\n"],["index","BookmarksController","BookmarksController.html#method-i-index","()","<p>aggregates bookmarks for the same bookmarkable note, these do not show\nprivate bookmarks GET    /bookmarks …\n"],["index","ChallengeAssignmentsController","ChallengeAssignmentsController.html#method-i-index","()","<p>ACTIONS\n"],["index","ChallengeClaimsController","ChallengeClaimsController.html#method-i-index","()","<p>ACTIONS\n"],["index","ChallengeRequestsController","ChallengeRequestsController.html#method-i-index","()",""],["index","ChallengeSignupsController","ChallengeSignupsController.html#method-i-index","()","<p>ACTIONS\n"],["index","ChaptersController","ChaptersController.html#method-i-index","()","<p>GET /work/:work_id/chapters GET /work/:work_id/chapters.xml\n"],["index","CollectionItemsController","CollectionItemsController.html#method-i-index","()",""],["index","CollectionParticipantsController","CollectionParticipantsController.html#method-i-index","()",""],["index","CollectionsController","CollectionsController.html#method-i-index","()",""],["index","CommentsController","CommentsController.html#method-i-index","()",""],["index","DevmodeController","DevmodeController.html#method-i-index","()",""],["index","ExternalAuthorsController","ExternalAuthorsController.html#method-i-index","()",""],["index","ExternalWorksController","ExternalWorksController.html#method-i-index","()",""],["index","FandomsController","FandomsController.html#method-i-index","()",""],["index","GiftsController","GiftsController.html#method-i-index","()",""],["index","HomeController","HomeController.html#method-i-index","()","<p>home page itself\n"],["index","InvitationsController","InvitationsController.html#method-i-index","()",""],["index","InviteRequestsController","InviteRequestsController.html#method-i-index","()","<p>GET /invite_requests GET /invite_requests.xml\n"],["index","KnownIssuesController","KnownIssuesController.html#method-i-index","()","<p>GET /known_issues GET /known_issues.xml\n"],["index","LanguagesController","LanguagesController.html#method-i-index","()",""],["index","LocalesController","LocalesController.html#method-i-index","()",""],["index","MediaController","MediaController.html#method-i-index","()",""],["index","Opendoors::ExternalAuthorsController","Opendoors/ExternalAuthorsController.html#method-i-index","()",""],["index","Opendoors::ToolsController","Opendoors/ToolsController.html#method-i-index","()",""],["index","OrphansController","OrphansController.html#method-i-index","()",""],["index","OwnedTagSetsController","OwnedTagSetsController.html#method-i-index","()","<p>ACTIONS\n"],["index","PeopleController","PeopleController.html#method-i-index","()",""],["index","PotentialMatchesController","PotentialMatchesController.html#method-i-index","()",""],["index","PreferencesController","PreferencesController.html#method-i-index","()",""],["index","PromptsController","PromptsController.html#method-i-index","()","<p>ACTIONS\n"],["index","PseudsController","PseudsController.html#method-i-index","()","<p>GET /pseuds GET /pseuds.xml\n"],["index","ReadingsController","ReadingsController.html#method-i-index","()",""],["index","RelatedWorksController","RelatedWorksController.html#method-i-index","()",""],["index","SearchController","SearchController.html#method-i-index","()",""],["index","SeriesController","SeriesController.html#method-i-index","()","<p>GET /series GET /series.xml\n"],["index","SkinsController","SkinsController.html#method-i-index","()","<p>ACTIONS\n"],["index","Static::FandomsController","Static/FandomsController.html#method-i-index","()",""],["index","Static::RestrictedWorksController","Static/RestrictedWorksController.html#method-i-index","()","<p>caches_action :index, :show\n"],["index","StatsController","StatsController.html#method-i-index","()","<p>gather statistics for the user on all their works\n"],["index","SubscriptionsController","SubscriptionsController.html#method-i-index","()","<p>GET /subscriptions GET /subscriptions.xml\n"],["index","TagSetAssociationsController","TagSetAssociationsController.html#method-i-index","()",""],["index","TagSetNominationsController","TagSetNominationsController.html#method-i-index","()",""],["index","TagWranglersController","TagWranglersController.html#method-i-index","()",""],["index","TagWranglingsController","TagWranglingsController.html#method-i-index","()",""],["index","TagsController","TagsController.html#method-i-index","()","<p>GET /tags GET /tags.xml\n"],["index","TranslationNotesController","TranslationNotesController.html#method-i-index","()","<p>GET /translation_notes GET /translation_notes.xml\n"],["index","TranslationsController","TranslationsController.html#method-i-index","()",""],["index","TranslatorsController","TranslatorsController.html#method-i-index","()",""],["index","UnsortedTagsController","UnsortedTagsController.html#method-i-index","()",""],["index","UserInviteRequestsController","UserInviteRequestsController.html#method-i-index","()","<p>GET /user_invite_requests GET /user_invite_requests.xml\n"],["index","UsersController","UsersController.html#method-i-index","()",""],["index","WorkLinksController","WorkLinksController.html#method-i-index","()",""],["index","WorksController","WorksController.html#method-i-index","()","<p>GET /works\n"],["index_approved","Admin::SkinsController","Admin/SkinsController.html#method-i-index_approved","()",""],["index_rejected","Admin::SkinsController","Admin/SkinsController.html#method-i-index_rejected","()",""],["indirect_bookmarks","Tag","Tag.html#method-i-indirect_bookmarks","(rec=false)",""],["inherit_meta_tags","MetaTagging","MetaTagging.html#method-i-inherit_meta_tags","()","<p>The meta tag of my meta tag is my meta tag\n"],["inherit_parents","CommonTagging","CommonTagging.html#method-i-inherit_parents","()","<p>A relationship should inherit its characters’ fandoms\n"],["init_redis","HitCounter","HitCounter.html#method-i-init_redis","()",""],["init_redis","StatCounter","StatCounter.html#method-i-init_redis","()",""],["inspect_view","DevmodeController","DevmodeController.html#method-i-inspect_view","()","<p>GET inspect_view\n"],["internal_server_error","ErrorsController","ErrorsController.html#method-i-internal_server_error","()",""],["interrupt_key","PotentialMatch","PotentialMatch.html#method-c-interrupt_key","(collection)",""],["invitation","UserMailer","UserMailer.html#method-i-invitation","(invitation_id)","<p>Sends an invitation to join the archive Must be sent synchronously as it is\nrescued TODO refactor to …\n"],["invitation_to_claim","UserMailer","UserMailer.html#method-i-invitation_to_claim","(invitation_id, archivist_login)","<p>Sends an invitation to join the archive and claim stories that have been\nimported as part of a bulk import …\n"],["invite","InviteRequest","InviteRequest.html#method-c-invite","()","<p>Invite a specified number of users\n"],["invite_and_remove","InviteRequest","InviteRequest.html#method-i-invite_and_remove","(creator=nil)","<p>Turn a request into an invite and then remove it from the queue\n"],["invite_friend","InvitationsController","InvitationsController.html#method-i-invite_friend","()",""],["invite_from_queue","Admin::AdminInvitationsController","Admin/AdminInvitationsController.html#method-i-invite_from_queue","()",""],["invite_from_queue_at","AdminSetting","AdminSetting.html#method-c-invite_from_queue_at","()",""],["invite_from_queue_enabled?","AdminSetting","AdminSetting.html#method-c-invite_from_queue_enabled-3F","()",""],["invite_from_queue_frequency","AdminSetting","AdminSetting.html#method-c-invite_from_queue_frequency","()",""],["invite_from_queue_number","AdminSetting","AdminSetting.html#method-c-invite_from_queue_number","()",""],["invite_increase_notification","UserMailer","UserMailer.html#method-i-invite_increase_notification","(user_id, total)","<p>Emails a user to say they have been given more invitations for their\nfriends\n"],["invitee_link","InvitationsHelper","InvitationsHelper.html#method-i-invitee_link","(invitation)",""],["is_admin?","ApplicationController","ApplicationController.html#method-i-is_admin-3F","()",""],["is_archivist?","User","User.html#method-i-is_archivist-3F","()",""],["is_author_of?","User","User.html#method-i-is_author_of-3F","(item)","<p>Checks authorship of any sort of object\n"],["is_author_of?","UsersHelper","UsersHelper.html#method-i-is_author_of-3F","(item)","<p>Can be used to check ownership of items\n"],["is_complete","Work","Work.html#method-i-is_complete","()","<p>Returns true if a work is complete\n"],["is_invited?","CollectionParticipant","CollectionParticipant.html#method-i-is_invited-3F","()",""],["is_maintainer?","CollectionParticipant","CollectionParticipant.html#method-i-is_maintainer-3F","()",""],["is_member?","CollectionParticipant","CollectionParticipant.html#method-i-is_member-3F","()",""],["is_moderator?","CollectionParticipant","CollectionParticipant.html#method-i-is_moderator-3F","()",""],["is_none?","CollectionParticipant","CollectionParticipant.html#method-i-is_none-3F","()",""],["is_only_chapter?","Chapter","Chapter.html#method-i-is_only_chapter-3F","()","<p>make em-dashes into html code\n\n<pre class=\"ruby\"><span class=\"ruby-keyword\">def</span> <span class=\"ruby-identifier\">clean_emdashes</span>\n  <span class=\"ruby-keyword\">self</span>.<span class=\"ruby-identifier\">content</span>.<span class=\"ruby-identifier\">gsub!</span>(<span class=\"ruby-regexp\">%r\\xE2\\x80\\&quot;/</span>, <span class=\"ruby-string\">'&amp;#8212;'</span>)\n<span class=\"ruby-keyword\">end</span>\n</pre>\n<p>check …\n"],["is_owner?","CollectionParticipant","CollectionParticipant.html#method-i-is_owner-3F","()",""],["is_registered_user?","ApplicationController","ApplicationController.html#method-i-is_registered_user-3F","()",""],["is_sole_author_of?","User","User.html#method-i-is_sole_author_of-3F","(item)","<p>Returns true if user is the sole author of a work Should also be true if\nthe user has used more than …\n"],["is_subset_of?","TagSet","TagSet.html#method-i-is_subset_of-3F","(another, type=nil)","<p>checks to see if this is a subset of another tagset note: we have to cast\nwith_type to an array because …\n"],["is_superset_of?","TagSet","TagSet.html#method-i-is_superset_of-3F","(another, type=nil)","<p>checks to see if this is a superset of another tagset note: we have to cast\nwith_type to an array because …\n"],["is_tag_wrangler?","User","User.html#method-i-is_tag_wrangler-3F","()",""],["is_translation_admin?","User","User.html#method-i-is_translation_admin-3F","()",""],["is_wip","Work","Work.html#method-i-is_wip","()","<p>Returns true if a work is not yet complete\n"],["item_creator_names","CollectionItem","CollectionItem.html#method-i-item_creator_names","()",""],["item_creator_pseuds","CollectionItem","CollectionItem.html#method-i-item_creator_pseuds","()",""],["item_date","CollectionItem","CollectionItem.html#method-i-item_date","()",""],["join","CollectionParticipantsController","CollectionParticipantsController.html#method-i-join","()","<p>ACTIONS\n"],["join_fandom_nomination","TagNomination","TagNomination.html#method-c-join_fandom_nomination","()","<p>We need this manual join in order to do a query over multiple types of tags\n(ie, via TagNomination.where …\n"],["known_fandom","CastNomination","CastNomination.html#method-i-known_fandom","()",""],["kudo_notification","KudoMailer","KudoMailer.html#method-i-kudo_notification","(user_id, kudo_id)",""],["label_for_filter","TagsHelper","TagsHelper.html#method-i-label_for_filter","(type, tag_info)","<p>Makes filters show warnings display name\n"],["language_link","WorksHelper","WorksHelper.html#method-i-language_link","(work)",""],["last_chapter","Work","Work.html#method-i-last_chapter","()","<p>Gets the current last chapter\n"],["last_posted_chapter","Work","Work.html#method-i-last_posted_chapter","()","<p>Gets the current last posted chapter\n"],["last_reply_by","CommentsHelper","CommentsHelper.html#method-i-last_reply_by","(comment)",""],["link_to_add_section","ApplicationHelper","ApplicationHelper.html#method-i-link_to_add_section","(linktext, form, nested_model_name, partial_to_render, locals = {})","<p>see asciicasts.com/episodes/197-nested-model-form-part-2\n"],["link_to_bookmarkable_bookmarks","BookmarksHelper","BookmarksHelper.html#method-i-link_to_bookmarkable_bookmarks","(bookmarkable, link_text='')",""],["link_to_comment_ultimate_parent","CommentsHelper","CommentsHelper.html#method-i-link_to_comment_ultimate_parent","(comment)",""],["link_to_edit_tag","TagsHelper","TagsHelper.html#method-i-link_to_edit_tag","(tag, options = {})",""],["link_to_help","ApplicationHelper","ApplicationHelper.html#method-i-link_to_help","(help_entry, link = '<span class=\"symbol question\"><span>?</span></span>'.html_safe)","<p>Currently, help files are static. We may eventually want to make these\ndynamic?\n"],["link_to_letter","AlphabetHelper","AlphabetHelper.html#method-i-link_to_letter","(letter, text = \"\")",""],["link_to_previous_invite_requests","UserInviteRequestsHelper","UserInviteRequestsHelper.html#method-i-link_to_previous_invite_requests","(request)","<p>given a request for invite codes: generates a link displaying the number of\ninvite codes previously issued …\n"],["link_to_remote","ApplicationHelper","ApplicationHelper.html#method-i-link_to_remote","(name, options = {}, html_options = {})","<p>A more gracefully degrading link_to_remote.\n"],["link_to_remove_section","ApplicationHelper","ApplicationHelper.html#method-i-link_to_remove_section","(linktext, form, class_of_section_to_remove=\"removeme\")","<p>see above\n"],["link_to_rss","ApplicationHelper","ApplicationHelper.html#method-i-link_to_rss","(link_to_feed)",""],["link_to_tag","TagsHelper","TagsHelper.html#method-i-link_to_tag","(tag, options = {})",""],["link_to_tag_bookmarks","BookmarksHelper","BookmarksHelper.html#method-i-link_to_tag_bookmarks","(tag)","<p>tag_bookmarks_path was behaving badly for tags with slashes\n"],["link_to_tag_with_count","PseudsHelper","PseudsHelper.html#method-i-link_to_tag_with_count","(pseud, tag_w_count)","<p>For tag list on /people page\n"],["link_to_tag_with_text","TagsHelper","TagsHelper.html#method-i-link_to_tag_with_text","(tag, link_text, options = {})",""],["link_to_tag_works","TagsHelper","TagsHelper.html#method-i-link_to_tag_works","(tag, options = {})",""],["link_to_tag_works_with_text","TagsHelper","TagsHelper.html#method-i-link_to_tag_works_with_text","(tag, link_text, options = {})",""],["link_to_user_bookmarkable_bookmarks","BookmarksHelper","BookmarksHelper.html#method-i-link_to_user_bookmarkable_bookmarks","(bookmarkable)",""],["link_to_with_tag_class","TagsHelper","TagsHelper.html#method-i-link_to_with_tag_class","(path, text, options)","<p>Adds the “tag” classname to links (for tag links)\n"],["list_challenges","CollectionsController","CollectionsController.html#method-i-list_challenges","()","<p>display challenges that are currently taking signups\n"],["list_controllers","DevmodeController","DevmodeController.html#method-i-list_controllers","()","<p>GET /devmode/\n"],["list_views","DevmodeController","DevmodeController.html#method-i-list_views","()","<p>GET list_views\n"],["live_validation_for_field","ValidationHelper","ValidationHelper.html#method-i-live_validation_for_field","(id, options = {})","<p>Generate javascript call for live validation. All the messages have default\ntranslated values.  Options: …\n"],["live_validation_varname","ValidationHelper","ValidationHelper.html#method-i-live_validation_varname","(id)","<p>use to make sure we have consistent name throughout\n"],["live_validation_wrapper","ValidationHelper","ValidationHelper.html#method-i-live_validation_wrapper","(id, validation_code)","<p>puts the standard wrapper around the code and declares the LiveValidation\nobject\n"],["load_archive_parents","SkinsController","SkinsController.html#method-i-load_archive_parents","()","<p>if we’ve been asked to load the archive parents, we do so and add them to\nparams\n"],["load_assignment_from_id","ChallengeAssignmentsController","ChallengeAssignmentsController.html#method-i-load_assignment_from_id","()",""],["load_batch_associations!","OwnedTagSet","OwnedTagSet.html#method-i-load_batch_associations-21","(batch_associations, options = {})",""],["load_bookmark","BookmarksController","BookmarksController.html#method-i-load_bookmark","()",""],["load_bookmarkable","BookmarksController","BookmarksController.html#method-i-load_bookmarkable","()","<p>get the parent\n"],["load_challenge","ChallengeAssignmentsController","ChallengeAssignmentsController.html#method-i-load_challenge","()","<p>PERMISSIONS AND STATUS CHECKING\n"],["load_challenge","ChallengeClaimsController","ChallengeClaimsController.html#method-i-load_challenge","()","<p>PERMISSIONS AND STATUS CHECKING\n"],["load_challenge","ChallengeSignupsController","ChallengeSignupsController.html#method-i-load_challenge","()",""],["load_challenge","ChallengesController","ChallengesController.html#method-i-load_challenge","()",""],["load_challenge","PotentialMatchesController","PotentialMatchesController.html#method-i-load_challenge","()",""],["load_challenge","PromptsController","PromptsController.html#method-i-load_challenge","()","<p>def promptmeme_only\n\n<pre>unless @collection.challenge_type == &quot;PromptMeme&quot;\n  flash[:error] = ts(&quot;Only ...</pre>\n"],["load_claim_from_id","ChallengeClaimsController","ChallengeClaimsController.html#method-i-load_claim_from_id","()",""],["load_collectible_item","CollectionItemsController","CollectionItemsController.html#method-i-load_collectible_item","()",""],["load_collection","ApplicationController","ApplicationController.html#method-i-load_collection","()",""],["load_collection","ChallengesController","ChallengesController.html#method-i-load_collection","()",""],["load_collection_from_id","CollectionsController","CollectionsController.html#method-i-load_collection_from_id","()",""],["load_comment","CommentsController","CommentsController.html#method-i-load_comment","()",""],["load_commentable","CommentsController","CommentsController.html#method-i-load_commentable","()","<p>Get the thing the user is trying to comment on\n"],["load_erb","DevmodeController","DevmodeController.html#method-i-load_erb","(controller, view)",""],["load_external_author","Opendoors::ExternalAuthorsController","Opendoors/ExternalAuthorsController.html#method-i-load_external_author","()",""],["load_item_and_collection","CollectionItemsController","CollectionItemsController.html#method-i-load_item_and_collection","()",""],["load_locales","ApplicationController","ApplicationController.html#method-i-load_locales","()","<p>I18n.backend = I18nDB::Backend::DBBased.new I18n.record_missing_keys =\nfalse # if you want to record …\n"],["load_media","Static::BaseController","Static/BaseController.html#method-i-load_media","()",""],["load_nomination","TagSetNominationsController","TagSetNominationsController.html#method-i-load_nomination","()",""],["load_orphans","OrphansController","OrphansController.html#method-i-load_orphans","()",""],["load_participant_and_collection","CollectionParticipantsController","CollectionParticipantsController.html#method-i-load_participant_and_collection","()",""],["load_potential_match_from_id","PotentialMatchesController","PotentialMatchesController.html#method-i-load_potential_match_from_id","()",""],["load_prompt_from_id","PromptsController","PromptsController.html#method-i-load_prompt_from_id","()",""],["load_pseuds","WorksController","WorksController.html#method-i-load_pseuds","()",""],["load_serial_work","SerialWorksController","SerialWorksController.html#method-i-load_serial_work","()",""],["load_series","SeriesController","SeriesController.html#method-i-load_series","()",""],["load_signup","PromptsController","PromptsController.html#method-i-load_signup","()",""],["load_signup_from_id","ChallengeSignupsController","ChallengeSignupsController.html#method-i-load_signup_from_id","()",""],["load_site_css","Skin","Skin.html#method-c-load_site_css","()",""],["load_skin","SkinsController","SkinsController.html#method-i-load_skin","()",""],["load_static_controller","Static::BaseController","Static/BaseController.html#method-i-load_static_controller","()",""],["load_tag","TagsController","TagsController.html#method-i-load_tag","()",""],["load_tag_set","OwnedTagSetsController","OwnedTagSetsController.html#method-i-load_tag_set","()",""],["load_tag_set","TagSetAssociationsController","TagSetAssociationsController.html#method-i-load_tag_set","()",""],["load_tag_set","TagSetNominationsController","TagSetNominationsController.html#method-i-load_tag_set","()",""],["load_user","ChallengeAssignmentsController","ChallengeAssignmentsController.html#method-i-load_user","()",""],["load_user","ChallengeClaimsController","ChallengeClaimsController.html#method-i-load_user","()",""],["load_user","ExternalAuthorsController","ExternalAuthorsController.html#method-i-load_user","()",""],["load_user","InboxController","InboxController.html#method-i-load_user","()",""],["load_user","PreferencesController","PreferencesController.html#method-i-load_user","()","<p>Ensure that the current user is authorized to view and change this\ninformation\n"],["load_user","PseudsController","PseudsController.html#method-i-load_user","()",""],["load_user","ReadingsController","ReadingsController.html#method-i-load_user","()",""],["load_user","StatsController","StatsController.html#method-i-load_user","()","<p>only the current user\n"],["load_user","SubscriptionsController","SubscriptionsController.html#method-i-load_user","()",""],["load_user","UsersController","UsersController.html#method-i-load_user","()",""],["load_user_and_work","WorkLinksController","WorkLinksController.html#method-i-load_user_and_work","()","<p>only let users look at stats for their own work\n"],["load_work","WorksController","WorksController.html#method-i-load_work","()",""],["locales_menu","ApplicationHelper","ApplicationHelper.html#method-i-locales_menu","()","<p>For setting the current locale\n"],["log_item_action_name","UsersHelper","UsersHelper.html#method-i-log_item_action_name","(action)",""],["logged_in?","ApplicationController","ApplicationController.html#method-i-logged_in-3F","()",""],["logged_in_as_admin?","ApplicationController","ApplicationController.html#method-i-logged_in_as_admin-3F","()",""],["logout_if_not_user_credentials","ApplicationController","ApplicationController.html#method-i-logout_if_not_user_credentials","()",""],["logs_to_database","HitCounter","HitCounter.html#method-c-logs_to_database","()","<p>Move download counts and referers from logs to database\n"],["logs_to_database","StatCounter","StatCounter.html#method-c-logs_to_database","()","<p>Move download counts and referers from logs to database\n"],["mailto_link","ApplicationHelper","ApplicationHelper.html#method-i-mailto_link","(user, options={})",""],["maintainer_or_signup_owner_only","ChallengeSignupsController","ChallengeSignupsController.html#method-i-maintainer_or_signup_owner_only","()",""],["maintainer_or_signup_owner_only","PromptsController","PromptsController.html#method-i-maintainer_or_signup_owner_only","()",""],["maintainers","Collection","Collection.html#method-i-maintainers","()",""],["make_official!","TagSetAssociation","TagSetAssociation.html#method-i-make_official-21","()",""],["manage","ArchiveFaqsController","ArchiveFaqsController.html#method-i-manage","()","<p>GET /archive_faqs/manage\n"],["manage","ChaptersController","ChaptersController.html#method-i-manage","()","<p>GET /work/:work_id/chapters/manage\n"],["manage","InvitationsController","InvitationsController.html#method-i-manage","()",""],["manage","InviteRequestsController","InviteRequestsController.html#method-i-manage","()",""],["manage","SeriesController","SeriesController.html#method-i-manage","()","<p>GET /series/1/manage\n"],["mark_as_ham!","Comment","Comment.html#method-i-mark_as_ham-21","()",""],["mark_as_ham!","Feedback","Feedback.html#method-i-mark_as_ham-21","()",""],["mark_as_redeemed","Invitation","Invitation.html#method-i-mark_as_redeemed","(user=nil)",""],["mark_as_spam!","Comment","Comment.html#method-i-mark_as_spam-21","()",""],["mark_as_spam!","Feedback","Feedback.html#method-i-mark_as_spam-21","()",""],["mark_invitation_redeemed","User","User.html#method-i-mark_invitation_redeemed","()","<p>If a new user was invited, update the invitation\n"],["mark_to_read_later","Reading","Reading.html#method-c-mark_to_read_later","(work, user)","<p>called from reading controller\n"],["markasread_link","WorksHelper","WorksHelper.html#method-i-markasread_link","(work)",""],["marked_for_later?","WorksHelper","WorksHelper.html#method-i-marked_for_later-3F","(work)",""],["marktoread","WorksController","WorksController.html#method-i-marktoread","()","<p>marks a work to read later, or unmarks it if the work is already marked\n"],["marktoread_link","WorksHelper","WorksHelper.html#method-i-marktoread_link","(work)",""],["mass_archive_notification","UserMailer","UserMailer.html#method-i-mass_archive_notification","(admin, users, subject, message)","<p>Sends an admin message to an array of users\n"],["mass_update","TagsController","TagsController.html#method-i-mass_update","()",""],["mass_update","UnsortedTagsController","UnsortedTagsController.html#method-i-mass_update","()",""],["match","ChallengeSignup","ChallengeSignup.html#method-i-match","(other, settings=nil)","<p>Returns nil if not a match otherwise returns PotentialMatch object self is\nthe request, other is the …\n"],["match","Prompt","Prompt.html#method-i-match","(other, settings=nil)","<p>Returns PotentialPromptMatch object if matches, otherwise nil self is the\nrequest, other is the offer …\n"],["match_rank","TagSet","TagSet.html#method-i-match_rank","(another, type=nil)","<p>Matching\n"],["matching_tags","TagSet","TagSet.html#method-i-matching_tags","(another, type=nil)","<p>returns matching tags\n"],["media_string=","Tag","Tag.html#method-i-media_string-3D","(tag_string)",""],["medias","Character","Character.html#method-i-medias","()",""],["medias","Freeform","Freeform.html#method-i-medias","()",""],["medias","Relationship","Relationship.html#method-i-medias","()",""],["merge","ExternalWorksController","ExternalWorksController.html#method-i-merge","()",""],["merge_similar","ExternalWork","ExternalWork.html#method-i-merge_similar","(externals)","<p>Assign the bookmarks and related works of other external works to this one,\nand then delete them TODO: …\n"],["merger_string=","Tag","Tag.html#method-i-merger_string-3D","(tag_string)",""],["meta_tag_string=","Tag","Tag.html#method-i-meta_tag_string-3D","(tag_string)",""],["meta_tag_tree","TagsHelper","TagsHelper.html#method-i-meta_tag_tree","(tag)","<p>Returns a nested list of meta tags\n"],["meta_tag_validation","MetaTagging","MetaTagging.html#method-i-meta_tag_validation","()",""],["method_missing","Prompt","Prompt.html#method-i-method_missing","(method)","<p>We want to have all the matching methods defined on TagSet available here,\ntoo, without rewriting them, …\n"],["method_not_allowed","ErrorsController","ErrorsController.html#method-i-method_not_allowed","()",""],["model_name","WorkSkin","WorkSkin.html#method-c-model_name","()",""],["moderated?","Collection","Collection.html#method-i-moderated-3F","()",""],["moderator_changes","OwnedTagSet","OwnedTagSet.html#method-i-moderator_changes","()",""],["moderator_changes=","OwnedTagSet","OwnedTagSet.html#method-i-moderator_changes-3D","(pseud_list)",""],["moderators_only","OwnedTagSetsController","OwnedTagSetsController.html#method-i-moderators_only","()",""],["moderators_only","TagSetAssociationsController","TagSetAssociationsController.html#method-i-moderators_only","()",""],["most_popular_tags","Pseud","Pseud.html#method-i-most_popular_tags","(options = {})","<p>Options can include :categories and :limit Gets all the canonical tags used\nby a given pseud (limited …\n"],["most_popular_tags","User","User.html#method-i-most_popular_tags","(options = {})","<p>Options can include :categories and :limit\n"],["multipart?","Work","Work.html#method-i-multipart-3F","()","<p>Returns true if a work has more than one chapter\n"],["must_have_owners","Collection","Collection.html#method-i-must_have_owners","()",""],["name","Kudo","Kudo.html#method-i-name","()","<p>return either the name of the kudo-leaver or “guest”\n"],["name","Subscription","Subscription.html#method-i-name","()","<p>The name of the object to which the user is subscribed\n"],["name_to_id","ApplicationHelper","ApplicationHelper.html#method-i-name_to_id","(name)",""],["names","ExternalAuthor","ExternalAuthor.html#method-i-names","()",""],["names_by_parent","Tag","Tag.html#method-c-names_by_parent","(child_relation, parent_type = 'fandom')","<p>Because this can be called by a gigantor tag set and all we need are names\nnot objects, we do an end-run …\n"],["names_by_parent","TagSetAssociation","TagSetAssociation.html#method-c-names_by_parent","(child_relation, child_type, parent_type = \"fandom\")",""],["names_with_count","TagNomination","TagNomination.html#method-c-names_with_count","()",""],["namespace_notes","TranslationHelper","TranslationHelper.html#method-i-namespace_notes","(namespace)",""],["naturalized","Skin","Skin.html#method-c-naturalized","(string)",""],["navigate","WorksController","WorksController.html#method-i-navigate","()",""],["nested_field_id","ApplicationHelper","ApplicationHelper.html#method-i-nested_field_id","(form, nested_object, attribute)",""],["nested_field_name","ApplicationHelper","ApplicationHelper.html#method-i-nested_field_name","(form, nested_object, attribute)",""],["new","AbuseReportsController","AbuseReportsController.html#method-i-new","()","<p>GET /abuse_reports/new GET /abuse_reports/new.xml\n"],["new","Admin::AdminInvitationsController","Admin/AdminInvitationsController.html#method-i-new","()",""],["new","AdminPostsController","AdminPostsController.html#method-i-new","()","<p>GET /admin_posts/new GET /admin_posts/new.xml\n"],["new","AdminSessionsController","AdminSessionsController.html#method-i-new","()",""],["new","ArchiveFaqsController","ArchiveFaqsController.html#method-i-new","()","<p>GET /archive_faqs/new GET /archive_faqs/new.xml\n"],["new","BookmarksController","BookmarksController.html#method-i-new","()","<p>GET /bookmarks/new GET /bookmarks/new.xml\n"],["new","Challenge::GiftExchangeController","Challenge/GiftExchangeController.html#method-i-new","()",""],["new","Challenge::PromptMemeController","Challenge/PromptMemeController.html#method-i-new","()","<p>The new form for prompt memes is actually the challenge settings page\nbecause challenges are always created …\n"],["new","ChallengeSignupsController","ChallengeSignupsController.html#method-i-new","()",""],["new","ChaptersController","ChaptersController.html#method-i-new","()","<p>GET /work/:work_id/chapters/new GET /work/:work_id/chapters/new.xml\n"],["new","CollectionItemsController","CollectionItemsController.html#method-i-new","()",""],["new","CollectionsController","CollectionsController.html#method-i-new","()",""],["new","CommentsController","CommentsController.html#method-i-new","()","<p>GET /comments/new\n"],["new","ExternalAuthorsController","ExternalAuthorsController.html#method-i-new","()",""],["new","ExternalWorksController","ExternalWorksController.html#method-i-new","()",""],["new","FeedbacksController","FeedbacksController.html#method-i-new","()","<p>GET /feedbacks/new GET /feedbacks/new.xml\n"],["new","KnownIssuesController","KnownIssuesController.html#method-i-new","()","<p>GET /known_issues/new GET /known_issues/new.xml\n"],["new","LanguagesController","LanguagesController.html#method-i-new","()",""],["new","LocalesController","LocalesController.html#method-i-new","()",""],["new","Opendoors::ExternalAuthorsController","Opendoors/ExternalAuthorsController.html#method-i-new","()",""],["new","OrphansController","OrphansController.html#method-i-new","()",""],["new","OwnedTagSetsController","OwnedTagSetsController.html#method-i-new","()",""],["new","PasswordsController","PasswordsController.html#method-i-new","()",""],["new","People","People.html#method-c-new","(char)",""],["new","PromptsController","PromptsController.html#method-i-new","()",""],["new","PseudsController","PseudsController.html#method-i-new","()","<p>GET /pseuds/new GET /pseuds/new.xml\n"],["new","SeriesController","SeriesController.html#method-i-new","()","<p>GET /series/new GET /series/new.xml\n"],["new","SkinsController","SkinsController.html#method-i-new","()",""],["new","TagSetNominationsController","TagSetNominationsController.html#method-i-new","()",""],["new","TagsController","TagsController.html#method-i-new","()","<p>GET /tags/new GET /tags/new.xml\n"],["new","TranslationNotesController","TranslationNotesController.html#method-i-new","()","<p>GET /translation_notes/new GET /translation_notes/new.xml\n"],["new","TranslationsController","TranslationsController.html#method-i-new","()",""],["new","TranslatorsController","TranslatorsController.html#method-i-new","()",""],["new","UserInviteRequestsController","UserInviteRequestsController.html#method-i-new","()","<p>GET /user_invite_requests/new GET /user_invite_requests/new.xml\n"],["new","UserSessionsController","UserSessionsController.html#method-i-new","()",""],["new","UsersController","UsersController.html#method-i-new","()","<p>GET /users/new GET /users/new.xml\n"],["new","WeightedRandom","WeightedRandom.html#method-c-new","(weights)","<p>w = WeightedRandom.new {“x” =&gt; 3, “y” =&gt; 1}\n"],["new","WorksController","WorksController.html#method-i-new","()","<p>GET /works/new\n"],["no_assignment","ChallengeAssignmentsController","ChallengeAssignmentsController.html#method-i-no_assignment","()",""],["no_assignment","PotentialMatchesController","PotentialMatchesController.html#method-i-no_assignment","()",""],["no_challenge","ChallengeAssignmentsController","ChallengeAssignmentsController.html#method-i-no_challenge","()",""],["no_challenge","ChallengeClaimsController","ChallengeClaimsController.html#method-i-no_challenge","()",""],["no_challenge","ChallengeSignupsController","ChallengeSignupsController.html#method-i-no_challenge","()",""],["no_challenge","ChallengesController","ChallengesController.html#method-i-no_challenge","()",""],["no_challenge","PotentialMatchesController","PotentialMatchesController.html#method-i-no_challenge","()",""],["no_challenge","PromptsController","PromptsController.html#method-i-no_challenge","()",""],["no_circular_skin","SkinParent","SkinParent.html#method-i-no_circular_skin","()",""],["no_claim","ChallengeClaimsController","ChallengeClaimsController.html#method-i-no_claim","()",""],["no_collection","ChallengesController","ChallengesController.html#method-i-no_collection","()",""],["no_match?","TagSet","TagSet.html#method-i-no_match-3F","(another, type=nil)",""],["no_match_required?","PotentialMatchSettings","PotentialMatchSettings.html#method-i-no_match_required-3F","()","<p>are all settings 0\n"],["no_midstream_nomination_changes","OwnedTagSet","OwnedTagSet.html#method-i-no_midstream_nomination_changes","()",""],["no_participant","CollectionParticipantsController","CollectionParticipantsController.html#method-i-no_participant","()",""],["no_prompt","PromptsController","PromptsController.html#method-i-no_prompt","()",""],["no_reserved_strings","Collection","Collection.html#method-i-no_reserved_strings","()",""],["no_signup","ChallengeSignupsController","ChallengeSignupsController.html#method-i-no_signup","()",""],["no_signup","PromptsController","PromptsController.html#method-i-no_signup","()",""],["no_site_parent","SkinParent","SkinParent.html#method-i-no_site_parent","()",""],["no_tags","Work","Work.html#method-c-no_tags","(tag_category, options = {})","<p>returns an array, must come last TODO: if you know how to turn this into a\nscope, please do! find all …\n"],["no_user","ChallengeAssignmentsController","ChallengeAssignmentsController.html#method-i-no_user","()",""],["no_user","ChallengeClaimsController","ChallengeClaimsController.html#method-i-no_user","()",""],["nominated_only","OwnedTagSetsController","OwnedTagSetsController.html#method-i-nominated_only","()",""],["nominated_parents","AutocompleteController","AutocompleteController.html#method-i-nominated_parents","()","<p>Nominated parents\n"],["nominated_parents","TagNomination","TagNomination.html#method-c-nominated_parents","(child_tagname, parent_search_term=\"\")","<p>returns an array of all the parent tagnames for the given tag  can be\nchained with other queries but …\n"],["nominated_tags","TagSetNomination","TagSetNomination.html#method-i-nominated_tags","(tag_type = \"fandom\", index = -1)",""],["nomination_limits","TagSetNomination","TagSetNomination.html#method-i-nomination_limits","()",""],["nomination_notes","TagSetsHelper","TagSetsHelper.html#method-i-nomination_notes","(limit)",""],["nomination_status","TagSetsHelper","TagSetsHelper.html#method-i-nomination_status","(nomination=nil)",""],["nomination_status_span","TagSetsHelper","TagSetsHelper.html#method-i-nomination_status_span","(nom)","<p>BACK END, I attempted to put titles in but it’s rendering as oldtitle\n"],["non_anonymous_byline","ApplicationHelper","ApplicationHelper.html#method-i-non_anonymous_byline","(creation)",""],["non_anonymous_text_byline","ApplicationHelper","ApplicationHelper.html#method-i-non_anonymous_text_byline","(creation)",""],["noncanonical_info_class","TagSetsHelper","TagSetsHelper.html#method-i-noncanonical_info_class","(form)",""],["noncanonical_tag","AutocompleteController","AutocompleteController.html#method-i-noncanonical_tag","()","<p>NONCANONICAL TAGS\n"],["not_allowed","ApplicationController","ApplicationController.html#method-i-not_allowed","(fallback=nil)",""],["not_already_reviewed","TagNomination","TagNomination.html#method-i-not_already_reviewed","()",""],["not_empty?","Collection","Collection.html#method-i-not_empty-3F","()",""],["not_existing","TagSetAssociation","TagSetAssociation.html#method-i-not_existing","()",""],["not_found","ErrorsController","ErrorsController.html#method-i-not_found","()",""],["not_implemented","ErrorsController","ErrorsController.html#method-i-not_implemented","()",""],["not_orphaned","Pseud","Pseud.html#method-c-not_orphaned","()",""],["not_signup_owner","ChallengeSignupsController","ChallengeSignupsController.html#method-i-not_signup_owner","()",""],["not_signup_owner","PromptsController","PromptsController.html#method-i-not_signup_owner","()",""],["notify","Admin::AdminUsersController","Admin/AdminUsersController.html#method-i-notify","()",""],["notify_and_show_confirmation_screen","UsersController","UsersController.html#method-i-notify_and_show_confirmation_screen","()",""],["notify_co_authors","CreationObserver","CreationObserver.html#method-i-notify_co_authors","(creation)","<p>Notify new co-authors that they’ve been added to a creation\n"],["notify_maintainers","Collection","Collection.html#method-i-notify_maintainers","(subject, message)",""],["notify_of_author_reveal","CollectionItem","CollectionItem.html#method-i-notify_of_author_reveal","()","<p>When the authors of anonymous works are revealed, notify users subscribed\nto those authors\n"],["notify_of_reveal","CollectionItem","CollectionItem.html#method-i-notify_of_reveal","()",""],["notify_of_status_change","CollectionItem","CollectionItem.html#method-i-notify_of_status_change","()",""],["notify_parent_owners","RelatedWork","RelatedWork.html#method-i-notify_parent_owners","()",""],["notify_parents","CreationObserver","CreationObserver.html#method-i-notify_parents","(work)","<p>notify authors of related work\n"],["notify_prompters","CreationObserver","CreationObserver.html#method-i-notify_prompters","(work)","<p>notify prompters of response to their prompt\n"],["notify_recipients","CreationObserver","CreationObserver.html#method-i-notify_recipients","(work)","<p>notify recipients that they have gotten a story!\n"],["notify_subscribers","CreationObserver","CreationObserver.html#method-i-notify_subscribers","(creation)","<p>notify people subscribed to this creation or its authors\n"],["notify_user_by_email?","CommentObserver","CommentObserver.html#method-i-notify_user_by_email-3F","(user)","<p>notify the user unless\n<p>they aren’t a user :&gt; (but notify them it they’re an admin)\n<p>they are the orphan …\n"],["notify_user_by_email?","KudoObserver","KudoObserver.html#method-i-notify_user_by_email-3F","(user)",""],["notify_user_by_inbox?","CommentObserver","CommentObserver.html#method-i-notify_user_by_inbox-3F","(user)",""],["notify_user_of_claim","ExternalAuthor","ExternalAuthor.html#method-i-notify_user_of_claim","(claimed_work_ids)",""],["notify_user_of_own_comments?","CommentObserver","CommentObserver.html#method-i-notify_user_of_own_comments-3F","(user)",""],["number_of_chapters","Work","Work.html#method-i-number_of_chapters","()","<p>Get the total number of chapters for a work\n"],["number_of_posted_chapters","Work","Work.html#method-i-number_of_posted_chapters","()","<p>Get the total number of posted chapters for a work Issue 1316: total number\nneeds to reflect the actual …\n"],["number_of_prompts","ChallengeSignup","ChallengeSignup.html#method-i-number_of_prompts","()",""],["offer_byline","ChallengeAssignment","ChallengeAssignment.html#method-i-offer_byline","()",""],["offering_pseud","ChallengeAssignment","ChallengeAssignment.html#method-i-offering_pseud","()",""],["offering_user","ChallengeAssignment","ChallengeAssignment.html#method-i-offering_user","()",""],["open_collection_names","AutocompleteController","AutocompleteController.html#method-i-open_collection_names","()","<p>return collection names\n"],["opendoors_only","ApplicationController","ApplicationController.html#method-i-opendoors_only","()","<p>Filter method - requires user to have opendoors privs\n"],["openid","UserSessionsController","UserSessionsController.html#method-i-openid","()",""],["openid_small","UserSessionsController","UserSessionsController.html#method-i-openid_small","()",""],["order_by_offering_pseud","ChallengeClaim","ChallengeClaim.html#method-c-order_by_offering_pseud","(dir=\"ASC\")",""],["order_by_requesting_pseud","ChallengeClaim","ChallengeClaim.html#method-c-order_by_requesting_pseud","(dir=\"ASC\")",""],["original_ultimate_parent","Comment","Comment.html#method-i-original_ultimate_parent","()","<p>override this method from comment_methods.rb to return ultimate\n"],["orphan","Collection","Collection.html#method-c-orphan","(pseuds, collections, default=true)","<p>Change membership of collection(s) from a particular pseud to the orphan\naccount\n"],["orphan","Creatorship","Creatorship.html#method-c-orphan","(pseuds, orphans, default=true)","<p>Change authorship of works or series from a particular pseud to the orphan\naccount\n"],["orphan","ExternalAuthor","ExternalAuthor.html#method-i-orphan","(remove_pseud)",""],["orphan_account","User","User.html#method-c-orphan_account","()","<p>Gets the user account for authored objects if orphaning is enabled\n"],["owned_by","OwnedTagSet","OwnedTagSet.html#method-c-owned_by","(user = User.current_user)",""],["owned_by","TagSetNomination","TagSetNomination.html#method-c-owned_by","(user = User.current_user)",""],["owned_tag_set_ids","PromptRestriction","PromptRestriction.html#method-i-owned_tag_set_ids","()","<p>Efficiently get ids of all tagsets thanks to Valium\n"],["owned_tag_sets","AutocompleteController","AutocompleteController.html#method-i-owned_tag_sets","()","<p>owned tag sets that are usable by all\n"],["owner_changes","OwnedTagSet","OwnedTagSet.html#method-i-owner_changes","()",""],["owner_changes=","OwnedTagSet","OwnedTagSet.html#method-i-owner_changes-3D","(pseud_list)",""],["owner_only","ChallengeAssignmentsController","ChallengeAssignmentsController.html#method-i-owner_only","()",""],["owner_only","ChallengeClaimsController","ChallengeClaimsController.html#method-i-owner_only","()",""],["owners","Series","Series.html#method-i-owners","()","<p>return list of users on this series\n"],["owners_only","OwnedTagSetsController","OwnedTagSetsController.html#method-i-owners_only","()",""],["owners_required","CollectionParticipantsController","CollectionParticipantsController.html#method-i-owners_required","()",""],["params_without","ApplicationHelper","ApplicationHelper.html#method-i-params_without","(name)",""],["parent_attributes=","Work","Work.html#method-i-parent_attributes-3D","(attributes)","<p>Virtual attribute for parent work, via related_works\n"],["parent_exists","Collection","Collection.html#method-i-parent_exists","()",""],["parent_is_allowed","Collection","Collection.html#method-i-parent_is_allowed","()",""],["parent_name","Collection","Collection.html#method-i-parent_name","()",""],["parent_name=","Collection","Collection.html#method-i-parent_name-3D","(name)","<p>END AUTOCOMPLETE\n"],["parent_names","Tag","Tag.html#method-c-parent_names","(parent_type = 'fandom')","<p>gives you [parent_name, child_name], [parent_name, child_name], …\n"],["parent_names","TagSetAssociation","TagSetAssociation.html#method-c-parent_names","(child_type, parent_type = \"fandom\")","<p>almost exactly like the same code in tag.rb\n"],["parent_skin_title","SkinParent","SkinParent.html#method-i-parent_skin_title","()",""],["parent_skin_title=","SkinParent","SkinParent.html#method-i-parent_skin_title-3D","(title)",""],["parent_tagname","TagSetAssociation","TagSetAssociation.html#method-i-parent_tagname","()",""],["parent_tagname=","TagSetAssociation","TagSetAssociation.html#method-i-parent_tagname-3D","(parent_tagname)",""],["parent_types","Character","Character.html#method-i-parent_types","()","<p>Types of tags to which a character tag can belong via common taggings or\nmeta taggings\n"],["parent_types","Fandom","Fandom.html#method-i-parent_types","()","<p>Types of tags to which a fandom tag can belong via common taggings or meta\ntaggings\n"],["parent_types","Freeform","Freeform.html#method-i-parent_types","()","<p>Types of tags to which a freeform tag can belong via common taggings or\nmeta taggings\n"],["parent_types","Relationship","Relationship.html#method-i-parent_types","()","<p>Types of tags to which a relationship tag can belong via common taggings or\nmeta taggings\n"],["parent_types","Tag","Tag.html#method-i-parent_types","()","<p>Inherited tag classes can set this to indicate types of tags with which\nthey may have a parent/child …\n"],["parents","Work","Work.html#method-i-parents","()","<p>Works (internal or external) that this work was inspired by Can’t make this\na has_many association because …\n"],["parse_author","StoryParser","StoryParser.html#method-i-parse_author","(location)","<p>tries to create an external author for a given url\n"],["parse_author_common","StoryParser","StoryParser.html#method-i-parse_author_common","(email, name)",""],["parse_author_from_lj","StoryParser","StoryParser.html#method-i-parse_author_from_lj","(location)",""],["parse_author_from_minotaur","StoryParser","StoryParser.html#method-i-parse_author_from_minotaur","(location)","<p>custom author parser for the whitfic and grahamslash archives we’re\nrescuing known problem: this will …\n"],["parse_author_from_unknown","StoryParser","StoryParser.html#method-i-parse_author_from_unknown","(location)",""],["parse_author_from_yuletide","StoryParser","StoryParser.html#method-i-parse_author_from_yuletide","(location)",""],["parse_autocomplete_value","Tag","Tag.html#method-c-parse_autocomplete_value","(current_autocomplete_value)",""],["parse_autocomplete_value","TagSetAssociation","TagSetAssociation.html#method-c-parse_autocomplete_value","(current_autocomplete_value)",""],["parse_byline","Pseud","Pseud.html#method-c-parse_byline","(byline, options = {})","<p>Parse a string of the “pseud.name (user.login)” format into a pseud\n"],["parse_bylines","Pseud","Pseud.html#method-c-parse_bylines","(list, options = {})","<p>Takes a comma-separated list of bylines Returns a hash containing an array\nof pseuds and an array of …\n"],["parse_chapter_of_work","StoryParser","StoryParser.html#method-i-parse_chapter_of_work","(work, chapter_content, location, options = {})","<p>parses and adds a new chapter to the end of the work\n"],["parse_chapters_into_story","StoryParser","StoryParser.html#method-i-parse_chapters_into_story","(location, chapter_contents, options = {})",""],["parse_common","StoryParser","StoryParser.html#method-i-parse_common","(story, location = nil, encoding = nil)","<p>This is the heavy lifter, invoked by all the story and chapter parsers. It\ntakes a single string containing …\n"],["parse_media_from_filename","Skin","Skin.html#method-i-parse_media_from_filename","(media_string)",""],["parse_sheet_role","Skin","Skin.html#method-i-parse_sheet_role","(role_string)",""],["parse_story","StoryParser","StoryParser.html#method-i-parse_story","(story, location, options = {})","<p>Parses the text of a story, optionally from a given location.\n"],["parse_story_from_deviantart","StoryParser","StoryParser.html#method-i-parse_story_from_deviantart","(story)",""],["parse_story_from_dw","StoryParser","StoryParser.html#method-i-parse_story_from_dw","(story)",""],["parse_story_from_ffnet","StoryParser","StoryParser.html#method-i-parse_story_from_ffnet","(story)","<p>Parses a story from fanfiction.net\n"],["parse_story_from_lj","StoryParser","StoryParser.html#method-i-parse_story_from_lj","(story)","<p>Parses a story from livejournal or a livejournal equivalent (eg,\ndreamwidth, insanejournal) Assumes that …\n"],["parse_story_from_lotrfanfiction","StoryParser","StoryParser.html#method-i-parse_story_from_lotrfanfiction","(story)",""],["parse_story_from_modified_efiction","StoryParser","StoryParser.html#method-i-parse_story_from_modified_efiction","(story, site = \"\")",""],["parse_story_from_twilightarchives","StoryParser","StoryParser.html#method-i-parse_story_from_twilightarchives","(story)",""],["parse_story_from_unknown","StoryParser","StoryParser.html#method-i-parse_story_from_unknown","(story)","<p>our fallback: parse a story from an unknown source, so we have no special\nrules.\n"],["parse_story_from_yuletide","StoryParser","StoryParser.html#method-i-parse_story_from_yuletide","(story)","<p>Parses a story from the Yuletide archive (an AutomatedArchive)\n"],["partial_match?","TagSet","TagSet.html#method-i-partial_match-3F","(another, type=nil)",""],["passwd","UserSessionsController","UserSessionsController.html#method-i-passwd","()",""],["passwd_small","UserSessionsController","UserSessionsController.html#method-i-passwd_small","()",""],["people_paginated_section","AlphabetHelper","AlphabetHelper.html#method-i-people_paginated_section","(type)",""],["perform","AdminSetting","AdminSetting.html#method-c-perform","(method, *args)","<p>This will be called by a worker when a job needs to be processed\n"],["perform","ChallengeAssignment","ChallengeAssignment.html#method-c-perform","(method, *args)","<p>This will be called by a worker when a job needs to be processed\n"],["perform","ChallengeSignup","ChallengeSignup.html#method-c-perform","(collection_id)",""],["perform","Collection","Collection.html#method-c-perform","(id, method, *args)","<p>This will be called by a worker when a job needs to be processed\n"],["perform","PotentialMatch","PotentialMatch.html#method-c-perform","(collection_id)",""],["pinch_hitter_byline","ChallengeAssignment","ChallengeAssignment.html#method-i-pinch_hitter_byline","()",""],["pinch_hitter_byline=","ChallengeAssignment","ChallengeAssignment.html#method-i-pinch_hitter_byline-3D","(byline)",""],["pinch_request_byline","ChallengeAssignment","ChallengeAssignment.html#method-i-pinch_request_byline","()",""],["pinch_request_byline=","ChallengeAssignment","ChallengeAssignment.html#method-i-pinch_request_byline-3D","(byline)",""],["plural","WorkSkin","WorkSkin.html#method-i-plural","()",""],["position","PotentialMatch","PotentialMatch.html#method-c-position","(collection)",""],["post","ChaptersController","ChaptersController.html#method-i-post","()","<p>POST /chapters/1/post\n"],["post_draft","WorksController","WorksController.html#method-i-post_draft","()",""],["post_first_chapter","Work","Work.html#method-i-post_first_chapter","()","<p>If the work is posted, the first chapter should be posted too\n"],["posted?","ChallengeAssignment","ChallengeAssignment.html#method-i-posted-3F","()",""],["posted?","CollectionItem","CollectionItem.html#method-i-posted-3F","()",""],["posted_works","Series","Series.html#method-i-posted_works","()",""],["potential_match_generation_notification","UserMailer","UserMailer.html#method-i-potential_match_generation_notification","(collection_id)",""],["preview","ChaptersController","ChaptersController.html#method-i-preview","()","<p>GET /chapters/1/preview\n"],["preview","SkinsController","SkinsController.html#method-i-preview","()",""],["preview","WorksController","WorksController.html#method-i-preview","()","<p>GET /works/1/preview\n"],["preview_tags","WorksController","WorksController.html#method-i-preview_tags","()",""],["print_bookmarks_link","UsersHelper","UsersHelper.html#method-i-print_bookmarks_link","(user)","<p>Prints link to bookmarks page with user-appropriate number of bookmarks\n(The total should reflect the …\n"],["print_coauthors","UsersHelper","UsersHelper.html#method-i-print_coauthors","(user)","<p>Prints coauthors\n"],["print_gifts_link","UsersHelper","UsersHelper.html#method-i-print_gifts_link","(user)",""],["print_pseud_bookmarks_link","UsersHelper","UsersHelper.html#method-i-print_pseud_bookmarks_link","(pseud)",""],["print_pseud_list","PseudsHelper","PseudsHelper.html#method-i-print_pseud_list","(pseuds)","<p>Prints array of pseuds with links to user pages used on Profile page\n"],["print_pseud_selector","PseudsHelper","PseudsHelper.html#method-i-print_pseud_selector","(pseuds)","<p>used in the sidebar\n"],["print_pseud_series_link","UsersHelper","UsersHelper.html#method-i-print_pseud_series_link","(pseud)",""],["print_pseud_works_link","UsersHelper","UsersHelper.html#method-i-print_pseud_works_link","(pseud)",""],["print_pseuds","UsersHelper","UsersHelper.html#method-i-print_pseuds","(user)","<p>Prints user pseuds with links to anchors for each pseud on the page and the\ndescription as the title …\n"],["print_series_link","UsersHelper","UsersHelper.html#method-i-print_series_link","(user)","<p>Prints link to series page with user-appropriate number of series\n"],["print_works","UsersHelper","UsersHelper.html#method-i-print_works","(pseud)","<p>print all works that belong to a given pseud\n"],["print_works_link","UsersHelper","UsersHelper.html#method-i-print_works_link","(user)","<p>Prints link to works page with user-appropriate number of works (The total\nshould reflect the number …\n"],["process_dir","DevmodeController","DevmodeController.html#method-i-process_dir","(dirname, links, view, stack)",""],["process_file","DevmodeController","DevmodeController.html#method-i-process_file","(filename, links, view)",""],["profile_logs","DevmodeController","DevmodeController.html#method-i-profile_logs","()",""],["progress","PotentialMatch","PotentialMatch.html#method-c-progress","(collection)",""],["progress_key","PotentialMatch","PotentialMatch.html#method-c-progress_key","(collection)",""],["prompt_meme?","Collection","Collection.html#method-i-prompt_meme-3F","()",""],["prompt_meme_to_csv","ChallengeSignupsController","ChallengeSignupsController.html#method-i-prompt_meme_to_csv","()",""],["prompt_restriction_settings","PromptRestrictionsHelper","PromptRestrictionsHelper.html#method-i-prompt_restriction_settings","(form, include_description = false, allowany)",""],["prompt_tags","ChallengeHelper","ChallengeHelper.html#method-i-prompt_tags","(prompt)",""],["prompter_notification","UserMailer","UserMailer.html#method-i-prompter_notification","(work_id, collection_id=nil)","<p>Emails a prompter to say that a response has been posted to their prompt\n"],["proposed_fill_date","InviteRequest","InviteRequest.html#method-i-proposed_fill_date","()",""],["pseud","AutocompleteController","AutocompleteController.html#method-i-pseud","()","<p>PSEUDS\n"],["pseud_link","ApplicationHelper","ApplicationHelper.html#method-i-pseud_link","(pseud)",""],["pseud_text","ApplicationHelper","ApplicationHelper.html#method-i-pseud_text","(pseud)",""],["pseuds","People","People.html#method-i-pseuds","()",""],["published_at","Series","Series.html#method-i-published_at","()","<p>Grabs the earliest published_at date of the visible works in the series\n"],["published_at","Work","Work.html#method-i-published_at","()",""],["purge","ChallengeAssignmentsController","ChallengeAssignmentsController.html#method-i-purge","()",""],["purge_old_drafts","Work","Work.html#method-c-purge_old_drafts","()",""],["queue_kudo","RedisMailQueue","RedisMailQueue.html#method-c-queue_kudo","(author, kudo)","<p>queue a kudo notification in redis we create a separate list in redis for\neach author and work to be …\n"],["queue_subscription","RedisMailQueue","RedisMailQueue.html#method-c-queue_subscription","(subscription, creation)","<p>queue a subscription notification in redis we create a separate list in\nredis for each subscriber and …\n"],["random_chapter","DevmodeController","DevmodeController.html#method-i-random_chapter","(characters, fuzziness=50)",""],["random_search_tip","SearchHelper","SearchHelper.html#method-i-random_search_tip","()",""],["random_sentence","DevmodeController","DevmodeController.html#method-i-random_sentence","(characters, fuzziness=4)",""],["rating_selected","WorksHelper","WorksHelper.html#method-i-rating_selected","(work)","<p>select default rating if this is a new work\n"],["read_inbox_comments","User","User.html#method-i-read_inbox_comments","()",""],["reading_object","Reading","Reading.html#method-c-reading_object","(reading_json)","<p>create a reading object, but only if the user has reading history enabled\nand is not the author of the …\n"],["rec_counts_for_pseuds","Pseud","Pseud.html#method-c-rec_counts_for_pseuds","(pseuds)",""],["recategorize","UnsortedTag","UnsortedTag.html#method-i-recategorize","(new_type)","<p>unsorted tags can have their type changed but they need to be reloaded to\nbe seen as an instance of the …\n"],["reccers","People","People.html#method-i-reccers","()",""],["recipient","Gift","Gift.html#method-i-recipient","()",""],["recipient=","Gift","Gift.html#method-i-recipient-3D","(new_recipient_name)",""],["recipient_is_not_registered","Invitation","Invitation.html#method-i-recipient_is_not_registered","()",""],["recipient_notification","UserMailer","UserMailer.html#method-i-recipient_notification","(user_id, work_id, collection_id=nil)","<p>Emails a recipient to say that a gift has been posted for them\n"],["recipients","CollectionItem","CollectionItem.html#method-i-recipients","()",""],["recipients","Work","Work.html#method-i-recipients","()",""],["recipients=","Work","Work.html#method-i-recipients-3D","(recipient_names)",""],["recipients_link","WorksHelper","WorksHelper.html#method-i-recipients_link","(work)",""],["redirect_back_or_default","ApplicationController","ApplicationController.html#method-i-redirect_back_or_default","(default = root_path)","<p>Redirect to the URI stored by the most recent store_location call or to the\npassed default.\n"],["redirect_to_all_comments","CommentsController","CommentsController.html#method-i-redirect_to_all_comments","(commentable, options = {})",""],["redirect_to_comment","CommentsController","CommentsController.html#method-i-redirect_to_comment","(comment, options = {})","<p>redirect to a particular comment in a thread, going into the thread if\nnecessary to display it\n"],["reject","CollectionItem","CollectionItem.html#method-i-reject","(user)",""],["reject","CommentsController","CommentsController.html#method-i-reject","()",""],["reject_by_collection","CollectionItem","CollectionItem.html#method-i-reject_by_collection","()",""],["reject_by_user","CollectionItem","CollectionItem.html#method-i-reject_by_user","()",""],["reject_children","FandomNomination","FandomNomination.html#method-i-reject_children","()",""],["rejected?","CollectionItem","CollectionItem.html#method-i-rejected-3F","()",""],["rejected_by_collection","CollectionItem","CollectionItem.html#method-c-rejected_by_collection","()",""],["rejected_by_collection?","CollectionItem","CollectionItem.html#method-i-rejected_by_collection-3F","()",""],["rejected_by_user","CollectionItem","CollectionItem.html#method-c-rejected_by_user","()",""],["rejected_by_user?","CollectionItem","CollectionItem.html#method-i-rejected_by_user-3F","()",""],["related_work_notification","UserMailer","UserMailer.html#method-i-related_work_notification","(user_id, related_work_id)","<p>Sends emails to authors whose stories were listed as the inspiration of\nanother work\n"],["relationship","AutocompleteController","AutocompleteController.html#method-i-relationship","()",""],["relationship_in_fandom","AutocompleteController","AutocompleteController.html#method-i-relationship_in_fandom","()",""],["relationship_string=","Tag","Tag.html#method-i-relationship_string-3D","(tag_string)",""],["relationship_tagnames","FandomNomination","FandomNomination.html#method-i-relationship_tagnames","()",""],["relationships","Character","Character.html#method-i-relationships","()",""],["relationships","Freeform","Freeform.html#method-i-relationships","()",""],["relationships","Relationship","Relationship.html#method-i-relationships","()",""],["remove","CollectionItem","CollectionItem.html#method-i-remove","()",""],["remove=","CollectionItem","CollectionItem.html#method-i-remove-3D","(value)",""],["remove_association","Tag","Tag.html#method-i-remove_association","(tag)","<p>Determine how two tags are related and divorce them from each other\n"],["remove_author","Series","Series.html#method-i-remove_author","(author_to_remove)","<p>Remove a user as an author of this series\n"],["remove_author","Work","Work.html#method-i-remove_author","(author_to_remove)",""],["remove_filter_tagging","ExternalWork","ExternalWork.html#method-i-remove_filter_tagging","(tag)","<p>Removes filter_tagging relationship unless the work is tagged with more\nthan one synonymous tags\n"],["remove_filter_tagging","Tagging","Tagging.html#method-i-remove_filter_tagging","()",""],["remove_filter_tagging","Work","Work.html#method-i-remove_filter_tagging","(tag)","<p>Removes filter_tagging relationship unless the work is tagged with more\nthan one synonymous tags\n"],["remove_filter_taggings","Tag","Tag.html#method-i-remove_filter_taggings","(old_filter=nil)","<p>Remove filter taggings for a given tag If an old_filter value is given,\nremove filter_taggings from it …\n"],["remove_from_autocomplete","Tag","Tag.html#method-i-remove_from_autocomplete","()",""],["remove_from_autocomplete","TagSet","TagSet.html#method-i-remove_from_autocomplete","()",""],["remove_from_autocomplete","TagSetAssociation","TagSetAssociation.html#method-i-remove_from_autocomplete","()",""],["remove_from_queue","User","User.html#method-i-remove_from_queue","()","<p>Existing users should be removed from the invitations queue\n"],["remove_invalid","FilterTagging","FilterTagging.html#method-c-remove_invalid","()","<p>Remove all invalid filter taggings\n"],["remove_me_from_preferences","Skin","Skin.html#method-i-remove_me_from_preferences","()",""],["remove_meta_filters","Tag","Tag.html#method-i-remove_meta_filters","(meta_tag)","<p>When a meta tagging relationship is removed, things filter-tagged with the\nmeta tag and the sub tag should …\n"],["remove_name_link","ExternalAuthorsHelper","ExternalAuthorsHelper.html#method-i-remove_name_link","(form_builder)",""],["remove_outdated_downloads","Work","Work.html#method-i-remove_outdated_downloads","()",""],["remove_pseud_from_kudos","User","User.html#method-i-remove_pseud_from_kudos","()",""],["remove_stale_from_autocomplete","Tag","Tag.html#method-i-remove_stale_from_autocomplete","()",""],["remove_sub_filters","Tag","Tag.html#method-i-remove_sub_filters","(sub_tag)",""],["remove_tag_association_label","TagsHelper","TagsHelper.html#method-i-remove_tag_association_label","(tag)","<p>the label on checkboxes to remove tag associations currently blank per\nwrangler request, can be changed …\n"],["remove_tagnames","OwnedTagSet","OwnedTagSet.html#method-i-remove_tagnames","(tag_type, tagnames_to_remove)",""],["remove_tags_from_autocomplete","TagSet","TagSet.html#method-i-remove_tags_from_autocomplete","(tags_to_remove)",""],["render_mobi_html","DownloadsController","DownloadsController.html#method-i-render_mobi_html","(template, basename)",""],["render_orphan_partial","OrphansHelper","OrphansHelper.html#method-i-render_orphan_partial","(orphans)","<p>Renders the appropriate partial based on the class of object to be orphaned\n"],["render_xhtml","DownloadsController","DownloadsController.html#method-i-render_xhtml","(html, filename)",""],["reorder","ArchiveFaq","ArchiveFaq.html#method-c-reorder","(positions)",""],["reorder","InviteRequestsController","InviteRequestsController.html#method-i-reorder","()",""],["reorder","Series","Series.html#method-i-reorder","(positions)","<p>Change the positions of the serial works in the series\n"],["reorder","Work","Work.html#method-i-reorder","(positions)","<p>Change the positions of the chapters in the work\n"],["replace_me_with_default","Pseud","Pseud.html#method-i-replace_me_with_default","()",""],["reply","InboxController","InboxController.html#method-i-reply","()",""],["request","ChallengeAssignment","ChallengeAssignment.html#method-i-request","()",""],["request_byline","ChallengeAssignment","ChallengeAssignment.html#method-i-request_byline","()",""],["request_byline","ChallengeClaim","ChallengeClaim.html#method-i-request_byline","()",""],["request_noncanonical_info","TagSetNominationsController","TagSetNominationsController.html#method-i-request_noncanonical_info","()",""],["request_to_array","ChallengeSignupsController","ChallengeSignupsController.html#method-i-request_to_array","(type, request)",""],["requesting_pseud","ChallengeAssignment","ChallengeAssignment.html#method-i-requesting_pseud","()",""],["requesting_pseud","ChallengeClaim","ChallengeClaim.html#method-i-requesting_pseud","()",""],["require_login","Static::RestrictedWorksController","Static/RestrictedWorksController.html#method-i-require_login","()",""],["require_unique?","PromptRestriction","PromptRestriction.html#method-i-require_unique-3F","(tag_type)",""],["require_unique_tagname_with_parent","TagNomination","TagNomination.html#method-i-require_unique_tagname_with_parent","()",""],["require_unique_tagnames","TagSetNomination","TagSetNomination.html#method-i-require_unique_tagnames","()",""],["required","PromptRestriction","PromptRestriction.html#method-i-required","(tag_type)",""],["required_and_allowed","PromptRestrictionsHelper","PromptRestrictionsHelper.html#method-i-required_and_allowed","(form, tag_type, allowany)",""],["required_and_allowed_boolean","PromptRestrictionsHelper","PromptRestrictionsHelper.html#method-i-required_and_allowed_boolean","(form, fieldname)",""],["reset_filter_count","Tag","Tag.html#method-i-reset_filter_count","()",""],["reset_order","InviteRequest","InviteRequest.html#method-c-reset_order","()","<p>Realign positions if they’re incorrect\n"],["reset_password","UserMailer","UserMailer.html#method-i-reset_password","(user_id, activation_code)","<p>Sends a temporary password to the user\n"],["reset_positions_in_collection!","Prompt","Prompt.html#method-c-reset_positions_in_collection-21","(collection)",""],["reset_user_password","User","User.html#method-i-reset_user_password","()","<p>use update_all to force the update even if the user is invalid\n"],["respond_to?","Prompt","Prompt.html#method-i-respond_to-3F","(method, include_private = false)",""],["restricted?","PromptRestriction","PromptRestriction.html#method-i-restricted-3F","(tag_type, restriction)",""],["restricted_tags","Prompt","Prompt.html#method-i-restricted_tags","()",""],["reveal!","Collection","Collection.html#method-i-reveal-21","()",""],["reveal!","CollectionItem","CollectionItem.html#method-i-reveal-21","()","<p>Reveal an individual collection item Can’t use update_attribute because of\npotential validation issues …\n"],["reveal_authors!","Collection","Collection.html#method-i-reveal_authors-21","()",""],["reviewed?","TagNomination","TagNomination.html#method-i-reviewed-3F","()",""],["reviewed?","TagSetNomination","TagSetNomination.html#method-i-reviewed-3F","()","<p>Have ALL the nominations been reviewed?\n"],["revised_at","Series","Series.html#method-i-revised_at","()",""],["rows_for_words","TranslationHelper","TranslationHelper.html#method-i-rows_for_words","(string)",""],["sanitized_content","Comment","Comment.html#method-i-sanitized_content","()",""],["save_chapters","Work","Work.html#method-i-save_chapters","()","<p>Save chapter data when the work is updated\n"],["save_creatorships","CreationObserver","CreationObserver.html#method-i-save_creatorships","(creation)","<p>Save creatorships after the creation is saved\n"],["save_parents","Work","Work.html#method-i-save_parents","()","<p>Save relationship to parent work if applicable\n"],["scan_text_for_meta","StoryParser","StoryParser.html#method-i-scan_text_for_meta","(text)","<p>Find any cases of the given pieces of meta in the given text and return a\nhash of meta values\n"],["search","BookmarksController","BookmarksController.html#method-i-search","()",""],["search","PeopleController","PeopleController.html#method-i-search","()",""],["search","TagsController","TagsController.html#method-i-search","()",""],["search","WorksController","WorksController.html#method-i-search","()",""],["search_by_role","User","User.html#method-c-search_by_role","(role, query, options = {})","<p>Find users with a particular role and/or by name or email Options:\ninactive, page\n"],["search_header","SearchHelper","SearchHelper.html#method-i-search_header","(collection, search_query, item_name)","<p>modified from mislav-will_paginate-2.3.2/lib/will_paginate/view_helpers.rb\n"],["see_adult?","ApplicationController","ApplicationController.html#method-i-see_adult-3F","()",""],["seedusers","DevmodeController","DevmodeController.html#method-i-seedusers","()","<p>GET+POST /devmode/seedusers\n"],["seedworks","DevmodeController","DevmodeController.html#method-i-seedworks","()",""],["send_activation","Admin::AdminUsersController","Admin/AdminUsersController.html#method-i-send_activation","()",""],["send_author_reveal_notifications","Collection","Collection.html#method-i-send_author_reveal_notifications","()",""],["send_external_invites","WorksController","WorksController.html#method-i-send_external_invites","(works)","<p>if we are importing for others, we need to send invitations\n"],["send_notification","Admin::AdminUsersController","Admin/AdminUsersController.html#method-i-send_notification","()",""],["send_out","ChallengeAssignment","ChallengeAssignment.html#method-i-send_out","()",""],["send_out","ChallengeAssignment","ChallengeAssignment.html#method-c-send_out","(collection)","<p>send assignments out to all participants\n"],["send_out","ChallengeAssignmentsController","ChallengeAssignmentsController.html#method-i-send_out","()",""],["send_reveal_notifications","Collection","Collection.html#method-i-send_reveal_notifications","()",""],["series_attributes=","Work","Work.html#method-i-series_attributes-3D","(attributes)","<p>Virtual attribute for series\n"],["series_data_for_work","SeriesHelper","SeriesHelper.html#method-i-series_data_for_work","(work)","<p>this should only show prev and next works visible to the current user\n"],["series_list_for_feeds","SeriesHelper","SeriesHelper.html#method-i-series_list_for_feeds","(work)",""],["series_removal_confirmation","SeriesHelper","SeriesHelper.html#method-i-series_removal_confirmation","(series, user)","<p>Generates confirmation message for ‘remove me as author’\n"],["set","ChallengeAssignmentsController","ChallengeAssignmentsController.html#method-i-set","()",""],["set","LocalesController","LocalesController.html#method-i-set","()",""],["set","SkinsController","SkinsController.html#method-i-set","()",""],["set_all","FilterCount","FilterCount.html#method-c-set_all","()","<p>Set accurate filter counts for all canonical tags\n"],["set_anonymous_and_unrevealed","CollectionItem","CollectionItem.html#method-i-set_anonymous_and_unrevealed","()",""],["set_approval_status","CastNomination","CastNomination.html#method-i-set_approval_status","()",""],["set_approval_status","TagNomination","TagNomination.html#method-i-set_approval_status","()",""],["set_author_attributes","WorksController","WorksController.html#method-i-set_author_attributes","()","<p>set the author attributes\n"],["set_base_locale","Locale","Locale.html#method-c-set_base_locale","(locale={:iso => \"en\", :name => \"English\"})","<p>Ensure that there’s at least one locale in the database\n"],["set_challenge_claim_info","Work","Work.html#method-i-set_challenge_claim_info","()",""],["set_challenge_info","Work","Work.html#method-i-set_challenge_info","()",""],["set_chapter_attributes","StoryParser","StoryParser.html#method-i-set_chapter_attributes","(work, chapter, location, options = {})",""],["set_current_user","ApplicationController","ApplicationController.html#method-i-set_current_user","()",""],["set_default_skin","Preference","Preference.html#method-i-set_default_skin","()",""],["set_depth","Comment","Comment.html#method-i-set_depth","()","<p>Set the depth of the comment: 0 for a first-class comment, increasing with\neach level of nesting\n"],["set_flash_cookie","ApplicationController","ApplicationController.html#method-i-set_flash_cookie","(key=nil, msg=nil)","<p>mark the flash as being set (called when flash is set)\n"],["set_format_for_date","DateHelper","DateHelper.html#method-i-set_format_for_date","(datetime)","<p>Use time_ago_in_words if less than a month ago, otherwise display date\n"],["set_instance_variables","WorksController","WorksController.html#method-i-set_instance_variables","()","<p>Sets values for @work, @chapter, @coauthor_results, @pseuds, and\n@selected_pseuds and @tags\n"],["set_instance_variables_tags","WorksController","WorksController.html#method-i-set_instance_variables_tags","()","<p>Sets values for @work and @tags\n"],["set_last_wrangler","Tag","Tag.html#method-i-set_last_wrangler","()",""],["set_limit","TagSetNominationsController","TagSetNominationsController.html#method-i-set_limit","()",""],["set_new_recipients","Work","Work.html#method-i-set_new_recipients","(gifts)",""],["set_owned_tag_sets","PromptRestriction","PromptRestriction.html#method-i-set_owned_tag_sets","(sets)",""],["set_parent","Comment","Comment.html#method-i-set_parent","()","<p>Save the ultimate parent\n"],["set_parented","TagNomination","TagNomination.html#method-i-set_parented","()",""],["set_preferred_locale","ApplicationController","ApplicationController.html#method-i-set_preferred_locale","()","<p>Sets the locale\n"],["set_pseud","Prompt","Prompt.html#method-i-set_pseud","()",""],["set_redirects","ApplicationController","ApplicationController.html#method-i-set_redirects","()",""],["set_revised_at","Work","Work.html#method-i-set_revised_at","(date=nil)",""],["set_site_skin","SkinsHelper","SkinsHelper.html#method-i-set_site_skin","()","<p>we use ||= here so the skin can be set already for previewing purposes\n"],["set_sort_order","ApplicationController","ApplicationController.html#method-i-set_sort_order","()",""],["set_stats_updated_at","AdminSetting","AdminSetting.html#method-c-set_stats_updated_at","(time)",""],["set_tag_set_nomination","CastNomination","CastNomination.html#method-i-set_tag_set_nomination","()",""],["set_tag_status","TagNomination","TagNomination.html#method-i-set_tag_status","()",""],["set_thread_for_replies","Comment","Comment.html#method-i-set_thread_for_replies","()","<p>The thread value for a reply comment should be the same as its parent\ncomment\n"],["set_time_zone","Challenge::GiftExchangeController","Challenge/GiftExchangeController.html#method-i-set_time_zone","()","<p>we use this to make the times get set in the moderator’s specified timezone\n"],["set_time_zone","Challenge::PromptMemeController","Challenge/PromptMemeController.html#method-i-set_time_zone","()","<p>we use this to make the times get set in the moderator’s specified timezone\n"],["set_up_generating","PotentialMatch","PotentialMatch.html#method-c-set_up_generating","(collection)",""],["set_url_status","ExternalWork","ExternalWork.html#method-i-set_url_status","()","<p>Sets the dead? attribute to true if the link is no longer active\n"],["set_word_count","Chapter","Chapter.html#method-i-set_word_count","()","<p>Set the value of word_count to reflect the length of the text in the\nchapter content\n"],["set_word_count","Work","Work.html#method-i-set_word_count","()","<p>Set the value of word_count to reflect the length of the chapter content\n"],["set_work_attributes","StoryParser","StoryParser.html#method-i-set_work_attributes","(work, location=\"\", options = {})",""],["setflash","ApplicationController","ApplicationController.html#method-i-setflash","(key=nil, msg=nil)","<p>aliasing setflash for set_flash_cookie def setflash (this is here in case\nsomeone is grepping for the …\n"],["setup_for_review","TagSetNominationsController","TagSetNominationsController.html#method-i-setup_for_review","()","<p>set up various variables for reviewing nominations\n"],["shift_chapter_attributes","StoryParser","StoryParser.html#method-i-shift_chapter_attributes","(work_params)","<p>Move and/or copy any meta attributes that need to be on the chapter rather\nthan on the work itself\n"],["should_exist?","FilterTagging","FilterTagging.html#method-i-should_exist-3F","()","<p>Is this a valid filter tagging that should actually exist?\n"],["show","AbuseReportsController","AbuseReportsController.html#method-i-show","()",""],["show","Admin::AdminUsersController","Admin/AdminUsersController.html#method-i-show","()","<p>GET admin/users/1 GET admin/users/1.xml\n"],["show","AdminPostsController","AdminPostsController.html#method-i-show","()","<p>GET /admin_posts/1 GET /admin_posts/1.xml\n"],["show","AdminsController","AdminsController.html#method-i-show","()","<p>GET /admins/1 GET /admins/1.xml\n"],["show","ArchiveFaqsController","ArchiveFaqsController.html#method-i-show","()","<p>GET /archive_faqs/1 GET /archive_faqs/1.xml\n"],["show","BookmarksController","BookmarksController.html#method-i-show","()","<p>GET    /:locale/bookmark/:id GET    /:locale/users/:user_id/bookmarks/:id\nGET    /:locale/works/:work_id/bookmark/ …\n"],["show","Challenge::GiftExchangeController","Challenge/GiftExchangeController.html#method-i-show","()",""],["show","Challenge::PromptMemeController","Challenge/PromptMemeController.html#method-i-show","()","<p>is actually a blank page - should it be redirected to collection profile?\n"],["show","ChallengeAssignmentsController","ChallengeAssignmentsController.html#method-i-show","()",""],["show","ChallengeClaimsController","ChallengeClaimsController.html#method-i-show","()",""],["show","ChallengeSignupsController","ChallengeSignupsController.html#method-i-show","()",""],["show","ChaptersController","ChaptersController.html#method-i-show","()","<p>GET /work/:work_id/chapters/:id GET /work/:work_id/chapters/:id.xml\n"],["show","CollectionProfileController","CollectionProfileController.html#method-i-show","()",""],["show","CollectionsController","CollectionsController.html#method-i-show","()",""],["show","CommentsController","CommentsController.html#method-i-show","()","<p>GET /comments/1 GET /comments/1.xml\n"],["show","DownloadsController","DownloadsController.html#method-i-show","()","<p>named route: download_path Note: only :id and :format need to be correct,\nthe other two are derived and …\n"],["show","ExternalWorksController","ExternalWorksController.html#method-i-show","()",""],["show","FandomsController","FandomsController.html#method-i-show","()",""],["show","InboxController","InboxController.html#method-i-show","()",""],["show","InvitationsController","InvitationsController.html#method-i-show","()",""],["show","InviteRequestsController","InviteRequestsController.html#method-i-show","()","<p>GET /invite_requests/1 GET /invite_requests/1.xml\n"],["show","KnownIssuesController","KnownIssuesController.html#method-i-show","()","<p>GET /known_issues/1 GET /known_issues/1.xml\n"],["show","KudosController","KudosController.html#method-i-show","()",""],["show","LanguagesController","LanguagesController.html#method-i-show","()",""],["show","LocalesController","LocalesController.html#method-i-show","()",""],["show","MediaController","MediaController.html#method-i-show","()",""],["show","Opendoors::ExternalAuthorsController","Opendoors/ExternalAuthorsController.html#method-i-show","()",""],["show","OwnedTagSetsController","OwnedTagSetsController.html#method-i-show","()",""],["show","PotentialMatchesController","PotentialMatchesController.html#method-i-show","()",""],["show","ProfileController","ProfileController.html#method-i-show","()",""],["show","PromptsController","PromptsController.html#method-i-show","()",""],["show","PseudsController","PseudsController.html#method-i-show","()","<p>GET /users/:user_id/pseuds/:id\n"],["show","RedirectController","RedirectController.html#method-i-show","()",""],["show","RelatedWorksController","RelatedWorksController.html#method-i-show","()","<p>GET /related_works/1 GET /related_works/1.xml\n"],["show","SeriesController","SeriesController.html#method-i-show","()","<p>GET /series/1 GET /series/1.xml\n"],["show","SkinsController","SkinsController.html#method-i-show","()",""],["show","Static::CollectionsController","Static/CollectionsController.html#method-i-show","()",""],["show","Static::FandomsController","Static/FandomsController.html#method-i-show","()",""],["show","Static::MediaController","Static/MediaController.html#method-i-show","()",""],["show","Static::RestrictedWorksController","Static/RestrictedWorksController.html#method-i-show","()",""],["show","Static::WorksController","Static/WorksController.html#method-i-show","()",""],["show","TagSetNominationsController","TagSetNominationsController.html#method-i-show","()",""],["show","TagWranglersController","TagWranglersController.html#method-i-show","()",""],["show","TagsController","TagsController.html#method-i-show","()","<p>if user is Admin or Tag Wrangler, show them details about the tag if user\nis not logged in or a regular …\n"],["show","TranslationNotesController","TranslationNotesController.html#method-i-show","()","<p>GET /translation_notes/1 GET /translation_notes/1.xml\n"],["show","TranslationsController","TranslationsController.html#method-i-show","()",""],["show","TranslatorsController","TranslatorsController.html#method-i-show","()",""],["show","UsersController","UsersController.html#method-i-show","()","<p>GET /users/1\n"],["show","WorksController","WorksController.html#method-i-show","()","<p>GET /works/1 GET /works/1.xml\n"],["show_advanced_skin?","SkinsHelper","SkinsHelper.html#method-i-show_advanced_skin-3F","(skin)",""],["show_auth_error","UserSessionsController","UserSessionsController.html#method-i-show_auth_error","()",""],["show_collection_preface","CollectionsHelper","CollectionsHelper.html#method-i-show_collection_preface","(collection)","<p>show collection preface if at least one section of the profile (or the\nparent collection’s profile) is …\n"],["show_collection_profile_navigation","CollectionsHelper","CollectionsHelper.html#method-i-show_collection_profile_navigation","(collection, section)","<p>show navigation to relevant sections of the profile if needed\n"],["show_collection_section","CollectionsHelper","CollectionsHelper.html#method-i-show_collection_section","(collection, section)","<p>show a section if it’s not empty or if the parent collection has it\n"],["show_collections_data","CollectionsHelper","CollectionsHelper.html#method-i-show_collections_data","(work)",""],["show_comments","CommentsController","CommentsController.html#method-i-show_comments","()",""],["show_comments_link","CommentsHelper","CommentsHelper.html#method-i-show_comments_link","(commentable)",""],["show_hidden","TagsController","TagsController.html#method-i-show_hidden","()",""],["show_hidden_tags_link","TagsHelper","TagsHelper.html#method-i-show_hidden_tags_link","(creation, tag_type)","<p>Link to show tags if they’re currently hidden\n"],["show_hide_comments_link","CommentsHelper","CommentsHelper.html#method-i-show_hide_comments_link","(commentable)","<p>return link to show or hide comments\n"],["show_hit_count?","WorksHelper","WorksHelper.html#method-i-show_hit_count-3F","(work)",""],["show_hit_count_to_public?","WorksHelper","WorksHelper.html#method-i-show_hit_count_to_public-3F","(work)",""],["show_multiple","WorksController","WorksController.html#method-i-show_multiple","()","<p>WORK ON MULTIPLE WORKS\n"],["show_options","OwnedTagSetsController","OwnedTagSetsController.html#method-i-show_options","()",""],["show_series_data","SeriesHelper","SeriesHelper.html#method-i-show_series_data","(work)",""],["show_work_notes?","WorksHelper","WorksHelper.html#method-i-show_work_notes-3F","(work)","<p>Returns true or false to determine whether the work notes module should\ndisplay\n"],["show_wrangling_dashboard","TagsHelper","TagsHelper.html#method-i-show_wrangling_dashboard","()",""],["signup_closed","ChallengeSignupsController","ChallengeSignupsController.html#method-i-signup_closed","()",""],["signup_closed","PromptsController","PromptsController.html#method-i-signup_closed","()",""],["signup_notification","UserMailer","UserMailer.html#method-i-signup_notification","(user_id)","<p>Asks a user to validate and activate their new account\n"],["signup_open","ChallengeAssignmentsController","ChallengeAssignmentsController.html#method-i-signup_open","()",""],["signup_open","PotentialMatchesController","PotentialMatchesController.html#method-i-signup_open","()",""],["signup_owner_only","ChallengeSignupsController","ChallengeSignupsController.html#method-i-signup_owner_only","()",""],["signup_owner_only","PromptsController","PromptsController.html#method-i-signup_owner_only","()",""],["singular","WorkSkin","WorkSkin.html#method-i-singular","()",""],["site_map","HomeController","HomeController.html#method-i-site_map","()","<p>site map\n"],["site_pages","HomeController","HomeController.html#method-i-site_pages","()","<p>Generate links to all the pages on the site\n"],["site_skins","AutocompleteController","AutocompleteController.html#method-i-site_skins","()","<p>skins for parenting\n"],["site_skins_dir","Skin","Skin.html#method-c-site_skins_dir","()",""],["skin_author_link","SkinsHelper","SkinsHelper.html#method-i-skin_author_link","(skin)",""],["skin_dir_entries","Skin","Skin.html#method-c-skin_dir_entries","(dir, regex)",""],["skin_dirname","Skin","Skin.html#method-i-skin_dirname","()","<p>get the directory name for the skin file\n"],["skin_preview_display","SkinsHelper","SkinsHelper.html#method-i-skin_preview_display","(skin)","<p>we only actually display an image if there’s a file\n"],["skins_dir","Skin","Skin.html#method-c-skins_dir","()",""],["sole_authored_works","User","User.html#method-i-sole_authored_works","()","<p>Returns array of works where the user is the sole author\n"],["sort_by_recent","Skin","Skin.html#method-c-sort_by_recent","()",""],["sort_by_recent_featured","Skin","Skin.html#method-c-sort_by_recent_featured","()",""],["sort_link","ApplicationHelper","ApplicationHelper.html#method-i-sort_link","(title, column=nil, options = {})","<p>Generates sorting links for index pages, with column names and directions\n"],["sorted_and_filtered","Collection","Collection.html#method-c-sorted_and_filtered","(sort, filters, page)",""],["sorted_authors","Work","Work.html#method-i-sorted_authors","()","<p>SORTING\n"],["sorted_pseuds","Work","Work.html#method-i-sorted_pseuds","()",""],["sorted_title","Work","Work.html#method-i-sorted_title","()",""],["span_if_current","ApplicationHelper","ApplicationHelper.html#method-i-span_if_current","(link_to_default_text, path, condition=nil)","<p>This is used to make the current page we’re on (determined by the path or\nby the specified condition) …\n"],["squish_name","Tag","Tag.html#method-i-squish_name","()",""],["standard_icon","UsersHelper","UsersHelper.html#method-i-standard_icon","(user=nil, pseud=nil)","<p>Determine which icon to show on user pages\n"],["stats_updated_at","AdminSetting","AdminSetting.html#method-c-stats_updated_at","()",""],["stats_view","StatsHelper","StatsHelper.html#method-i-stats_view","(view_type)",""],["store_location","ApplicationController","ApplicationController.html#method-i-store_location","()",""],["string","Tag","Tag.html#method-c-string","()","<p>Used for associations, such as work.fandoms.string Yields a comma-separated\nlist of tag names\n"],["strip_title","Chapter","Chapter.html#method-i-strip_title","()","<p>strip leading spaces from title\n"],["stylesheet_link","Skin","Skin.html#method-i-stylesheet_link","(file, media)",""],["sub_tag_string=","Tag","Tag.html#method-i-sub_tag_string-3D","(tag_string)",""],["sub_tag_tree","TagsHelper","TagsHelper.html#method-i-sub_tag_tree","(tag)","<p>Returns a nested list of sub tags\n"],["subject_text","Subscription","Subscription.html#method-i-subject_text","(creation)",""],["submit_button","ApplicationHelper","ApplicationHelper.html#method-i-submit_button","(form=nil, button_text=nil)",""],["submit_fieldset","ApplicationHelper","ApplicationHelper.html#method-i-submit_fieldset","(form=nil, button_text=nil)",""],["subscription_notification","UserMailer","UserMailer.html#method-i-subscription_notification","(user_id, subscription_id, creation_id, creation_class_name)",""],["summary","ChallengeSignupsController","ChallengeSignupsController.html#method-i-summary","()",""],["summary_dir","ChallengeSignup","ChallengeSignup.html#method-c-summary_dir","()",""],["summary_file","ChallengeSignup","ChallengeSignup.html#method-c-summary_file","(collection)",""],["suspend_filter_counts?","AdminSetting","AdminSetting.html#method-c-suspend_filter_counts-3F","()",""],["syn_string","Tag","Tag.html#method-i-syn_string","()",""],["syn_string=","Tag","Tag.html#method-i-syn_string-3D","(tag_string)",""],["synonyms","Tag","Tag.html#method-i-synonyms","()",""],["table_name_prefix","Opendoors","Opendoors.html#method-c-table_name_prefix","()",""],["tag","AutocompleteController","AutocompleteController.html#method-i-tag","()","<p>these are all basically duplicates but make our calls to autocomplete more\nreadable\n"],["tag_category_name","TagsHelper","TagsHelper.html#method-i-tag_category_name","(tag_type)","<p>Used on tag edit page\n"],["tag_cloud","TagsHelper","TagsHelper.html#method-i-tag_cloud","(tags, classes)","<p>Adds the appropriate css classes for the tag index page\n"],["tag_comment_as_spam_link","CommentsHelper","CommentsHelper.html#method-i-tag_comment_as_spam_link","(comment)","<p>return html link to mark/unmark comment as spam\n"],["tag_comment_link","TagsHelper","TagsHelper.html#method-i-tag_comment_link","(tag)",""],["tag_groups","ExternalWork","ExternalWork.html#method-i-tag_groups","()",""],["tag_groups","Prompt","Prompt.html#method-i-tag_groups","()","<p>tag groups\n"],["tag_groups","Series","Series.html#method-i-tag_groups","()",""],["tag_groups","Work","Work.html#method-i-tag_groups","()","<p>TAGGING Works are taggable objects.\n"],["tag_in_fandom","AutocompleteController","AutocompleteController.html#method-i-tag_in_fandom","()",""],["tag_link_list","TagsHelper","TagsHelper.html#method-i-tag_link_list","(tags, link_to_works=false)","<p>Takes an array of tags and returns a marked-up, comma-separated list of\nlinks to them\n"],["tag_list","AdminPost","AdminPost.html#method-i-tag_list","()",""],["tag_list","Prompt","Prompt.html#method-i-tag_list","(tags)","<p>Takes an array of tags and returns a comma-separated list, without the\nmarkup\n"],["tag_list","WorksController","WorksController.html#method-i-tag_list","(tags)","<p>Takes an array of tags and returns a comma-separated list, without the\nmarkup\n"],["tag_list=","AdminPost","AdminPost.html#method-i-tag_list-3D","(list)",""],["tag_relation_to_list","TagSetsHelper","TagSetsHelper.html#method-i-tag_relation_to_list","(tag_relation)",""],["tag_search_result","TagsHelper","TagsHelper.html#method-i-tag_search_result","(tag)","<p>Individual results for a tag search\n"],["tag_set_ids","PromptRestriction","PromptRestriction.html#method-i-tag_set_ids","()",""],["tag_sets_to_add","PromptRestriction","PromptRestriction.html#method-i-tag_sets_to_add","()",""],["tag_sets_to_add=","PromptRestriction","PromptRestriction.html#method-i-tag_sets_to_add-3D","(tag_set_titles)",""],["tag_sets_to_remove","PromptRestriction","PromptRestriction.html#method-i-tag_sets_to_remove","()",""],["tag_sets_to_remove=","PromptRestriction","PromptRestriction.html#method-i-tag_sets_to_remove-3D","(tag_set_ids)",""],["tag_string","Bookmark","Bookmark.html#method-i-tag_string","()",""],["tag_string=","Bookmark","Bookmark.html#method-i-tag_string-3D","(tag_string)",""],["tag_unlinked_list","Prompt","Prompt.html#method-i-tag_unlinked_list","()","<p>gets the list of tags for this prompt\n"],["tag_with_link_to_edit","TagsHelper","TagsHelper.html#method-i-tag_with_link_to_edit","(tag, options = {})",""],["tag_wrangler","User","User.html#method-i-tag_wrangler","()","<p>Is this user an authorized tag wrangler?\n"],["tag_wrangler=","User","User.html#method-i-tag_wrangler-3D","(should_be_tag_wrangler)","<p>Set tag wrangler role for this user and log change\n"],["tag_wrangler_footer","TagsHelper","TagsHelper.html#method-i-tag_wrangler_footer","()","<p>Displays a list of links for navigating the tag wrangling section of the\nsite\n"],["tag_wrangling_off?","AdminSetting","AdminSetting.html#method-c-tag_wrangling_off-3F","()",""],["taggable_list","TagsHelper","TagsHelper.html#method-i-taggable_list","(tag, controller_class)",""],["taglist","TagSet","TagSet.html#method-i-taglist","()",""],["tagnames","TagSet","TagSet.html#method-i-tagnames","()",""],["tagnames_must_exist","TagSet","TagSet.html#method-i-tagnames_must_exist","()",""],["tagnames_to_list","TagSet","TagSet.html#method-i-tagnames_to_list","(taglist, type=nil)","<p>protected\n"],["tagnames_to_remove","TagSet","TagSet.html#method-i-tagnames_to_remove","()",""],["tags","PromptRestriction","PromptRestriction.html#method-i-tags","(type=\"tag\")",""],["tags_in_set","OwnedTagSet","OwnedTagSet.html#method-i-tags_in_set","()","<p>returns an array of arrays [id, name]\n"],["tags_in_sets","AutocompleteController","AutocompleteController.html#method-i-tags_in_sets","()","<p>expects the following params:  :tag_set - tag set ids comma-separated\n:tag_type - tag type as a string …\n"],["text_byline","ApplicationHelper","ApplicationHelper.html#method-i-text_byline","(creation, options={})","<p>A plain text version of the byline, for when we don’t want to deliver a\nlinkified version.\n"],["time_ago_in_words","TranslationHelper","TranslationHelper.html#method-i-time_ago_in_words","(from_time, include_seconds = false)",""],["time_in_zone","ApplicationHelper","ApplicationHelper.html#method-i-time_in_zone","(time, zone=nil, user=User.current_user)",""],["times_nominated","TagNomination","TagNomination.html#method-i-times_nominated","(tag_set)",""],["title","ChallengeAssignment","ChallengeAssignment.html#method-i-title","()",""],["title","ChallengeClaim","ChallengeClaim.html#method-i-title","()",""],["title","CollectionItem","CollectionItem.html#method-i-title","()",""],["title_for_comment_page","CommentsHelper","CommentsHelper.html#method-i-title_for_comment_page","(commentable)",""],["title_required?","Prompt","Prompt.html#method-i-title_required-3F","()",""],["to_notify","RedisMailQueue","RedisMailQueue.html#method-c-to_notify","(notification_type)","<p>Return and empty the list of users to be notified for a given type of\nnotification\n"],["to_param","Collection","Collection.html#method-i-to_param","()",""],["to_param","Language","Language.html#method-i-to_param","()",""],["to_param","Locale","Locale.html#method-i-to_param","()","<p>FIXME: throws a method missing error in \nconfig/initializers/archive_config/locale.rb acts_as_authorizable …\n"],["to_param","People","People.html#method-i-to_param","()",""],["to_param","Pseud","Pseud.html#method-i-to_param","()",""],["to_param","Tag","Tag.html#method-i-to_param","()","<p>Use the tag name in urls and escape url-unfriendly characters\n"],["to_param","User","User.html#method-i-to_param","()",""],["to_s","ExternalAuthorName","ExternalAuthorName.html#method-i-to_s","()",""],["to_s","ExternalCreatorship","ExternalCreatorship.html#method-i-to_s","()",""],["to_s","TagSetAssociation","TagSetAssociation.html#method-i-to_s","()",""],["top_level?","Comment","Comment.html#method-i-top_level-3F","()","<p>Is this a first-class comment?\n"],["topmost_tag_type","GiftExchange","GiftExchange.html#method-i-topmost_tag_type","()",""],["topmost_tag_type","PromptRestriction","PromptRestriction.html#method-i-topmost_tag_type","()",""],["topmost_tag_type","TagSet","TagSet.html#method-i-topmost_tag_type","()","<p>returns the topmost tag type we have in this set\n"],["tos","HomeController","HomeController.html#method-i-tos","()","<p>terms of service\n"],["tos_faq","HomeController","HomeController.html#method-i-tos_faq","()","<p>terms of service faq\n"],["tos_field_name","UsersHelper","UsersHelper.html#method-i-tos_field_name","()","<p>Give the TOS field in the new user form a different name in non-production\nenvironments so that it can …\n"],["translation_admin","User","User.html#method-i-translation_admin","()","<p>Is this user an authorized translation admin?\n"],["translation_admin=","User","User.html#method-i-translation_admin-3D","(should_be_translation_admin)","<p>Set translator role for this user and log change\n"],["translation_status","TranslationHelper","TranslationHelper.html#method-i-translation_status","(main_translation, local_translation)","<p>Returns the status of a localized translation with a class for css styling\n"],["truncate_on_word_boundary","StoryParser","StoryParser.html#method-i-truncate_on_word_boundary","(text, max_length)",""],["type_validity","TagNomination","TagNomination.html#method-i-type_validity","()",""],["ultimate_parent","Comment","Comment.html#method-i-ultimate_parent","()",""],["unassigned","FandomsController","FandomsController.html#method-i-unassigned","()",""],["uncategorized","Media","Media.html#method-c-uncategorized","()","<p>The media tag for unwrangled fandoms\n"],["unclaim!","ExternalAuthor","ExternalAuthor.html#method-i-unclaim-21","()",""],["unclaimed","ExternalAuthor","ExternalAuthor.html#method-c-unclaimed","()",""],["uncover_default","ChallengeAssignmentsController","ChallengeAssignmentsController.html#method-i-uncover_default","()",""],["undefault","ChallengeAssignmentsController","ChallengeAssignmentsController.html#method-i-undefault","()",""],["unfulfilled?","Prompt","Prompt.html#method-i-unfulfilled-3F","()","<p>checks if a prompt has been filled in a prompt meme\n"],["unfulfilled_claims","Prompt","Prompt.html#method-i-unfulfilled_claims","()",""],["unfulfilled_in_collection","ChallengeAssignment","ChallengeAssignment.html#method-c-unfulfilled_in_collection","(collection)","<p>should be faster than unfulfilled scope because no giant left joins\n"],["unfulfilled_in_collection","ChallengeClaim","ChallengeClaim.html#method-c-unfulfilled_in_collection","(collection)","<p>should be faster than unfulfilled scope because no giant left joins\n"],["unique_tags","ChallengeSignup","ChallengeSignup.html#method-i-unique_tags","()",""],["unposted_for_user","ChallengeClaim","ChallengeClaim.html#method-c-unposted_for_user","(user)",""],["unposted_in_collection","ChallengeAssignment","ChallengeAssignment.html#method-c-unposted_in_collection","(collection)","<p>faster than unposted scope because no left join!\n"],["unposted_in_collection","ChallengeClaim","ChallengeClaim.html#method-c-unposted_in_collection","(collection)","<p>faster than unposted scope because no left join!\n"],["unposted_work","User","User.html#method-i-unposted_work","()","<p>Gets the user’s most recent unposted work\n"],["unposted_works","Pseud","Pseud.html#method-i-unposted_works","()",""],["unposted_works","User","User.html#method-i-unposted_works","()",""],["unprocessable_entity","ErrorsController","ErrorsController.html#method-i-unprocessable_entity","()",""],["unread_inbox_comments","User","User.html#method-i-unread_inbox_comments","()",""],["unread_inbox_comments_count","User","User.html#method-i-unread_inbox_comments_count","()",""],["unregister_imports","DevmodeController","DevmodeController.html#method-i-unregister_imports","()",""],["unrestricted","Work","Work.html#method-i-unrestricted","()",""],["unrestricted=","Work","Work.html#method-i-unrestricted-3D","(setting)",""],["unrevealed?","Collection","Collection.html#method-i-unrevealed-3F","()",""],["unrevealed?","Series","Series.html#method-i-unrevealed-3F","()",""],["unrevealed?","Work","Work.html#method-i-unrevealed-3F","(user=User.current_user)",""],["unreviewed","TagNomination","TagNomination.html#method-c-unreviewed","()",""],["unreviewed?","TagNomination","TagNomination.html#method-i-unreviewed-3F","()",""],["unreviewed?","TagSetNomination","TagSetNomination.html#method-i-unreviewed-3F","()","<p>Have NONE of the nominations been reviewed?\n"],["unreviewed_by_collection","CollectionItem","CollectionItem.html#method-c-unreviewed_by_collection","()",""],["unreviewed_by_user","CollectionItem","CollectionItem.html#method-c-unreviewed_by_user","()",""],["unset","SkinsController","SkinsController.html#method-i-unset","()",""],["unwrangleable_status","Tag","Tag.html#method-i-unwrangleable_status","()",""],["unwrangled","Fandom","Fandom.html#method-c-unwrangled","()",""],["unwrangled?","Tag","Tag.html#method-i-unwrangled-3F","()","<p>Instance methods that are common to all subclasses (may be overridden in\nthe subclass)\n"],["update","Admin::SettingsController","Admin/SettingsController.html#method-i-update","()","<p>PUT /admin_settings/1 PUT /admin_settings/1.xml\n"],["update","Admin::SkinsController","Admin/SkinsController.html#method-i-update","()",""],["update","AdminPostsController","AdminPostsController.html#method-i-update","()","<p>PUT /admin_posts/1 PUT /admin_posts/1.xml\n"],["update","ArchiveFaqsController","ArchiveFaqsController.html#method-i-update","()","<p>PUT /archive_faqs/1 PUT /archive_faqs/1.xml\n"],["update","BookmarksController","BookmarksController.html#method-i-update","()","<p>PUT /bookmarks/1 PUT /bookmarks/1.xml\n"],["update","Challenge::GiftExchangeController","Challenge/GiftExchangeController.html#method-i-update","()",""],["update","Challenge::PromptMemeController","Challenge/PromptMemeController.html#method-i-update","()",""],["update","ChallengeSignupsController","ChallengeSignupsController.html#method-i-update","()",""],["update","ChaptersController","ChaptersController.html#method-i-update","()","<p>PUT /work/:work_id/chapters/1 PUT /work/:work_id/chapters/1.xml\n"],["update","CollectionParticipantsController","CollectionParticipantsController.html#method-i-update","()",""],["update","CollectionsController","CollectionsController.html#method-i-update","()",""],["update","CommentsController","CommentsController.html#method-i-update","()","<p>PUT /comments/1 PUT /comments/1.xml\n"],["update","ExternalAuthorsController","ExternalAuthorsController.html#method-i-update","()",""],["update","ExternalWorksController","ExternalWorksController.html#method-i-update","()",""],["update","InboxController","InboxController.html#method-i-update","()",""],["update","InvitationsController","InvitationsController.html#method-i-update","()",""],["update","KnownIssuesController","KnownIssuesController.html#method-i-update","()","<p>PUT /known_issues/1 PUT /known_issues/1.xml\n"],["update","OwnedTagSetsController","OwnedTagSetsController.html#method-i-update","()",""],["update","PreferencesController","PreferencesController.html#method-i-update","()",""],["update","PromptsController","PromptsController.html#method-i-update","()",""],["update","PseudsController","PseudsController.html#method-i-update","()","<p>PUT /pseuds/1 PUT /pseuds/1.xml\n"],["update","RelatedWorksController","RelatedWorksController.html#method-i-update","()",""],["update","SeriesController","SeriesController.html#method-i-update","()","<p>PUT /series/1 PUT /series/1.xml\n"],["update","SkinsController","SkinsController.html#method-i-update","()",""],["update","TagNominationsController","TagNominationsController.html#method-i-update","()","<p>This gets called from the edit-in-place code for the tag set nominations\nreview page\n"],["update","TagSetNominationsController","TagSetNominationsController.html#method-i-update","()",""],["update","TagsController","TagsController.html#method-i-update","()",""],["update","TranslationNotesController","TranslationNotesController.html#method-i-update","()","<p>PUT /translation_notes/1 PUT /translation_notes/1.xml\n"],["update","TranslationsController","TranslationsController.html#method-i-update","()",""],["update","UserInviteRequestsController","UserInviteRequestsController.html#method-i-update","()","<p>PUT /user_invite_requests/1 PUT /user_invite_requests/1.xml\n"],["update","UsersController","UsersController.html#method-i-update","()",""],["update","WorksController","WorksController.html#method-i-update","()","<p>PUT /works/1\n"],["update_allowed_values","GiftExchange","GiftExchange.html#method-i-update_allowed_values","()",""],["update_allowed_values","PromptRestriction","PromptRestriction.html#method-i-update_allowed_values","()","<p>if anything is required make sure it is also allowed\n"],["update_child_parent_tagnames","FandomNomination","FandomNomination.html#method-i-update_child_parent_tagnames","()",""],["update_complete_status","Work","Work.html#method-i-update_complete_status","()",""],["update_feedback_in_inbox","CommentObserver","CommentObserver.html#method-i-update_feedback_in_inbox","(user, comment)",""],["update_filter_counts_since","FilterTagging","FilterTagging.html#method-c-update_filter_counts_since","(date)",""],["update_filters_for_canonical_change","Tag","Tag.html#method-i-update_filters_for_canonical_change","()","<p>If a tag was not canonical but is now, it needs new filter_taggings If it\nwas canonical but isn’t anymore, …\n"],["update_filters_for_merger_change","Tag","Tag.html#method-i-update_filters_for_merger_change","()","<p>If a tag has a new merger, add to the filter_taggings for that merger If a\ntag has a new merger but had …\n"],["update_major_version","Work","Work.html#method-i-update_major_version","()","<p>provide an interface to increment major version number resets minor_version\nto 0\n"],["update_minor_version","Work","Work.html#method-i-update_minor_version","()","<p>provide an interface to increment minor version number\n"],["update_multiple","ChallengeAssignmentsController","ChallengeAssignmentsController.html#method-i-update_multiple","()",""],["update_multiple","CollectionItemsController","CollectionItemsController.html#method-i-update_multiple","()",""],["update_multiple","TagSetAssociationsController","TagSetAssociationsController.html#method-i-update_multiple","()",""],["update_multiple","TagSetNominationsController","TagSetNominationsController.html#method-i-update_multiple","()","<p>update_multiple gets called from the index/review form.  we expect params\nlike “character_approve_My …\n"],["update_multiple","WorksController","WorksController.html#method-i-update_multiple","()",""],["update_or_create","Reading","Reading.html#method-c-update_or_create","(work, user)","<p>called from show in work controller\n"],["update_or_create_in_database","Reading","Reading.html#method-c-update_or_create_in_database","()","<p>called from rake\n"],["update_placeholder_assignments!","ChallengeAssignment","ChallengeAssignment.html#method-c-update_placeholder_assignments-21","(collection)","<p>create placeholders for any assignments left empty (this is for after\nmanual updates have left some users …\n"],["update_positions","ArchiveFaqsController","ArchiveFaqsController.html#method-i-update_positions","()","<p>reorder FAQs\n"],["update_positions","ChaptersController","ChaptersController.html#method-i-update_positions","()",""],["update_positions","SeriesController","SeriesController.html#method-i-update_positions","()",""],["update_tags","WorksController","WorksController.html#method-i-update_tags","()",""],["update_thread","Comment","Comment.html#method-i-update_thread","()","<p>We need a unique thread id for replies, so we’ll make use of the fact that\nids are unique\n"],["update_user","Admin::AdminUsersController","Admin/AdminUsersController.html#method-i-update_user","()","<p>POST admin/users/update_user\n"],["update_wrangler","CommonTagging","CommonTagging.html#method-i-update_wrangler","()",""],["update_wrangler","Tag","Tag.html#method-i-update_wrangler","(tag)",""],["url_required?","Prompt","Prompt.html#method-i-url_required-3F","()",""],["url_update","Opendoors::ToolsController","Opendoors/ToolsController.html#method-i-url_update","()","<p>Update the imported_from_url value on an existing AO3 work This is not\nRESTful but is IMO a better idea …\n"],["usable","OwnedTagSet","OwnedTagSet.html#method-c-usable","(user = User.current_user)",""],["usable","Skin","Skin.html#method-c-usable","()",""],["use_tinymce","ApplicationHelper","ApplicationHelper.html#method-i-use_tinymce","()","<p>Allow use of tiny_mce WYSIWYG editor\n"],["user","ChallengeSignup","ChallengeSignup.html#method-i-user","()",""],["user_allowed_to_destroy?","ChallengeClaim","ChallengeClaim.html#method-i-user_allowed_to_destroy-3F","(current_user)",""],["user_allowed_to_destroy?","ChallengeSignup","ChallengeSignup.html#method-i-user_allowed_to_destroy-3F","(current_user)",""],["user_allowed_to_destroy?","CollectionItem","CollectionItem.html#method-i-user_allowed_to_destroy-3F","(user)",""],["user_allowed_to_destroy?","CollectionParticipant","CollectionParticipant.html#method-i-user_allowed_to_destroy-3F","(user)",""],["user_allowed_to_promote?","CollectionParticipant","CollectionParticipant.html#method-i-user_allowed_to_promote-3F","(user, role)",""],["user_allowed_to_see?","ChallengeSignup","ChallengeSignup.html#method-i-user_allowed_to_see-3F","(current_user)",""],["user_allowed_to_see_claims?","PromptMeme","PromptMeme.html#method-i-user_allowed_to_see_claims-3F","(user)",""],["user_allowed_to_see_prompt?","GiftExchange","GiftExchange.html#method-i-user_allowed_to_see_prompt-3F","(user, prompt)",""],["user_allowed_to_see_requests_summary?","GiftExchange","GiftExchange.html#method-i-user_allowed_to_see_requests_summary-3F","(user)",""],["user_allowed_to_see_signups?","ChallengeSignup","ChallengeSignup.html#method-i-user_allowed_to_see_signups-3F","(user)",""],["user_allowed_to_see_signups?","PromptMeme","PromptMeme.html#method-i-user_allowed_to_see_signups-3F","(user)",""],["user_is_maintainer?","Collection","Collection.html#method-i-user_is_maintainer-3F","(user)",""],["user_is_moderator?","Collection","Collection.html#method-i-user_is_moderator-3F","(user)",""],["user_is_moderator?","OwnedTagSet","OwnedTagSet.html#method-i-user_is_moderator-3F","(user)",""],["user_is_owner?","Collection","Collection.html#method-i-user_is_owner-3F","(user)",""],["user_is_owner?","OwnedTagSet","OwnedTagSet.html#method-i-user_is_owner-3F","(user)","<p>MODERATOR/OWNER\n"],["user_is_participant?","Collection","Collection.html#method-i-user_is_participant-3F","(user)",""],["user_is_posting_participant?","Collection","Collection.html#method-i-user_is_posting_participant-3F","(user)",""],["user_logout_required","ApplicationController","ApplicationController.html#method-i-user_logout_required","()","<p>Filter method - prevents users from logging in as admin\n"],["user_name","Pseud","Pseud.html#method-i-user_name","()","<p>For use with the work and chapter forms\n"],["users_only","ApplicationController","ApplicationController.html#method-i-users_only","()","<p>Filter method to prevent admin users from accessing certain actions\n"],["valid_colors","Skin","Skin.html#method-i-valid_colors","()",""],["valid_font","Skin","Skin.html#method-i-valid_font","()",""],["valid_media","Skin","Skin.html#method-i-valid_media","()",""],["valid_public_preview","Skin","Skin.html#method-i-valid_public_preview","()",""],["valid_sort_column","ApplicationController","ApplicationController.html#method-i-valid_sort_column","(param, model='work')",""],["valid_sort_direction","ApplicationController","ApplicationController.html#method-i-valid_sort_direction","(param)",""],["validate_authors","Chapter","Chapter.html#method-i-validate_authors","()","<p>Checks that chapter has at least one author Skip the initial creation of\nthe first chapter, since that’s …\n"],["validate_authors","Work","Work.html#method-i-validate_authors","()","<p>Checks that work has at least one author\n"],["validate_date_of_birth","Profile","Profile.html#method-i-validate_date_of_birth","()","<p>Checks date of birth when user updates profile blank is okay as they\nalready checked that they were over …\n"],["validate_each","EmailVeracityValidator","EmailVeracityValidator.html#method-i-validate_each","(record,attribute,value)",""],["validate_each","UrlActiveValidator","UrlActiveValidator.html#method-i-validate_each","(record,attribute,value)","<p>Checks the status of the webpage at the given url To speed things up we\nONLY request the head and not …\n"],["validate_each","UrlFormatValidator","UrlFormatValidator.html#method-i-validate_each","(record,attribute,value)","<p>will be validated with active it if works just do a fast and dirty check.\n"],["validate_published_at","Chapter","Chapter.html#method-i-validate_published_at","()","<p>Checks the chapter published_at date isn’t in the future\n"],["validate_published_at","Work","Work.html#method-i-validate_published_at","()",""],["value_for_comment_form","CommentsHelper","CommentsHelper.html#method-i-value_for_comment_form","(commentable, comment)",""],["visibility_changed?","Work","Work.html#method-i-visibility_changed-3F","()","<p>Must be called before save\n"],["visible","ExternalWork","ExternalWork.html#method-i-visible","(user=User.current_user)","<p>FIXME - duplicate of above but called in different ways in different places\n"],["visible","OwnedTagSet","OwnedTagSet.html#method-c-visible","(user = User.current_user)",""],["visible","Series","Series.html#method-i-visible","(current_user=User.current_user)","<p>visibility aped from the work model\n"],["visible","Work","Work.html#method-c-visible","(user=User.current_user)","<p>Use the current user to determine what works are visible\n"],["visible","Work","Work.html#method-i-visible","(current_user=User.current_user)","<p>VISIBILITY\n"],["visible?","Bookmark","Bookmark.html#method-i-visible-3F","(current_user=User.current_user)",""],["visible?","ExternalWork","ExternalWork.html#method-i-visible-3F","(user=User.current_user)","<p>Visible unless we’re hidden by admin, in which case only an Admin can see.\n"],["visible?","Series","Series.html#method-i-visible-3F","(user=User.current_user)",""],["visible?","Work","Work.html#method-i-visible-3F","(user=User.current_user)",""],["visible_bookmarks_count","Tag","Tag.html#method-i-visible_bookmarks_count","()",""],["visible_external_works_count","Tag","Tag.html#method-i-visible_external_works_count","()",""],["visible_recs_count","Pseud","Pseud.html#method-i-visible_recs_count","()","<p>Gets the number of recs by this user\n"],["visible_taggables_count","Tag","Tag.html#method-i-visible_taggables_count","()",""],["visible_to_user","Work","Work.html#method-c-visible_to_user","(user=User.current_user)","<p>a complicated dynamic scope here: if the user is an Admin, we use the\n“visible_to_admin” scope …\n"],["visible_word_count","Series","Series.html#method-i-visible_word_count","()",""],["visible_work_count","Series","Series.html#method-i-visible_work_count","()",""],["visible_work_count","User","User.html#method-i-visible_work_count","()","<p>Gets the number of works by this user that the current user can see\n"],["visible_works_count","Pseud","Pseud.html#method-i-visible_works_count","()","<p>Gets the number of works by this user that the current user can see\n"],["visible_works_count","Tag","Tag.html#method-i-visible_works_count","()","<p>methods for counting visible\n"],["warning_display_name","TagsHelper","TagsHelper.html#method-i-warning_display_name","(name)","<p>Changes display name of warnings in works blurb\n"],["wip_length","Chapter","Chapter.html#method-i-wip_length","()","<p>Virtual attribute for work wip_length Chapter needed its own version for\nsense-checking purposes\n"],["wip_length","Work","Work.html#method-i-wip_length","()","<p>Virtual attribute for # of chapters\n"],["wip_length=","Chapter","Chapter.html#method-i-wip_length-3D","(number)","<p>Can’t directly access work from a chapter virtual attribute Using a\nplaceholder variable for edits, where …\n"],["wip_length=","Work","Work.html#method-i-wip_length-3D","(number)",""],["wipeout_unposted_works","User","User.html#method-i-wipeout_unposted_works","()","<p>removes ALL unposted works\n"],["with_popularity_relative_to_average","Tag","Tag.html#method-c-with_popularity_relative_to_average","(options = {})","<p>Get tags that are either above or below the average popularity\n"],["with_type","TagSet","TagSet.html#method-i-with_type","(type)",""],["with_type_from_redis","TagSet","TagSet.html#method-i-with_type_from_redis","(type)",""],["work_blurb_cache_key","CacheHelper","CacheHelper.html#method-i-work_blurb_cache_key","(work)",""],["work_count","Language","Language.html#method-i-work_count","()",""],["work_counts_for_pseuds","Pseud","Pseud.html#method-c-work_counts_for_pseuds","(pseuds)",""],["work_meta_cache_key","CacheHelper","CacheHelper.html#method-i-work_meta_cache_key","(work)",""],["work_meta_list","WorksHelper","WorksHelper.html#method-i-work_meta_list","(work, chapter=nil)","<p>List of date, chapter and length info for the work show page\n"],["work_parent_value","WorksHelper","WorksHelper.html#method-i-work_parent_value","(field)","<p>Passes value of fields for related works back to form when an error occurs\non posting\n"],["work_series_description","SeriesHelper","SeriesHelper.html#method-i-work_series_description","(work, series)",""],["work_skin_allowed","Work","Work.html#method-i-work_skin_allowed","()",""],["wrangle","TagWranglingsController","TagWranglingsController.html#method-i-wrangle","()",""],["wrangle","TagsController","TagsController.html#method-i-wrangle","()",""],["wrangler_list","TagsHelper","TagsHelper.html#method-i-wrangler_list","(wranglers, tag)",""],["README","","app/mailers/README.html","","<p>All mailers include Resque::Mailer\n<p>This uses the resque_mailer gem to send email asyncronously by default …\n"],["mimetype","","app/views/epub/mimetype.html","","<p>application/epub+zip\n"]]}}