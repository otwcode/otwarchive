<!-- prompt form -->
<div class="removeme">
<% # CODE NOTES: 
  # This is meant to be used as a nested form inside other forms, so that multiple prompts can be submitted within a single form. 
  # It is also meant to be used with javascript-based live adding (that is, not with ajax) which means locals will not be re-evaluated when it is added;
  #   keep this in mind when using the add_section code!
  # It expects a form being passed in as "form"
  # If the local variable "index" is passed in, that will represent which prompt this is, if there are multiple prompts being submitted
  # If the local variable "required" is passed in, this prompt is required
  # See the challenge_signup form for an example of how this is used. 
%>

<% index ||= "" %>
<% required ||= false %>
<% prompt_title = form.object.class.name %>
<% prompt_type = prompt_title.downcase %>
<% prompt_types = prompt_type.pluralize %>
<% restriction = @challenge.send("#{prompt_type}_restriction") %>

<fieldset class="tagset">
  <% if index.is_a? String %>
    <% prompt_title += " #{index}" %>
  <% else %>
    <% prompt_title += " #{(index + 1)}" %>
  <% end %>

  <legend><%= prompt_title %></legend>
  <h3><%= form.object.new_record? ? prompt_title : link_to(prompt_title, collection_prompt_path(@collection, form.object)) %></h3>  

  <div>
    <%= form.hidden_field :collection_id, :value => @collection.id %>
  </div>
  
  <dl>
    <!-- tags section -->
    <%= render "prompts/prompt_form_tag_options", :form => form, :restriction => restriction %>
    
    <% if restriction.url_allowed %>
    <dt<%= restriction.url_required ? ' class="required"' : '' %>>
      <% url_label = @challenge.send("#{prompt_type}_url_label") %>
      <%= form.label :url , (url_label.blank? ? ts("Prompt URL: ") : url_label) %>
    </dt>
    <dd><%= form.text_field :url, :size => 50 %></dd>
    <% end %>

    <% if restriction.description_allowed  %>
      <dt<%= restriction.description_required ? ' class="required"' : '' %>>
        <% desc_label = @challenge.send("#{prompt_type}_description_label") %>
        <%= form.label :description, (desc_label.blank? ? ts("Description: ") : desc_label) %>
      </dt>
      <dd><%= form.text_area :description, :rows => 6, :cols => 50 %></dd>
    <% end %>
    
    <% if restriction.optional_tags_allowed %>
      <% form.object.build_optional_tag_set unless form.object.optional_tag_set %>
      <%= form.fields_for :optional_tag_set_attributes do |optional_tag_set_form| %>
        <dt>
          <%= optional_tag_set_form.label :tagnames, ts("Optional Tags: ") %> <%= link_to_help("challenge-optional-tags-user")%>
        </dt>
        <dd>
          <%= optional_tag_set_form.text_field :tagnames, autocomplete_options("tag") %>
        </dd>
      <% end %>
    <% end %>
    
    <% if @collection.challenge.respond_to?(:anonymous) %>
      <% # REFACTOR: Anonymity should not be based on a type of challenge but on whether the specific challenge ALLOWS anonymity or not, 
         # (currently the prompt memes don't allow a mod to specify no anonymity allowed)
         # and should probably be done via an Anonymous user like the Orphan user.  
      %>
      <dt>
        <%= form.label :anonymous, ts("Semi-anonymous prompt (note, this is not totally secure, and is still guessable in some places): ") %>
        <% if form.object.new_record? %>
          <% anon = @challenge.anonymous %>
        <% else %>
          <% anon = form.object.anonymous %>
        <% end %>
      </dt>
      <dd><%= form.check_box :anonymous, :checked => anon %></dd>
    <% end %>

    <% unless required %>
      <dt class="landmark">Remove</dt>
      <!--FRONT END, DON'T FORGET TO READD SUBMIT AFTER SKINS-->
      <dd class="actions">
        <%= link_to_remove_section(ts("Remove?"), form) %>
        <noscript>
          <%= form.label "_destroy" do %>
            <%= ts("Remove?") %>
            <%= form.check_box "_destroy" %>
          <% end %>
        </noscript>
      </dd>
    <% end %>
     
  </dl>
</fieldset>
</div>

<!-- this div is used to hold the last id for adding new prompts via javascript -->
<div class="last_id" style="display:none;"><%= index.is_a?(String) ? index : index+1 %></div>

<!-- end of nested prompt form -->
