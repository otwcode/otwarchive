<h2><%= ts("Sign Up For %{title}", :title => @collection.title) %></h2>

<!-- descriptions-->
<!-- /descriptions-->
<!--subnavigation, sorting and actions-->
<!--/subnav-->

<!--main content-->

<% types = @challenge.class::PROMPT_TYPES.select {|t| @challenge.allowed(t) > @challenge.required(t)} %>
<% unless types.empty? %>
  <!-- noscript -->
    <fieldset>
      <legend><%= ts("Add Prompts") %></legend>
      <h3><%= ts("Add Prompts") %></h3>
      <p class="notes">
        <%= ts("Since you don't have Javascript turned on, please tell us how many #{types.to_sentence} you want to submit: ") %>
        <strong><br />HEY BACK END THIS SHOULD BE MADE NOSCRIPT AFTER INITIAL TESTING DON'T FORGET!</strong>
      </p>
      <%= form_tag({}, {:method => :get}) do %>
        <dl>
          <% types.each do |type| %>
            <dt><%= label_tag "num_#{type}", ts("#{type.classify.pluralize} (Up to %{allowed})", :allowed => @challenge.allowed(type)) %></dt>
            <dd><%= text_field_tag "num_#{type}", params["num_#{type}"] || @challenge.required(type), :class => "number" %></dd>
          <% end %>
        </dl>
        <p class="submit"><%= submit_tag ts('Update Form') %></p>
      <% end %>
    </fieldset>
  <!-- /noscript -->
<% end %>


<%= form_for([@collection, @challenge_signup], :url => (@challenge_signup.new_record? ? collection_signups_path(@collection) : collection_signup_path(@collection))) do |signup_form| %>
  <%= error_messages_for @challenge_signup %>

  <%= render "signup_form_general_information", :form => signup_form %>

  <% # requests and offers section %>
  <% @challenge.class::PROMPT_TYPES.each do |prompt_type| %>
  <fieldset>
    <legend><%= prompt_type.capitalize %></legend>
    <h3>
      <%= prompt_type.capitalize %> (<%= @challenge.allowed_range_string(prompt_type) %>)      
    </h3>
    <%=raw sanitize_field(@challenge, "signup_instructions_#{prompt_type}".to_sym) %>
    
    <% @challenge_signup.send("#{prompt_type}").each_with_index do |prompt, index| %>
      <%= signup_form.fields_for prompt_type.to_sym, prompt do |prompt_form| %>
        <%= render "prompts/prompt_form", :form => prompt_form, :index => index, :required => (index < @challenge.required(prompt_type)) %>
      <% end %>
    <% end %>
    
    <% if @challenge.allowed(prompt_type) > @challenge.required(prompt_type) %>
      <p class="navigation">
        <% linktext = ts("Add another %{type}? (Up to %{allowed} allowed.)", :type => prompt_type.singularize, :allowed => @challenge.allowed(prompt_type)) %>
        <%= link_to_add_section(linktext, signup_form, prompt_type.to_sym, "prompts/prompt_form", :required => false) %>
      </p>
    <% end %>

  </fieldset>
  <% end # requests & offers section %>

  <%= submit_fieldset signup_form %>

<% end %>

<!--/content-->

<!--subnav-->
<ul class="navigation" role="navigation">
  <li><%= link_to 'Back', @collection %></li>
</ul>
<!--/subnav-->
