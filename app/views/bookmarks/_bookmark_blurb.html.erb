<!-- This partial requires local variable 'bookmark' -->
<% bookmarkable = bookmark.bookmarkable %>
<li id="bookmark_<%= "#{bookmark.id}" %>" class="bookmark blurb group" role="article">

  <% if bookmarkable.blank? %>
    <p class="message"><%= "This has been deleted, sorry!" %></p>
  <% else %>
    <% bookmark_count = bookmarkable.bookmarks.is_public.count %>
    <p class="status" title="<%= bookmark_count %> Bookmarks">
      <%= get_symbol_for_bookmark(bookmark) %>
      <span class="count"><%=  (bookmark_count < 100) ? bookmark_count : '*' %></span>
    </p>

    <%= render "bookmarks/bookmarkable", :bookmarkable => bookmarkable %>   

    <!--summary-->
    <% unless bookmarkable.summary.blank? || (bookmarkable.respond_to?('unrevealed?') && bookmarkable.unrevealed?) %>
      <h6 class="landmark heading">Summary</h6>
      <blockquote class="userstuff summary" title="summary">
        <%=raw strip_images(sanitize_field(bookmarkable, :summary)) %>
      </blockquote>
    <% end %>

    <!--navigation and actions-->
    <ul class="navigation actions" role="navigation">
      <% if bookmark_count > 1 %>
        <li><%= link_to_bookmarkable_bookmarks(bookmarkable, ts('Bookmarked %{count} times', :count=>bookmark_count)) %></li>
      <% else %>
        <li><%= link_to_bookmarkable_bookmarks(bookmarkable, ts('Bookmarked %{count} time', :count=>bookmark_count)) %></li>
      <% end %>

      <% # let the user reading this bookmark save a copy for themselves %>
      <% if logged_in? && !is_author_of?(bookmark) %>
        <li>
          <% if (current_user_bookmark ||= bookmark_if_exists(bookmarkable)) %>
            <%= link_to ts("Saved"), edit_bookmark_path(current_user_bookmark), :id => "bookmark_form_trigger_for_#{bookmarkable.id}", :remote => true %>
          <% else %>
            <%= link_to ts("Save"), get_new_bookmark_path(bookmarkable), :id => "bookmark_form_trigger_for_#{bookmarkable.id}", :remote => true %>
          <% end %>
        </li>
      <% end %>

      <% if bookmark_count > 1 %>
        <% if params[:tag_id] || @most_recent_bookmarks %>
          <li id="recent_link_<%= "#{bookmark.bookmarkable_type.underscore}_#{bookmark.bookmarkable_id}" %>" style="display: none;" class="showme">
            <%= link_to ts("View most recent bookmarks"), 
              url_for({:controller => 'bookmarks', :action => 'fetch_recent', :id => bookmark.id }), :class => "actions", :remote => true %>
          </li>
        <% end %>
      <% end %>
    </ul>
    <!--/actions-->
    <!-- this div is only used if the user wants to save a copy of the bookmark -->
    <div class="dynamic" id="bookmark_form_placement_for_<%= bookmarkable.id %>"></div>
  <% end %>

  <div class="user module<% if is_author_of?(bookmark) %> own<% end %> group">
    <!--bookmarker, time-->
    <h5 class="byline heading">
      <%= ts("Last bookmarked by ") %>
      <%= link_to(bookmark.pseud.byline, user_pseud_path(bookmark.pseud.user, bookmark.pseud)) %>
    </h5>
    <p class="datetime"><%= set_format_for_date(bookmark.created_at) %></p>

    <!--tags-->
    <% unless bookmark.tag_string.blank? %>
      <h6 class="landmark heading"><%= ts("Tags") %></h6>
      <ul class="tags commas">
        <% bookmark.tags.each do |tag| %>
          <li><%= link_to(tag.name, link_to_tag_bookmarks(tag), :class => 'tag') %></li>
        <% end %>
      </ul>
    <% end %>

    <!--notes-->
    <% unless bookmark.notes.blank? %>
      <h6 class="landmark heading"><%= ts("Notes") %></h6>
      <blockquote class="userstuff notes" title="notes">
        <%=raw sanitize_field(bookmark, :notes) %>
      </blockquote>
    <% end %>

    <% unless bookmark.collections.blank? %>
      <h6 class="heading"><%= ts("Collections") %></h6>
      <ul class="meta commas">
        <% bookmark.collections.each do |coll|%>
          <li><%= link_to coll.title.html_safe, collection_path(coll) %></li>
        <% end %>
      </ul>
    <% end %>

    <!--navigation and actions-->
    <% if is_author_of?(bookmark) %>
      <%= render 'bookmarks/bookmark_owner_navi', :bookmark => bookmark %>
    <% elsif logged_in_as_admin? %>
      <%= render 'admin/admin_options', :item => bookmark %>
    <% end %>
  </div>

  <% # recent bookmarks will be loaded up here if requested %>
  <div class="dynamic" id="recent_<%= "#{bookmark.bookmarkable_type.underscore}_#{bookmark.bookmarkable_id}" %>"></div>

  <% if logged_in_as_admin? && bookmarkable.class == ExternalWork %>
    <%= render 'admin/admin_options', :item => bookmarkable %>
  <% end %>
</li>
