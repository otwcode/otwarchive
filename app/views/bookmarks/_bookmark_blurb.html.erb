<% # expects "bookmark" %>
<% bookmarkable = bookmark.bookmarkable %>
<li id="bookmark_<%= bookmark.id %>" class="bookmark blurb group" role="article">

	<% if bookmarkable.blank? %>
		<p class="message"><%= ts("This has been deleted, sorry!") %></p>
  <% else %>  
  	<!--bookmark icons-->
    <% bookmark_count = bookmarkable.public_bookmark_count %>
    <p class="status" title="<%= bookmark_count %> Bookmarks">
      <%= get_symbol_for_bookmark(bookmark) %>
      <span class="count"><%=  (bookmark_count < 100) ? link_to_bookmarkable_bookmarks(bookmarkable, bookmark_count.to_s) : link_to_bookmarkable_bookmarks(bookmarkable, '*') %></span>
		</p>
  
  	<!--bookmark item module-->
  	<%= render 'bookmarks/bookmark_item_module', :bookmarkable => bookmarkable %>
		
    <!--navigation and actions-->
    <% if (bookmark_count > 1 && (params[:tag_id] || @most_recent_bookmarks)) || (logged_in? && !is_author_of?(bookmark)) %>
    	<ul class="navigation actions" role="navigation">
      	<% # let the user reading this bookmark save a copy for themselves %>
      	<% if logged_in? && !is_author_of?(bookmark) %>
        	<li>
          	<% if (current_user_bookmark ||= bookmark_if_exists(bookmarkable)) %>
            	<%= link_to ts("Saved"), edit_bookmark_path(current_user_bookmark), :id => "bookmark_form_trigger_for_#{bookmarkable.id}", :remote => true %>
          	<% else %>
            	<%= link_to ts("Save"), get_new_bookmark_path(bookmarkable), :id => "bookmark_form_trigger_for_#{bookmarkable.id}", :remote => true %>
          	<% end %>
        	</li>
      	<% end %>

      	<% if bookmark_count > 1 %>
        	<% if params[:tag_id] || @most_recent_bookmarks %>
          	<li id="recent_link_<%= "#{bookmark.bookmarkable_type.underscore}_#{bookmark.bookmarkable_id}" %>" style="display: none;" class="showme">
            	<%= link_to ts("Show Most Recent Bookmarks"), 
              url_for({:controller => 'bookmarks', :action => 'fetch_recent', :id => bookmark.id }), :class => "actions", :remote => true %>
          	</li>
        	<% end %>
      	<% end %>
    	</ul>
    <% end %>
    
    <% # bookmark form loaded here if requested %>
    <div class="new dynamic" id="bookmark_form_placement_for_<%= bookmarkable.id %>"></div>
  <% end %>
    
	<%= render 'bookmarks/bookmark_user_module', :bookmark => bookmark %>

  <% # recent bookmarks will be loaded up here if requested %>
  <div class="recent dynamic" id="recent_<%= "#{bookmark.bookmarkable_type.underscore}_#{bookmark.bookmarkable_id}" %>"></div>

  <% if logged_in_as_admin? && bookmarkable.class == ExternalWork %>
    <%= render 'admin/admin_options', :item => bookmarkable %>
 <% end %>

</li>
