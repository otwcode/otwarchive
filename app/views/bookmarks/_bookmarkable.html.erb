<% 
# This renders an abbreviated blurb for the bookmarked item (a work, external work, or series)
# It requires the local "bookmarkable" 
# Note this is called only from the bookmark_blurb which checks whether the bookmarkable is nil,
# so we can assume that if we get here the bookmarkable exists.
%>
<div class="<%= bookmarkable.class.to_s.downcase %> module">
<% if bookmarkable.respond_to?(:unrevealed?) && bookmarkable.unrevealed? %>
  <%= render 'works/mystery_blurb', :item => bookmarkable, :unrevealed => true %>
<% else %>
  <div class="header module">
  <!--title, byline, fandom-->
    <h4 class="heading">
      <% if bookmarkable.respond_to?(:restricted) && bookmarkable.restricted %>
        <%= image_tag("lockblue.png", :size => "15x15", :alt => ts("(Restricted)"), :title => "Restricted") %>
      <% end %>
      <% if bookmarkable.respond_to?(:hidden_by_admin) && bookmarkable.hidden_by_admin %>
        <%= image_tag("lockred.png", :size => "15x15", :alt => ts("(Hidden by Admin)"), :title => "Hidden by Administrator") %>
      <% end %>
      <%= link_to bookmarkable.title.html_safe, bookmarkable %>
      <%= ts('by') %>
      <%= byline(bookmarkable) %>
    </h4>

    <% tag_groups = bookmarkable.tag_groups %>
    <h5 class="heading" title="fandom">
    <% if tag_groups['Fandom'] %>
      <%= tag_groups['Fandom'].collect{|tag| link_to(tag.name, link_to_tag_bookmarks(tag)) }.join(', ').html_safe %>
    <% else %>
      <%= ts('No Fandom') %>
    <% end %>
    </h5>
    <%= get_symbols_for(bookmarkable, tag_groups) %>

  </div>
  <!--tags-->
  <ul class="tags commas" title="tags">
    <%= blurb_tag_block(bookmarkable, tag_groups) %>
  </ul>
<% end %>
<% if bookmarkable.is_a?(ExternalWork) %>
 <p class="notice"><%= ts("This work isn't hosted on the Archive so this blurb might not be complete or accurate.") %></p>
<% end %>
</div>

